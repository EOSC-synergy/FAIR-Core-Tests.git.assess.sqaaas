{
    "meta": {
        "version": "3.2.1",
        "report_json_url": "https://raw.githubusercontent.com/eosc-synergy/FAIR-Core-Tests.git.assess.sqaaas/main/.report/assessment_output.json"
    },
    "repository": [
        {
            "url": "https://github.com/OSTrails/FAIR-Core-Tests.git",
            "name": "OSTrails/FAIR-Core-Tests",
            "tag": "main",
            "commit_id": "f63ef8fd2418c42fc49e859c76b3ac33d01f53ab",
            "is_main_repo": true,
            "avatar_url": "https://avatars.githubusercontent.com/u/162346243?v=4",
            "description": null,
            "languages": null,
            "topics": null,
            "stargazers_count": null,
            "watchers_count": null,
            "contributors_count": null,
            "forks_count": null,
            "badge_status": "no_badge"
        }
    ],
    "report": {
        "QC.Acc": {
            "valid": true,
            "subcriteria": {
                "QC.Acc01": {
                    "description": "Is the source code managed with a Version Control System?",
                    "requirement_level": "MUST",
                    "hint": "The source code shall be managed with Git and remain publicly available for this criterion to be successful. Please check <a href=\"https://git-scm.com/book/es/v2\" target=\"_blank\">Pro Git</a> docs about how to get started using Git tool. Guidelines provided by the most popular social coding platforms (<a href=\"https://docs.github.com/get-started\" target=\"_blank\">GitHub</a>, <a href=\"https://about.gitlab.com/get-started/\" target=\"_blank\">GitLab</a>) are also a good starting point",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "Source code uses Git for version control",
                            "plugin": {
                                "name": "report2sqaaas-plugin-boolean",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "git",
                                "lang": "scm",
                                "version": "2.34.1",
                                "docker": {
                                    "image": "bitnami/git:2.34.1",
                                    "reviewed": "2021-12-30"
                                },
                                "ci": {
                                    "name": "QC.Acc github.com/OSTrails/FAIR-Core-Tests git",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "git rev-parse --is-inside-work-tree "
                                    ],
                                    "stdout_text": "true",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/FAIR-Core-Tests.git.assess.sqaaas/job/main/1/execution/node/34/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/FAIR-Core-Tests.git.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {}
                        }
                    ],
                    "valid": true
                }
            },
            "coverage": {
                "percentage": 100,
                "total_subcriteria": 1,
                "success_subcriteria": 1
            }
        },
        "QC.Doc": {
            "valid": false,
            "subcriteria": {
                "QC.Doc06.1": {
                    "description": "Is the software scope outlined in the code repository?",
                    "requirement_level": "MUST",
                    "hint": "A README file presents your software to the audience interested in your software project. Several online sites simplify the task of creating the README file, such as <a href=\"https://www.makeareadme.com/\" target=\"_blank\">Make a README</a> or <a href=\"https://readme.so/\" target=\"_blank\">readme.so</a> sites. Be sure to add it to the code repository's root path",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "A README file is present in the code repository",
                            "plugin": {
                                "name": "report2sqaaas-plugin-find_doc_files",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "find_doc_files.py",
                                "lang": "Contribution-enabling Files",
                                "version": "latest",
                                "docker": {
                                    "dockerfile": "QC.Doc/Dockerfile",
                                    "reviewed": "2022-01-26"
                                },
                                "ci": {
                                    "name": "QC.Doc github.com/OSTrails/FAIR-Core-Tests find_doc_files.py",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "find_doc_files.py --file_type all"
                                    ],
                                    "stdout_text": "{\"README\": [{\"file_name\": \"README.md\", \"size\": 121}], \"CODE_OF_CONDUCT\": [], \"CONTRIBUTING\": []}",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/FAIR-Core-Tests.git.assess.sqaaas/job/main/1/execution/node/43/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/FAIR-Core-Tests.git.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {
                                "README": [
                                    {
                                        "file_name": "README.md",
                                        "size": 121
                                    }
                                ],
                                "CODE_OF_CONDUCT": [],
                                "CONTRIBUTING": []
                            }
                        }
                    ],
                    "valid": true
                },
                "QC.Doc06.3": {
                    "description": "Does the project establish a code of conduct for its participants?",
                    "requirement_level": "MUST",
                    "hint": "A CODE_OF_CONDUCT file sets the path for a constructive, respectful and positive atmosphere among all the contributors in your software project. Of course you can define your own, but in case you want to rely on external and widely-adopted code of conducts check out some of the most popular ones: <a href=\"https://contributor-covenant.org/\" target=\"_blank\">Contributor Covenant</a> or <a href=\"https://web.archive.org/web/20200330154000/http://citizencodeofconduct.org/\" target=\"_blank\">Citizen Code of Conduct</a>",
                    "evidence": [
                        {
                            "valid": false,
                            "message": "A CODE_OF_CONDUCT file is not present in the code repository",
                            "plugin": {
                                "name": "report2sqaaas-plugin-find_doc_files",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "find_doc_files.py",
                                "lang": "Contribution-enabling Files",
                                "version": "latest",
                                "docker": {
                                    "dockerfile": "QC.Doc/Dockerfile",
                                    "reviewed": "2022-01-26"
                                },
                                "ci": {
                                    "name": "QC.Doc github.com/OSTrails/FAIR-Core-Tests find_doc_files.py",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "find_doc_files.py --file_type all"
                                    ],
                                    "stdout_text": "{\"README\": [{\"file_name\": \"README.md\", \"size\": 121}], \"CODE_OF_CONDUCT\": [], \"CONTRIBUTING\": []}",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/FAIR-Core-Tests.git.assess.sqaaas/job/main/1/execution/node/43/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/FAIR-Core-Tests.git.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {
                                "README": [
                                    {
                                        "file_name": "README.md",
                                        "size": 121
                                    }
                                ],
                                "CODE_OF_CONDUCT": [],
                                "CONTRIBUTING": []
                            }
                        }
                    ],
                    "valid": false,
                    "required_for_next_level_badge": true
                },
                "QC.Doc06.2": {
                    "description": "Is there a clear path or guidelines on how to contribute to the code?",
                    "requirement_level": "MUST",
                    "hint": "A CONTRIBUTING file shall be present in the root path of the code repository describing the expected workflow to follow when adding contributions. Please check <a href=\"https://mozillascience.github.io/working-open-workshop/contributing/\" target=\"_blank\">Mozilla's guidelines</a> and <a href=\"https://github.com/github/docs/blob/main/CONTRIBUTING.md\" target=\"_blank\">GitHub's CONTRIBUTING.md example</a> to get inspired on how to write a good CONTRIBUTING file",
                    "evidence": [
                        {
                            "valid": false,
                            "message": "A CONTRIBUTING file is not present in the code repository",
                            "plugin": {
                                "name": "report2sqaaas-plugin-find_doc_files",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "find_doc_files.py",
                                "lang": "Contribution-enabling Files",
                                "version": "latest",
                                "docker": {
                                    "dockerfile": "QC.Doc/Dockerfile",
                                    "reviewed": "2022-01-26"
                                },
                                "ci": {
                                    "name": "QC.Doc github.com/OSTrails/FAIR-Core-Tests find_doc_files.py",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "find_doc_files.py --file_type all"
                                    ],
                                    "stdout_text": "{\"README\": [{\"file_name\": \"README.md\", \"size\": 121}], \"CODE_OF_CONDUCT\": [], \"CONTRIBUTING\": []}",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/FAIR-Core-Tests.git.assess.sqaaas/job/main/1/execution/node/43/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/FAIR-Core-Tests.git.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {
                                "README": [
                                    {
                                        "file_name": "README.md",
                                        "size": 121
                                    }
                                ],
                                "CODE_OF_CONDUCT": [],
                                "CONTRIBUTING": []
                            }
                        }
                    ],
                    "valid": false,
                    "required_for_next_level_badge": true
                },
                "QC.Doc01.1": {
                    "description": "Are docs managed in the same repository as code?",
                    "requirement_level": "MAY",
                    "hint": "This subcriterion will succeed if the documentation files exist on the same repository as the source code, e.g. under a <code>docs/</code> folder",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "Documentation resides in the same repository as code",
                            "plugin": {
                                "name": "report2sqaaas-plugin-boolean",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "git",
                                "lang": null,
                                "version": null,
                                "docker": null,
                                "ci": {
                                    "name": "QC.Doc github.com/OSTrails/FAIR-Core-Tests git",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "git rev-parse --is-inside-work-tree "
                                    ],
                                    "stdout_text": "true",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/FAIR-Core-Tests.git.assess.sqaaas/job/main/1/execution/node/52/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/FAIR-Core-Tests.git.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {}
                        }
                    ],
                    "valid": true
                },
                "QC.Doc02.X": {
                    "description": "Are docs following a style for the Markdown markup language?",
                    "requirement_level": "MAY",
                    "hint": "When using a docs-as-code approach, the style of the markup language is being checked. SQAaaS relies on <a href=\"https://github.com/markdownlint/markdownlint/\" target=\"_blank\">markdownlint</a> for Markdown files and <a href=\"https://github.com/twolfson/restructuredtext-lint/\" target=\"_blank\">restructuredtext-lint</a> for reStructuredText",
                    "evidence": [
                        {
                            "valid": false,
                            "message": "Docs are not fully compliant with markdownlint standard",
                            "plugin": {
                                "name": "report2sqaaas-plugin-markdownlint",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "markdownlint",
                                "lang": "Markdown",
                                "version": "0.11.0",
                                "docker": {
                                    "dockerfile": "QC.Doc/markdownlint/Dockerfile",
                                    "reviewed": "1970-01-01"
                                },
                                "ci": {
                                    "name": "QC.Doc github.com/OSTrails/FAIR-Core-Tests markdownlint",
                                    "status": "FAILED",
                                    "stdout_command": [
                                        "mdl --json  ."
                                    ],
                                    "stdout_text": "[{\"filename\":\"./README.md\",\"line\":2,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./README.md\",\"line\":1,\"rule\":\"MD022\",\"aliases\":[\"blanks-around-headers\"],\"description\":\"Headers should be surrounded by blank lines\"}]",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/FAIR-Core-Tests.git.assess.sqaaas/job/main/1/execution/node/61/log?consoleFull"
                                },
                                "level": "RECOMMENDED",
                                "build_repo": "https://github.com/eosc-synergy/FAIR-Core-Tests.git.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {
                                "./README.md": {
                                    "MD013": {
                                        "description": "Line length",
                                        "line": [
                                            2
                                        ]
                                    },
                                    "MD022": {
                                        "description": "Headers should be surrounded by blank lines",
                                        "line": [
                                            1
                                        ]
                                    }
                                }
                            }
                        }
                    ],
                    "valid": false,
                    "required_for_next_level_badge": false
                }
            },
            "coverage": {
                "percentage": 40,
                "total_subcriteria": 5,
                "success_subcriteria": 2
            }
        },
        "QC.Lic": {
            "valid": true,
            "subcriteria": {
                "QC.Lic01": {
                    "description": "Is code licensed to be freely used, modified and distributed by others?",
                    "requirement_level": "MUST",
                    "hint": "<p>Your source code repository shall be distributed under an open source license for this subcriterion to pass successfully. Be sure to have a license file present in the code repository matching the name <code>LICENSE</code> with optional extensions (depending on the format used): <code>[.md|.rst|.txt]</code>.</p><p>Valid licenses are any of those approved either by the <a href=\"https://opensource.org/licenses\" target=\"_blank\">Open Source Initiative</a> and/or the Free Software Foundation <a href=\"https://www.gnu.org/licenses/license-list.html\" target=\"_blank\"></a>. You can also check the <a href=\"https://choosealicense.com/\" target=\"_blank\">choosealicense.com</a> site</p>",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "An Open Source license found in the code repository: MIT",
                            "plugin": {
                                "name": "report2sqaaas-plugin-licensee",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "licensee",
                                "lang": "license",
                                "version": "9.17.0",
                                "docker": {
                                    "image": "eoscsynergy/sqaaas-licensee:9.17.0",
                                    "reviewed": "2021-06-28"
                                },
                                "ci": {
                                    "name": "QC.Lic github.com/OSTrails/FAIR-Core-Tests licensee",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "licensee detect . --confidence 60 --json "
                                    ],
                                    "stdout_text": "{\"licenses\":[{\"key\":\"mit\",\"spdx_id\":\"MIT\",\"meta\":{\"title\":\"MIT License\",\"source\":\"https://spdx.org/licenses/MIT.html\",\"description\":\"A short and simple permissive license with conditions only requiring preservation of copyright and license notices. Licensed works, modifications, and larger works may be distributed under different terms and without source code.\",\"how\":\"Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file. Replace [year] with the current year and [fullname] with the name (or names) of the copyright holders.\",\"using\":{\"Babel\":\"https://github.com/babel/babel/blob/master/LICENSE\",\".NET\":\"https://github.com/dotnet/runtime/blob/main/LICENSE.TXT\",\"Rails\":\"https://github.com/rails/rails/blob/master/MIT-LICENSE\"},\"featured\":true,\"hidden\":false,\"nickname\":null,\"note\":null},\"url\":\"http://choosealicense.com/licenses/mit/\",\"rules\":{\"permissions\":[{\"tag\":\"commercial-use\",\"label\":\"Commercial use\",\"description\":\"The licensed material and derivatives may be used for commercial purposes.\"},{\"tag\":\"modifications\",\"label\":\"Modification\",\"description\":\"The licensed material may be modified.\"},{\"tag\":\"distribution\",\"label\":\"Distribution\",\"description\":\"The licensed material may be distributed.\"},{\"tag\":\"private-use\",\"label\":\"Private use\",\"description\":\"The licensed material may be used and modified in private.\"}],\"conditions\":[{\"tag\":\"include-copyright\",\"label\":\"License and copyright notice\",\"description\":\"A copy of the license and copyright notice must be included with the licensed material.\"}],\"limitations\":[{\"tag\":\"liability\",\"label\":\"Liability\",\"description\":\"This license includes a limitation of liability.\"},{\"tag\":\"warranty\",\"label\":\"Warranty\",\"description\":\"This license explicitly states that it does NOT provide any warranty.\"}]},\"fields\":[{\"name\":\"year\",\"description\":\"The current year\"},{\"name\":\"fullname\",\"description\":\"The full name or username of the repository owner\"}],\"other\":false,\"gpl\":false,\"lgpl\":false,\"cc\":false}],\"matched_files\":[{\"filename\":\"LICENSE\",\"content\":\"MIT License\\n\\nCopyright (c) 2024 Wilkinson Laboratory for Biological Informatics\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \\\"Software\\\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n\",\"content_hash\":\"4c2c763d64bbc7ef2e58b0ec6d06d90cee9755c9\",\"content_normalized\":\"permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'software'), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions: the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software. the software is provided 'as is', without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.\",\"matcher\":{\"name\":\"exact\",\"confidence\":100},\"matched_license\":\"MIT\",\"attribution\":\"Copyright (c) 2024 Wilkinson Laboratory for Biological Informatics\"},{\"filename\":\"fair-core-tests.gemspec\",\"content\":\"# frozen_string_literal: true\\n\\n# require_relative \\\"tests\\\"\\n\\nGem::Specification.new do |spec|\\n  spec.name = 'fair-core-tests'\\n  spec.version = 1\\n  spec.authors = ['Mark Wilkinson']\\n  spec.email = ['markw@illuminae.com']\\n\\n  spec.summary = 'Gen3 FAIR Tests for the OS Trails project.'\\n  spec.description = 'Gen3 FAIR Tests for the OS Trails project'\\n  spec.homepage = 'https://github.com/markwilkinson/FAIR-Core-Tests'\\n  spec.license = 'MIT'\\n  spec.required_ruby_version = '>= 3.0'\\n\\n  spec.metadata['allowed_push_host'] = 'https://example.com'\\n\\n  spec.metadata['homepage_uri'] = spec.homepage\\n  spec.metadata['source_code_uri'] = spec.homepage\\n  spec.metadata['changelog_uri'] = spec.homepage + '/blob/master/CHANGELOG.md'\\n\\n  # Specify which files should be added to the gem when it is released.\\n  # The `git ls-files -z` loads the files in the RubyGem that have been added into git.\\n  spec.files = Dir.chdir(File.expand_path(__dir__)) do\\n    `git ls-files -z`.split(\\\"\\\\x0\\\").reject do |f|\\n      (f == __FILE__) || f.match(%r{\\\\A(?:(?:test|spec|features)/|\\\\.(?:git|travis|circleci)|appveyor)})\\n    end\\n  end\\n  spec.bindir = 'exe'\\n  spec.executables = spec.files.grep(%r{\\\\Aexe/}) { |f| File.basename(f) }\\n  # spec.require_paths = []\\n\\n  # Uncomment to register a new dependency of your gem\\n  # spec.add_dependency \\\"example-gem\\\", \\\"~> 1.0\\\"\\n\\n  # For more information and examples about making a new gem, checkout our\\n  # guide at: https://bundler.io/guides/creating_gem.html\\nend\\n\",\"content_hash\":null,\"content_normalized\":null,\"matcher\":{\"name\":\"gemspec\",\"confidence\":90},\"matched_license\":\"MIT\",\"attribution\":null}]}",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/FAIR-Core-Tests.git.assess.sqaaas/job/main/1/execution/node/70/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/FAIR-Core-Tests.git.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {
                                "licenses": [
                                    {
                                        "key": "mit",
                                        "spdx_id": "MIT",
                                        "meta": {
                                            "title": "MIT License",
                                            "source": "https://spdx.org/licenses/MIT.html",
                                            "description": "A short and simple permissive license with conditions only requiring preservation of copyright and license notices. Licensed works, modifications, and larger works may be distributed under different terms and without source code.",
                                            "how": "Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file. Replace [year] with the current year and [fullname] with the name (or names) of the copyright holders.",
                                            "using": {
                                                "Babel": "https://github.com/babel/babel/blob/master/LICENSE",
                                                ".NET": "https://github.com/dotnet/runtime/blob/main/LICENSE.TXT",
                                                "Rails": "https://github.com/rails/rails/blob/master/MIT-LICENSE"
                                            },
                                            "featured": true,
                                            "hidden": false,
                                            "nickname": null,
                                            "note": null
                                        },
                                        "url": "http://choosealicense.com/licenses/mit/",
                                        "rules": {
                                            "permissions": [
                                                {
                                                    "tag": "commercial-use",
                                                    "label": "Commercial use",
                                                    "description": "The licensed material and derivatives may be used for commercial purposes."
                                                },
                                                {
                                                    "tag": "modifications",
                                                    "label": "Modification",
                                                    "description": "The licensed material may be modified."
                                                },
                                                {
                                                    "tag": "distribution",
                                                    "label": "Distribution",
                                                    "description": "The licensed material may be distributed."
                                                },
                                                {
                                                    "tag": "private-use",
                                                    "label": "Private use",
                                                    "description": "The licensed material may be used and modified in private."
                                                }
                                            ],
                                            "conditions": [
                                                {
                                                    "tag": "include-copyright",
                                                    "label": "License and copyright notice",
                                                    "description": "A copy of the license and copyright notice must be included with the licensed material."
                                                }
                                            ],
                                            "limitations": [
                                                {
                                                    "tag": "liability",
                                                    "label": "Liability",
                                                    "description": "This license includes a limitation of liability."
                                                },
                                                {
                                                    "tag": "warranty",
                                                    "label": "Warranty",
                                                    "description": "This license explicitly states that it does NOT provide any warranty."
                                                }
                                            ]
                                        },
                                        "fields": [
                                            {
                                                "name": "year",
                                                "description": "The current year"
                                            },
                                            {
                                                "name": "fullname",
                                                "description": "The full name or username of the repository owner"
                                            }
                                        ],
                                        "other": false,
                                        "gpl": false,
                                        "lgpl": false,
                                        "cc": false
                                    }
                                ],
                                "matched_files": [
                                    {
                                        "filename": "LICENSE",
                                        "content": "MIT License\n\nCopyright (c) 2024 Wilkinson Laboratory for Biological Informatics\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                                        "content_hash": "4c2c763d64bbc7ef2e58b0ec6d06d90cee9755c9",
                                        "content_normalized": "permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'software'), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions: the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software. the software is provided 'as is', without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.",
                                        "matcher": {
                                            "name": "exact",
                                            "confidence": 100
                                        },
                                        "matched_license": "MIT",
                                        "attribution": "Copyright (c) 2024 Wilkinson Laboratory for Biological Informatics"
                                    },
                                    {
                                        "filename": "fair-core-tests.gemspec",
                                        "content": "# frozen_string_literal: true\n\n# require_relative \"tests\"\n\nGem::Specification.new do |spec|\n  spec.name = 'fair-core-tests'\n  spec.version = 1\n  spec.authors = ['Mark Wilkinson']\n  spec.email = ['markw@illuminae.com']\n\n  spec.summary = 'Gen3 FAIR Tests for the OS Trails project.'\n  spec.description = 'Gen3 FAIR Tests for the OS Trails project'\n  spec.homepage = 'https://github.com/markwilkinson/FAIR-Core-Tests'\n  spec.license = 'MIT'\n  spec.required_ruby_version = '>= 3.0'\n\n  spec.metadata['allowed_push_host'] = 'https://example.com'\n\n  spec.metadata['homepage_uri'] = spec.homepage\n  spec.metadata['source_code_uri'] = spec.homepage\n  spec.metadata['changelog_uri'] = spec.homepage + '/blob/master/CHANGELOG.md'\n\n  # Specify which files should be added to the gem when it is released.\n  # The `git ls-files -z` loads the files in the RubyGem that have been added into git.\n  spec.files = Dir.chdir(File.expand_path(__dir__)) do\n    `git ls-files -z`.split(\"\\x0\").reject do |f|\n      (f == __FILE__) || f.match(%r{\\A(?:(?:test|spec|features)/|\\.(?:git|travis|circleci)|appveyor)})\n    end\n  end\n  spec.bindir = 'exe'\n  spec.executables = spec.files.grep(%r{\\Aexe/}) { |f| File.basename(f) }\n  # spec.require_paths = []\n\n  # Uncomment to register a new dependency of your gem\n  # spec.add_dependency \"example-gem\", \"~> 1.0\"\n\n  # For more information and examples about making a new gem, checkout our\n  # guide at: https://bundler.io/guides/creating_gem.html\nend\n",
                                        "content_hash": null,
                                        "content_normalized": null,
                                        "matcher": {
                                            "name": "gemspec",
                                            "confidence": 90
                                        },
                                        "matched_license": "MIT",
                                        "attribution": null
                                    }
                                ]
                            }
                        }
                    ],
                    "valid": true
                },
                "QC.Lic01.1": {
                    "description": "Is LICENSE file placed in the root path of the code repository?",
                    "requirement_level": "MUST",
                    "hint": "Most social coding platforms require the license file to placed in the root path of the code repository, so it is a good practice to use this location by default. Allowed file names are <code>LICENSE</code>, <code>LICENSE.md</code>, <code>LICENSE.rst</code>, <code>LICENSE.txt</code>",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "LICENSE file is visible at the root path of the code repository: LICENSE",
                            "plugin": {
                                "name": "report2sqaaas-plugin-licensee",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "licensee",
                                "lang": "license",
                                "version": "9.17.0",
                                "docker": {
                                    "image": "eoscsynergy/sqaaas-licensee:9.17.0",
                                    "reviewed": "2021-06-28"
                                },
                                "ci": {
                                    "name": "QC.Lic github.com/OSTrails/FAIR-Core-Tests licensee",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "licensee detect . --confidence 60 --json "
                                    ],
                                    "stdout_text": "{\"licenses\":[{\"key\":\"mit\",\"spdx_id\":\"MIT\",\"meta\":{\"title\":\"MIT License\",\"source\":\"https://spdx.org/licenses/MIT.html\",\"description\":\"A short and simple permissive license with conditions only requiring preservation of copyright and license notices. Licensed works, modifications, and larger works may be distributed under different terms and without source code.\",\"how\":\"Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file. Replace [year] with the current year and [fullname] with the name (or names) of the copyright holders.\",\"using\":{\"Babel\":\"https://github.com/babel/babel/blob/master/LICENSE\",\".NET\":\"https://github.com/dotnet/runtime/blob/main/LICENSE.TXT\",\"Rails\":\"https://github.com/rails/rails/blob/master/MIT-LICENSE\"},\"featured\":true,\"hidden\":false,\"nickname\":null,\"note\":null},\"url\":\"http://choosealicense.com/licenses/mit/\",\"rules\":{\"permissions\":[{\"tag\":\"commercial-use\",\"label\":\"Commercial use\",\"description\":\"The licensed material and derivatives may be used for commercial purposes.\"},{\"tag\":\"modifications\",\"label\":\"Modification\",\"description\":\"The licensed material may be modified.\"},{\"tag\":\"distribution\",\"label\":\"Distribution\",\"description\":\"The licensed material may be distributed.\"},{\"tag\":\"private-use\",\"label\":\"Private use\",\"description\":\"The licensed material may be used and modified in private.\"}],\"conditions\":[{\"tag\":\"include-copyright\",\"label\":\"License and copyright notice\",\"description\":\"A copy of the license and copyright notice must be included with the licensed material.\"}],\"limitations\":[{\"tag\":\"liability\",\"label\":\"Liability\",\"description\":\"This license includes a limitation of liability.\"},{\"tag\":\"warranty\",\"label\":\"Warranty\",\"description\":\"This license explicitly states that it does NOT provide any warranty.\"}]},\"fields\":[{\"name\":\"year\",\"description\":\"The current year\"},{\"name\":\"fullname\",\"description\":\"The full name or username of the repository owner\"}],\"other\":false,\"gpl\":false,\"lgpl\":false,\"cc\":false}],\"matched_files\":[{\"filename\":\"LICENSE\",\"content\":\"MIT License\\n\\nCopyright (c) 2024 Wilkinson Laboratory for Biological Informatics\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \\\"Software\\\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n\",\"content_hash\":\"4c2c763d64bbc7ef2e58b0ec6d06d90cee9755c9\",\"content_normalized\":\"permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'software'), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions: the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software. the software is provided 'as is', without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.\",\"matcher\":{\"name\":\"exact\",\"confidence\":100},\"matched_license\":\"MIT\",\"attribution\":\"Copyright (c) 2024 Wilkinson Laboratory for Biological Informatics\"},{\"filename\":\"fair-core-tests.gemspec\",\"content\":\"# frozen_string_literal: true\\n\\n# require_relative \\\"tests\\\"\\n\\nGem::Specification.new do |spec|\\n  spec.name = 'fair-core-tests'\\n  spec.version = 1\\n  spec.authors = ['Mark Wilkinson']\\n  spec.email = ['markw@illuminae.com']\\n\\n  spec.summary = 'Gen3 FAIR Tests for the OS Trails project.'\\n  spec.description = 'Gen3 FAIR Tests for the OS Trails project'\\n  spec.homepage = 'https://github.com/markwilkinson/FAIR-Core-Tests'\\n  spec.license = 'MIT'\\n  spec.required_ruby_version = '>= 3.0'\\n\\n  spec.metadata['allowed_push_host'] = 'https://example.com'\\n\\n  spec.metadata['homepage_uri'] = spec.homepage\\n  spec.metadata['source_code_uri'] = spec.homepage\\n  spec.metadata['changelog_uri'] = spec.homepage + '/blob/master/CHANGELOG.md'\\n\\n  # Specify which files should be added to the gem when it is released.\\n  # The `git ls-files -z` loads the files in the RubyGem that have been added into git.\\n  spec.files = Dir.chdir(File.expand_path(__dir__)) do\\n    `git ls-files -z`.split(\\\"\\\\x0\\\").reject do |f|\\n      (f == __FILE__) || f.match(%r{\\\\A(?:(?:test|spec|features)/|\\\\.(?:git|travis|circleci)|appveyor)})\\n    end\\n  end\\n  spec.bindir = 'exe'\\n  spec.executables = spec.files.grep(%r{\\\\Aexe/}) { |f| File.basename(f) }\\n  # spec.require_paths = []\\n\\n  # Uncomment to register a new dependency of your gem\\n  # spec.add_dependency \\\"example-gem\\\", \\\"~> 1.0\\\"\\n\\n  # For more information and examples about making a new gem, checkout our\\n  # guide at: https://bundler.io/guides/creating_gem.html\\nend\\n\",\"content_hash\":null,\"content_normalized\":null,\"matcher\":{\"name\":\"gemspec\",\"confidence\":90},\"matched_license\":\"MIT\",\"attribution\":null}]}",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/FAIR-Core-Tests.git.assess.sqaaas/job/main/1/execution/node/70/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/FAIR-Core-Tests.git.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {
                                "licenses": [
                                    {
                                        "key": "mit",
                                        "spdx_id": "MIT",
                                        "meta": {
                                            "title": "MIT License",
                                            "source": "https://spdx.org/licenses/MIT.html",
                                            "description": "A short and simple permissive license with conditions only requiring preservation of copyright and license notices. Licensed works, modifications, and larger works may be distributed under different terms and without source code.",
                                            "how": "Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file. Replace [year] with the current year and [fullname] with the name (or names) of the copyright holders.",
                                            "using": {
                                                "Babel": "https://github.com/babel/babel/blob/master/LICENSE",
                                                ".NET": "https://github.com/dotnet/runtime/blob/main/LICENSE.TXT",
                                                "Rails": "https://github.com/rails/rails/blob/master/MIT-LICENSE"
                                            },
                                            "featured": true,
                                            "hidden": false,
                                            "nickname": null,
                                            "note": null
                                        },
                                        "url": "http://choosealicense.com/licenses/mit/",
                                        "rules": {
                                            "permissions": [
                                                {
                                                    "tag": "commercial-use",
                                                    "label": "Commercial use",
                                                    "description": "The licensed material and derivatives may be used for commercial purposes."
                                                },
                                                {
                                                    "tag": "modifications",
                                                    "label": "Modification",
                                                    "description": "The licensed material may be modified."
                                                },
                                                {
                                                    "tag": "distribution",
                                                    "label": "Distribution",
                                                    "description": "The licensed material may be distributed."
                                                },
                                                {
                                                    "tag": "private-use",
                                                    "label": "Private use",
                                                    "description": "The licensed material may be used and modified in private."
                                                }
                                            ],
                                            "conditions": [
                                                {
                                                    "tag": "include-copyright",
                                                    "label": "License and copyright notice",
                                                    "description": "A copy of the license and copyright notice must be included with the licensed material."
                                                }
                                            ],
                                            "limitations": [
                                                {
                                                    "tag": "liability",
                                                    "label": "Liability",
                                                    "description": "This license includes a limitation of liability."
                                                },
                                                {
                                                    "tag": "warranty",
                                                    "label": "Warranty",
                                                    "description": "This license explicitly states that it does NOT provide any warranty."
                                                }
                                            ]
                                        },
                                        "fields": [
                                            {
                                                "name": "year",
                                                "description": "The current year"
                                            },
                                            {
                                                "name": "fullname",
                                                "description": "The full name or username of the repository owner"
                                            }
                                        ],
                                        "other": false,
                                        "gpl": false,
                                        "lgpl": false,
                                        "cc": false
                                    }
                                ],
                                "matched_files": [
                                    {
                                        "filename": "LICENSE",
                                        "content": "MIT License\n\nCopyright (c) 2024 Wilkinson Laboratory for Biological Informatics\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                                        "content_hash": "4c2c763d64bbc7ef2e58b0ec6d06d90cee9755c9",
                                        "content_normalized": "permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'software'), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions: the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software. the software is provided 'as is', without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.",
                                        "matcher": {
                                            "name": "exact",
                                            "confidence": 100
                                        },
                                        "matched_license": "MIT",
                                        "attribution": "Copyright (c) 2024 Wilkinson Laboratory for Biological Informatics"
                                    },
                                    {
                                        "filename": "fair-core-tests.gemspec",
                                        "content": "# frozen_string_literal: true\n\n# require_relative \"tests\"\n\nGem::Specification.new do |spec|\n  spec.name = 'fair-core-tests'\n  spec.version = 1\n  spec.authors = ['Mark Wilkinson']\n  spec.email = ['markw@illuminae.com']\n\n  spec.summary = 'Gen3 FAIR Tests for the OS Trails project.'\n  spec.description = 'Gen3 FAIR Tests for the OS Trails project'\n  spec.homepage = 'https://github.com/markwilkinson/FAIR-Core-Tests'\n  spec.license = 'MIT'\n  spec.required_ruby_version = '>= 3.0'\n\n  spec.metadata['allowed_push_host'] = 'https://example.com'\n\n  spec.metadata['homepage_uri'] = spec.homepage\n  spec.metadata['source_code_uri'] = spec.homepage\n  spec.metadata['changelog_uri'] = spec.homepage + '/blob/master/CHANGELOG.md'\n\n  # Specify which files should be added to the gem when it is released.\n  # The `git ls-files -z` loads the files in the RubyGem that have been added into git.\n  spec.files = Dir.chdir(File.expand_path(__dir__)) do\n    `git ls-files -z`.split(\"\\x0\").reject do |f|\n      (f == __FILE__) || f.match(%r{\\A(?:(?:test|spec|features)/|\\.(?:git|travis|circleci)|appveyor)})\n    end\n  end\n  spec.bindir = 'exe'\n  spec.executables = spec.files.grep(%r{\\Aexe/}) { |f| File.basename(f) }\n  # spec.require_paths = []\n\n  # Uncomment to register a new dependency of your gem\n  # spec.add_dependency \"example-gem\", \"~> 1.0\"\n\n  # For more information and examples about making a new gem, checkout our\n  # guide at: https://bundler.io/guides/creating_gem.html\nend\n",
                                        "content_hash": null,
                                        "content_normalized": null,
                                        "matcher": {
                                            "name": "gemspec",
                                            "confidence": 90
                                        },
                                        "matched_license": "MIT",
                                        "attribution": null
                                    }
                                ]
                            }
                        }
                    ],
                    "valid": true
                },
                "QC.Lic02": {
                    "description": "Does the code use a license approved by Open Source Initiative?",
                    "requirement_level": "MUST",
                    "hint": "The <a href=\"https://opensource.org/\" target=\"_blank\">Open Source Initiative (OSI)</a> sets out the requirements for software to be legally declared as Open Source. The license in use shall be in the list of <a href=\"https://opensource.org/license-list.html\" target=\"_blank\">OSI-approved licenses</a> for this criterion to be successful",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "License MIT is approved by the Open Source Initiative",
                            "plugin": {
                                "name": "report2sqaaas-plugin-licensee",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "licensee",
                                "lang": "license",
                                "version": "9.17.0",
                                "docker": {
                                    "image": "eoscsynergy/sqaaas-licensee:9.17.0",
                                    "reviewed": "2021-06-28"
                                },
                                "ci": {
                                    "name": "QC.Lic github.com/OSTrails/FAIR-Core-Tests licensee",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "licensee detect . --confidence 60 --json "
                                    ],
                                    "stdout_text": "{\"licenses\":[{\"key\":\"mit\",\"spdx_id\":\"MIT\",\"meta\":{\"title\":\"MIT License\",\"source\":\"https://spdx.org/licenses/MIT.html\",\"description\":\"A short and simple permissive license with conditions only requiring preservation of copyright and license notices. Licensed works, modifications, and larger works may be distributed under different terms and without source code.\",\"how\":\"Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file. Replace [year] with the current year and [fullname] with the name (or names) of the copyright holders.\",\"using\":{\"Babel\":\"https://github.com/babel/babel/blob/master/LICENSE\",\".NET\":\"https://github.com/dotnet/runtime/blob/main/LICENSE.TXT\",\"Rails\":\"https://github.com/rails/rails/blob/master/MIT-LICENSE\"},\"featured\":true,\"hidden\":false,\"nickname\":null,\"note\":null},\"url\":\"http://choosealicense.com/licenses/mit/\",\"rules\":{\"permissions\":[{\"tag\":\"commercial-use\",\"label\":\"Commercial use\",\"description\":\"The licensed material and derivatives may be used for commercial purposes.\"},{\"tag\":\"modifications\",\"label\":\"Modification\",\"description\":\"The licensed material may be modified.\"},{\"tag\":\"distribution\",\"label\":\"Distribution\",\"description\":\"The licensed material may be distributed.\"},{\"tag\":\"private-use\",\"label\":\"Private use\",\"description\":\"The licensed material may be used and modified in private.\"}],\"conditions\":[{\"tag\":\"include-copyright\",\"label\":\"License and copyright notice\",\"description\":\"A copy of the license and copyright notice must be included with the licensed material.\"}],\"limitations\":[{\"tag\":\"liability\",\"label\":\"Liability\",\"description\":\"This license includes a limitation of liability.\"},{\"tag\":\"warranty\",\"label\":\"Warranty\",\"description\":\"This license explicitly states that it does NOT provide any warranty.\"}]},\"fields\":[{\"name\":\"year\",\"description\":\"The current year\"},{\"name\":\"fullname\",\"description\":\"The full name or username of the repository owner\"}],\"other\":false,\"gpl\":false,\"lgpl\":false,\"cc\":false}],\"matched_files\":[{\"filename\":\"LICENSE\",\"content\":\"MIT License\\n\\nCopyright (c) 2024 Wilkinson Laboratory for Biological Informatics\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \\\"Software\\\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n\",\"content_hash\":\"4c2c763d64bbc7ef2e58b0ec6d06d90cee9755c9\",\"content_normalized\":\"permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'software'), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions: the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software. the software is provided 'as is', without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.\",\"matcher\":{\"name\":\"exact\",\"confidence\":100},\"matched_license\":\"MIT\",\"attribution\":\"Copyright (c) 2024 Wilkinson Laboratory for Biological Informatics\"},{\"filename\":\"fair-core-tests.gemspec\",\"content\":\"# frozen_string_literal: true\\n\\n# require_relative \\\"tests\\\"\\n\\nGem::Specification.new do |spec|\\n  spec.name = 'fair-core-tests'\\n  spec.version = 1\\n  spec.authors = ['Mark Wilkinson']\\n  spec.email = ['markw@illuminae.com']\\n\\n  spec.summary = 'Gen3 FAIR Tests for the OS Trails project.'\\n  spec.description = 'Gen3 FAIR Tests for the OS Trails project'\\n  spec.homepage = 'https://github.com/markwilkinson/FAIR-Core-Tests'\\n  spec.license = 'MIT'\\n  spec.required_ruby_version = '>= 3.0'\\n\\n  spec.metadata['allowed_push_host'] = 'https://example.com'\\n\\n  spec.metadata['homepage_uri'] = spec.homepage\\n  spec.metadata['source_code_uri'] = spec.homepage\\n  spec.metadata['changelog_uri'] = spec.homepage + '/blob/master/CHANGELOG.md'\\n\\n  # Specify which files should be added to the gem when it is released.\\n  # The `git ls-files -z` loads the files in the RubyGem that have been added into git.\\n  spec.files = Dir.chdir(File.expand_path(__dir__)) do\\n    `git ls-files -z`.split(\\\"\\\\x0\\\").reject do |f|\\n      (f == __FILE__) || f.match(%r{\\\\A(?:(?:test|spec|features)/|\\\\.(?:git|travis|circleci)|appveyor)})\\n    end\\n  end\\n  spec.bindir = 'exe'\\n  spec.executables = spec.files.grep(%r{\\\\Aexe/}) { |f| File.basename(f) }\\n  # spec.require_paths = []\\n\\n  # Uncomment to register a new dependency of your gem\\n  # spec.add_dependency \\\"example-gem\\\", \\\"~> 1.0\\\"\\n\\n  # For more information and examples about making a new gem, checkout our\\n  # guide at: https://bundler.io/guides/creating_gem.html\\nend\\n\",\"content_hash\":null,\"content_normalized\":null,\"matcher\":{\"name\":\"gemspec\",\"confidence\":90},\"matched_license\":\"MIT\",\"attribution\":null}]}",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/FAIR-Core-Tests.git.assess.sqaaas/job/main/1/execution/node/70/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/FAIR-Core-Tests.git.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {
                                "licenses": [
                                    {
                                        "key": "mit",
                                        "spdx_id": "MIT",
                                        "meta": {
                                            "title": "MIT License",
                                            "source": "https://spdx.org/licenses/MIT.html",
                                            "description": "A short and simple permissive license with conditions only requiring preservation of copyright and license notices. Licensed works, modifications, and larger works may be distributed under different terms and without source code.",
                                            "how": "Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file. Replace [year] with the current year and [fullname] with the name (or names) of the copyright holders.",
                                            "using": {
                                                "Babel": "https://github.com/babel/babel/blob/master/LICENSE",
                                                ".NET": "https://github.com/dotnet/runtime/blob/main/LICENSE.TXT",
                                                "Rails": "https://github.com/rails/rails/blob/master/MIT-LICENSE"
                                            },
                                            "featured": true,
                                            "hidden": false,
                                            "nickname": null,
                                            "note": null
                                        },
                                        "url": "http://choosealicense.com/licenses/mit/",
                                        "rules": {
                                            "permissions": [
                                                {
                                                    "tag": "commercial-use",
                                                    "label": "Commercial use",
                                                    "description": "The licensed material and derivatives may be used for commercial purposes."
                                                },
                                                {
                                                    "tag": "modifications",
                                                    "label": "Modification",
                                                    "description": "The licensed material may be modified."
                                                },
                                                {
                                                    "tag": "distribution",
                                                    "label": "Distribution",
                                                    "description": "The licensed material may be distributed."
                                                },
                                                {
                                                    "tag": "private-use",
                                                    "label": "Private use",
                                                    "description": "The licensed material may be used and modified in private."
                                                }
                                            ],
                                            "conditions": [
                                                {
                                                    "tag": "include-copyright",
                                                    "label": "License and copyright notice",
                                                    "description": "A copy of the license and copyright notice must be included with the licensed material."
                                                }
                                            ],
                                            "limitations": [
                                                {
                                                    "tag": "liability",
                                                    "label": "Liability",
                                                    "description": "This license includes a limitation of liability."
                                                },
                                                {
                                                    "tag": "warranty",
                                                    "label": "Warranty",
                                                    "description": "This license explicitly states that it does NOT provide any warranty."
                                                }
                                            ]
                                        },
                                        "fields": [
                                            {
                                                "name": "year",
                                                "description": "The current year"
                                            },
                                            {
                                                "name": "fullname",
                                                "description": "The full name or username of the repository owner"
                                            }
                                        ],
                                        "other": false,
                                        "gpl": false,
                                        "lgpl": false,
                                        "cc": false
                                    }
                                ],
                                "matched_files": [
                                    {
                                        "filename": "LICENSE",
                                        "content": "MIT License\n\nCopyright (c) 2024 Wilkinson Laboratory for Biological Informatics\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                                        "content_hash": "4c2c763d64bbc7ef2e58b0ec6d06d90cee9755c9",
                                        "content_normalized": "permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'software'), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions: the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software. the software is provided 'as is', without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.",
                                        "matcher": {
                                            "name": "exact",
                                            "confidence": 100
                                        },
                                        "matched_license": "MIT",
                                        "attribution": "Copyright (c) 2024 Wilkinson Laboratory for Biological Informatics"
                                    },
                                    {
                                        "filename": "fair-core-tests.gemspec",
                                        "content": "# frozen_string_literal: true\n\n# require_relative \"tests\"\n\nGem::Specification.new do |spec|\n  spec.name = 'fair-core-tests'\n  spec.version = 1\n  spec.authors = ['Mark Wilkinson']\n  spec.email = ['markw@illuminae.com']\n\n  spec.summary = 'Gen3 FAIR Tests for the OS Trails project.'\n  spec.description = 'Gen3 FAIR Tests for the OS Trails project'\n  spec.homepage = 'https://github.com/markwilkinson/FAIR-Core-Tests'\n  spec.license = 'MIT'\n  spec.required_ruby_version = '>= 3.0'\n\n  spec.metadata['allowed_push_host'] = 'https://example.com'\n\n  spec.metadata['homepage_uri'] = spec.homepage\n  spec.metadata['source_code_uri'] = spec.homepage\n  spec.metadata['changelog_uri'] = spec.homepage + '/blob/master/CHANGELOG.md'\n\n  # Specify which files should be added to the gem when it is released.\n  # The `git ls-files -z` loads the files in the RubyGem that have been added into git.\n  spec.files = Dir.chdir(File.expand_path(__dir__)) do\n    `git ls-files -z`.split(\"\\x0\").reject do |f|\n      (f == __FILE__) || f.match(%r{\\A(?:(?:test|spec|features)/|\\.(?:git|travis|circleci)|appveyor)})\n    end\n  end\n  spec.bindir = 'exe'\n  spec.executables = spec.files.grep(%r{\\Aexe/}) { |f| File.basename(f) }\n  # spec.require_paths = []\n\n  # Uncomment to register a new dependency of your gem\n  # spec.add_dependency \"example-gem\", \"~> 1.0\"\n\n  # For more information and examples about making a new gem, checkout our\n  # guide at: https://bundler.io/guides/creating_gem.html\nend\n",
                                        "content_hash": null,
                                        "content_normalized": null,
                                        "matcher": {
                                            "name": "gemspec",
                                            "confidence": 90
                                        },
                                        "matched_license": "MIT",
                                        "attribution": null
                                    }
                                ]
                            }
                        }
                    ],
                    "valid": true
                },
                "QC.Lic02.1": {
                    "description": "Does the code use an Open Source Initiative's popular-recognized license?",
                    "requirement_level": "MAY",
                    "hint": "The Open Source Initiative (OSI) sets out the requirements for software to be legally declared as Open Source. OSI provides a list of popular licenses that shall match most of the demands. The license in use shall be in the list of <a href=\"https://opensource.org/license-list.html\" target=\"_blank\">OSI popular licenses</a> for this criterion to be successful",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "License MIT is listed under the Open Source Initiative popular category",
                            "plugin": {
                                "name": "report2sqaaas-plugin-licensee",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "licensee",
                                "lang": "license",
                                "version": "9.17.0",
                                "docker": {
                                    "image": "eoscsynergy/sqaaas-licensee:9.17.0",
                                    "reviewed": "2021-06-28"
                                },
                                "ci": {
                                    "name": "QC.Lic github.com/OSTrails/FAIR-Core-Tests licensee",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "licensee detect . --confidence 60 --json "
                                    ],
                                    "stdout_text": "{\"licenses\":[{\"key\":\"mit\",\"spdx_id\":\"MIT\",\"meta\":{\"title\":\"MIT License\",\"source\":\"https://spdx.org/licenses/MIT.html\",\"description\":\"A short and simple permissive license with conditions only requiring preservation of copyright and license notices. Licensed works, modifications, and larger works may be distributed under different terms and without source code.\",\"how\":\"Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file. Replace [year] with the current year and [fullname] with the name (or names) of the copyright holders.\",\"using\":{\"Babel\":\"https://github.com/babel/babel/blob/master/LICENSE\",\".NET\":\"https://github.com/dotnet/runtime/blob/main/LICENSE.TXT\",\"Rails\":\"https://github.com/rails/rails/blob/master/MIT-LICENSE\"},\"featured\":true,\"hidden\":false,\"nickname\":null,\"note\":null},\"url\":\"http://choosealicense.com/licenses/mit/\",\"rules\":{\"permissions\":[{\"tag\":\"commercial-use\",\"label\":\"Commercial use\",\"description\":\"The licensed material and derivatives may be used for commercial purposes.\"},{\"tag\":\"modifications\",\"label\":\"Modification\",\"description\":\"The licensed material may be modified.\"},{\"tag\":\"distribution\",\"label\":\"Distribution\",\"description\":\"The licensed material may be distributed.\"},{\"tag\":\"private-use\",\"label\":\"Private use\",\"description\":\"The licensed material may be used and modified in private.\"}],\"conditions\":[{\"tag\":\"include-copyright\",\"label\":\"License and copyright notice\",\"description\":\"A copy of the license and copyright notice must be included with the licensed material.\"}],\"limitations\":[{\"tag\":\"liability\",\"label\":\"Liability\",\"description\":\"This license includes a limitation of liability.\"},{\"tag\":\"warranty\",\"label\":\"Warranty\",\"description\":\"This license explicitly states that it does NOT provide any warranty.\"}]},\"fields\":[{\"name\":\"year\",\"description\":\"The current year\"},{\"name\":\"fullname\",\"description\":\"The full name or username of the repository owner\"}],\"other\":false,\"gpl\":false,\"lgpl\":false,\"cc\":false}],\"matched_files\":[{\"filename\":\"LICENSE\",\"content\":\"MIT License\\n\\nCopyright (c) 2024 Wilkinson Laboratory for Biological Informatics\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \\\"Software\\\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n\",\"content_hash\":\"4c2c763d64bbc7ef2e58b0ec6d06d90cee9755c9\",\"content_normalized\":\"permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'software'), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions: the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software. the software is provided 'as is', without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.\",\"matcher\":{\"name\":\"exact\",\"confidence\":100},\"matched_license\":\"MIT\",\"attribution\":\"Copyright (c) 2024 Wilkinson Laboratory for Biological Informatics\"},{\"filename\":\"fair-core-tests.gemspec\",\"content\":\"# frozen_string_literal: true\\n\\n# require_relative \\\"tests\\\"\\n\\nGem::Specification.new do |spec|\\n  spec.name = 'fair-core-tests'\\n  spec.version = 1\\n  spec.authors = ['Mark Wilkinson']\\n  spec.email = ['markw@illuminae.com']\\n\\n  spec.summary = 'Gen3 FAIR Tests for the OS Trails project.'\\n  spec.description = 'Gen3 FAIR Tests for the OS Trails project'\\n  spec.homepage = 'https://github.com/markwilkinson/FAIR-Core-Tests'\\n  spec.license = 'MIT'\\n  spec.required_ruby_version = '>= 3.0'\\n\\n  spec.metadata['allowed_push_host'] = 'https://example.com'\\n\\n  spec.metadata['homepage_uri'] = spec.homepage\\n  spec.metadata['source_code_uri'] = spec.homepage\\n  spec.metadata['changelog_uri'] = spec.homepage + '/blob/master/CHANGELOG.md'\\n\\n  # Specify which files should be added to the gem when it is released.\\n  # The `git ls-files -z` loads the files in the RubyGem that have been added into git.\\n  spec.files = Dir.chdir(File.expand_path(__dir__)) do\\n    `git ls-files -z`.split(\\\"\\\\x0\\\").reject do |f|\\n      (f == __FILE__) || f.match(%r{\\\\A(?:(?:test|spec|features)/|\\\\.(?:git|travis|circleci)|appveyor)})\\n    end\\n  end\\n  spec.bindir = 'exe'\\n  spec.executables = spec.files.grep(%r{\\\\Aexe/}) { |f| File.basename(f) }\\n  # spec.require_paths = []\\n\\n  # Uncomment to register a new dependency of your gem\\n  # spec.add_dependency \\\"example-gem\\\", \\\"~> 1.0\\\"\\n\\n  # For more information and examples about making a new gem, checkout our\\n  # guide at: https://bundler.io/guides/creating_gem.html\\nend\\n\",\"content_hash\":null,\"content_normalized\":null,\"matcher\":{\"name\":\"gemspec\",\"confidence\":90},\"matched_license\":\"MIT\",\"attribution\":null}]}",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/FAIR-Core-Tests.git.assess.sqaaas/job/main/1/execution/node/70/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/FAIR-Core-Tests.git.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {
                                "licenses": [
                                    {
                                        "key": "mit",
                                        "spdx_id": "MIT",
                                        "meta": {
                                            "title": "MIT License",
                                            "source": "https://spdx.org/licenses/MIT.html",
                                            "description": "A short and simple permissive license with conditions only requiring preservation of copyright and license notices. Licensed works, modifications, and larger works may be distributed under different terms and without source code.",
                                            "how": "Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file. Replace [year] with the current year and [fullname] with the name (or names) of the copyright holders.",
                                            "using": {
                                                "Babel": "https://github.com/babel/babel/blob/master/LICENSE",
                                                ".NET": "https://github.com/dotnet/runtime/blob/main/LICENSE.TXT",
                                                "Rails": "https://github.com/rails/rails/blob/master/MIT-LICENSE"
                                            },
                                            "featured": true,
                                            "hidden": false,
                                            "nickname": null,
                                            "note": null
                                        },
                                        "url": "http://choosealicense.com/licenses/mit/",
                                        "rules": {
                                            "permissions": [
                                                {
                                                    "tag": "commercial-use",
                                                    "label": "Commercial use",
                                                    "description": "The licensed material and derivatives may be used for commercial purposes."
                                                },
                                                {
                                                    "tag": "modifications",
                                                    "label": "Modification",
                                                    "description": "The licensed material may be modified."
                                                },
                                                {
                                                    "tag": "distribution",
                                                    "label": "Distribution",
                                                    "description": "The licensed material may be distributed."
                                                },
                                                {
                                                    "tag": "private-use",
                                                    "label": "Private use",
                                                    "description": "The licensed material may be used and modified in private."
                                                }
                                            ],
                                            "conditions": [
                                                {
                                                    "tag": "include-copyright",
                                                    "label": "License and copyright notice",
                                                    "description": "A copy of the license and copyright notice must be included with the licensed material."
                                                }
                                            ],
                                            "limitations": [
                                                {
                                                    "tag": "liability",
                                                    "label": "Liability",
                                                    "description": "This license includes a limitation of liability."
                                                },
                                                {
                                                    "tag": "warranty",
                                                    "label": "Warranty",
                                                    "description": "This license explicitly states that it does NOT provide any warranty."
                                                }
                                            ]
                                        },
                                        "fields": [
                                            {
                                                "name": "year",
                                                "description": "The current year"
                                            },
                                            {
                                                "name": "fullname",
                                                "description": "The full name or username of the repository owner"
                                            }
                                        ],
                                        "other": false,
                                        "gpl": false,
                                        "lgpl": false,
                                        "cc": false
                                    }
                                ],
                                "matched_files": [
                                    {
                                        "filename": "LICENSE",
                                        "content": "MIT License\n\nCopyright (c) 2024 Wilkinson Laboratory for Biological Informatics\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                                        "content_hash": "4c2c763d64bbc7ef2e58b0ec6d06d90cee9755c9",
                                        "content_normalized": "permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'software'), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions: the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software. the software is provided 'as is', without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.",
                                        "matcher": {
                                            "name": "exact",
                                            "confidence": 100
                                        },
                                        "matched_license": "MIT",
                                        "attribution": "Copyright (c) 2024 Wilkinson Laboratory for Biological Informatics"
                                    },
                                    {
                                        "filename": "fair-core-tests.gemspec",
                                        "content": "# frozen_string_literal: true\n\n# require_relative \"tests\"\n\nGem::Specification.new do |spec|\n  spec.name = 'fair-core-tests'\n  spec.version = 1\n  spec.authors = ['Mark Wilkinson']\n  spec.email = ['markw@illuminae.com']\n\n  spec.summary = 'Gen3 FAIR Tests for the OS Trails project.'\n  spec.description = 'Gen3 FAIR Tests for the OS Trails project'\n  spec.homepage = 'https://github.com/markwilkinson/FAIR-Core-Tests'\n  spec.license = 'MIT'\n  spec.required_ruby_version = '>= 3.0'\n\n  spec.metadata['allowed_push_host'] = 'https://example.com'\n\n  spec.metadata['homepage_uri'] = spec.homepage\n  spec.metadata['source_code_uri'] = spec.homepage\n  spec.metadata['changelog_uri'] = spec.homepage + '/blob/master/CHANGELOG.md'\n\n  # Specify which files should be added to the gem when it is released.\n  # The `git ls-files -z` loads the files in the RubyGem that have been added into git.\n  spec.files = Dir.chdir(File.expand_path(__dir__)) do\n    `git ls-files -z`.split(\"\\x0\").reject do |f|\n      (f == __FILE__) || f.match(%r{\\A(?:(?:test|spec|features)/|\\.(?:git|travis|circleci)|appveyor)})\n    end\n  end\n  spec.bindir = 'exe'\n  spec.executables = spec.files.grep(%r{\\Aexe/}) { |f| File.basename(f) }\n  # spec.require_paths = []\n\n  # Uncomment to register a new dependency of your gem\n  # spec.add_dependency \"example-gem\", \"~> 1.0\"\n\n  # For more information and examples about making a new gem, checkout our\n  # guide at: https://bundler.io/guides/creating_gem.html\nend\n",
                                        "content_hash": null,
                                        "content_normalized": null,
                                        "matcher": {
                                            "name": "gemspec",
                                            "confidence": 90
                                        },
                                        "matched_license": "MIT",
                                        "attribution": null
                                    }
                                ]
                            }
                        }
                    ],
                    "valid": true
                }
            },
            "coverage": {
                "percentage": 100,
                "total_subcriteria": 4,
                "success_subcriteria": 4
            }
        },
        "QC.Sty": {
            "valid": false,
            "subcriteria": {
                "QC.Sty01": {
                    "description": "Is the software product following a style standard for Dockerfile files?",
                    "requirement_level": "MUST",
                    "hint": "Please check & solve the security weaknesses found by the linter tool",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "Dockerfile files are compliant with hadolint standard",
                            "plugin": {
                                "name": "report2sqaaas-plugin-jenkins_exit_status",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "hadolint",
                                "lang": "Dockerfile",
                                "version": "v2.8.0-0-g398770f-dirty",
                                "docker": {
                                    "image": "hadolint/hadolint:2.8.0-alpine",
                                    "reviewed": "2021-06-21"
                                },
                                "ci": {
                                    "name": "QC.Sty github.com/OSTrails/FAIR-Core-Tests hadolint",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "hadolint Dockerfile --failure-threshold error"
                                    ],
                                    "stdout_text": "Dockerfile:4 DL3009 \u001b[92minfo\u001b[0m: Delete the apt-get lists after installing something\nDockerfile:5 DL3008 \u001b[1m\u001b[93mwarning\u001b[0m: Pin versions in apt get install. Instead of `apt-get install <package>` use `apt-get install <package>=<version>`\nDockerfile:5 DL3009 \u001b[92minfo\u001b[0m: Delete the apt-get lists after installing something\nDockerfile:5 DL3015 \u001b[92minfo\u001b[0m: Avoid additional packages by specifying `--no-install-recommends`\nDockerfile:8 DL3008 \u001b[1m\u001b[93mwarning\u001b[0m: Pin versions in apt get install. Instead of `apt-get install <package>` use `apt-get install <package>=<version>`\nDockerfile:15 DL3059 \u001b[92minfo\u001b[0m: Multiple consecutive `RUN` instructions. Consider consolidation.\nDockerfile:16 DL3042 \u001b[1m\u001b[93mwarning\u001b[0m: Avoid use of cache directory with pip. Use `pip install --no-cache-dir <package>`\nDockerfile:16 DL3059 \u001b[92minfo\u001b[0m: Multiple consecutive `RUN` instructions. Consider consolidation.\nDockerfile:16 DL3013 \u001b[1m\u001b[93mwarning\u001b[0m: Pin versions in pip. Instead of `pip install <package>` use `pip install <package>==<version>` or `pip install --requirement <requirements file>`\nDockerfile:19 DL3059 \u001b[92minfo\u001b[0m: Multiple consecutive `RUN` instructions. Consider consolidation.\nDockerfile:22 DL3059 \u001b[92minfo\u001b[0m: Multiple consecutive `RUN` instructions. Consider consolidation.",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/FAIR-Core-Tests.git.assess.sqaaas/job/main/1/execution/node/79/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/FAIR-Core-Tests.git.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {}
                        },
                        {
                            "valid": true,
                            "message": "JSON files are compliant with jsonlint standard",
                            "plugin": {
                                "name": "report2sqaaas-plugin-jenkins_exit_status",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "jsonlint",
                                "lang": "JSON",
                                "version": "1.6.3",
                                "docker": {
                                    "dockerfile": "QC.Sty/jsonlint/Dockerfile",
                                    "reviewed": "2021-11-23"
                                },
                                "ci": {
                                    "name": "QC.Sty github.com/OSTrails/FAIR-Core-Tests jsonlint",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "jsonlint-cli \"**/*.json\""
                                    ],
                                    "stdout_text": "",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/FAIR-Core-Tests.git.assess.sqaaas/job/main/1/execution/node/88/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/FAIR-Core-Tests.git.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {}
                        },
                        {
                            "valid": false,
                            "message": "Ruby files are not fully compliant with rubocop standard",
                            "plugin": {
                                "name": "report2sqaaas-plugin-jenkins_exit_status",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "rubocop",
                                "lang": "Ruby",
                                "version": "1.36.0",
                                "docker": {
                                    "dockerfile": "QC.Sty/rubocop/Dockerfile",
                                    "reviewed": "2022-10-07"
                                },
                                "ci": {
                                    "name": "QC.Sty github.com/OSTrails/FAIR-Core-Tests rubocop",
                                    "status": "FAILED",
                                    "stdout_command": [
                                        "rubocop"
                                    ],
                                    "stdout_text": "Inspecting 42 files\nCCWCWWWCWCCCWWCCWCCWCCCCWWWCWCWWWWWWWWWWWW\n\nOffenses:\n\nGemfile:3:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nsource \"https://rubygems.org\"\n       ^^^^^^^^^^^^^^^^^^^^^^\nGemfile:6:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nruby \"~> 3.0\"\n     ^^^^^^^^\nGemfile:7:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"bcrypt\"\n    ^^^^^^^^\nGemfile:8:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"debase\", git: \"https://github.com/ruby-debug/debase.git\", tag: \"v0.2.5.beta2\"\n    ^^^^^^^^\nGemfile:8:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"debase\", git: \"https://github.com/ruby-debug/debase.git\", tag: \"v0.2.5.beta2\"\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nGemfile:8:69: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"debase\", git: \"https://github.com/ruby-debug/debase.git\", tag: \"v0.2.5.beta2\"\n                                                                    ^^^^^^^^^^^^^^\nGemfile:9:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"linkeddata\", \"~> 3.2.0\"\n    ^^^^^^^^^^^^\nGemfile:9:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"linkeddata\", \"~> 3.2.0\"\n                  ^^^^^^^^^^\nGemfile:10:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"parseconfig\", \"~>1.1.2\"\n    ^^^^^^^^^^^^^\nGemfile:10:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"parseconfig\", \"~>1.1.2\"\n                   ^^^^^^^^^\nGemfile:11:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"rake\", \"~> 13.0\"\n    ^^^^^^\nGemfile:11:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"rake\", \"~> 13.0\"\n            ^^^^^^^^^\nGemfile:12:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"rdf-raptor\", \"~> 3.1.0\"\n    ^^^^^^^^^^^^\nGemfile:12:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"rdf-raptor\", \"~> 3.1.0\"\n                  ^^^^^^^^^^\nGemfile:13:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"rest-client\", \"~>2.1.0\"\n    ^^^^^^^^^^^^^\nGemfile:13:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"rest-client\", \"~>2.1.0\"\n                   ^^^^^^^^^\nGemfile:14:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"rspec\", \"~> 3.11.0\"\n    ^^^^^^^\nGemfile:14:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"rspec\", \"~> 3.11.0\"\n             ^^^^^^^^^^^\nGemfile:15:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"rubocop\"\n    ^^^^^^^^^\nGemfile:16:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"ruby-debug-ide\"\n    ^^^^^^^^^^^^^^^^\nGemfile:17:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"shotgun\"\n    ^^^^^^^^^\nGemfile:18:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"sinatra\", \"~> 2.2\"\n    ^^^^^^^^^\nGemfile:18:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"sinatra\", \"~> 2.2\"\n               ^^^^^^^^\nGemfile:19:1: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem cgi should appear before sinatra.\ngem \"cgi\", \"~> 0.4.1\"\n^^^^^^^^^^^^^^^^^^^^^\nGemfile:19:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"cgi\", \"~> 0.4.1\"\n    ^^^^^\nGemfile:19:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"cgi\", \"~> 0.4.1\"\n           ^^^^^^^^^^\nGemfile:20:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"fileutils\", \"~>1.5.0\"\n    ^^^^^^^^^^^\nGemfile:20:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"fileutils\", \"~>1.5.0\"\n                 ^^^^^^^^^\nGemfile:21:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"json\", \"~> 2.7.1\"\n    ^^^^^^\nGemfile:21:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"json\", \"~> 2.7.1\"\n            ^^^^^^^^^^\nGemfile:22:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"json-canonicalization\", \"~> 1.0.0\"\n    ^^^^^^^^^^^^^^^^^^^^^^^\nGemfile:22:30: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"json-canonicalization\", \"~> 1.0.0\"\n                             ^^^^^^^^^^\nGemfile:23:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"openapi3_parser\", \"~> 0.9.2\"\n    ^^^^^^^^^^^^^^^^^\nGemfile:23:24: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"openapi3_parser\", \"~> 0.9.2\"\n                       ^^^^^^^^^^\nGemfile:24:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"require_all\", \"~> 3.0.0\"\n    ^^^^^^^^^^^^^\nGemfile:24:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"require_all\", \"~> 3.0.0\"\n                   ^^^^^^^^^^\nGemfile:25:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"sinatra-cross_origin\"\n    ^^^^^^^^^^^^^^^^^^^^^^\nGemfile:26:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"swagger-blocks\", \"~> 3.0.0\"\n    ^^^^^^^^^^^^^^^^\nGemfile:26:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"swagger-blocks\", \"~> 3.0.0\"\n                      ^^^^^^^^^^\nGemfile:27:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"thin\"\n    ^^^^^^\nGemfile:28:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"tux\"\n    ^^^^^\nGemfile:29:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"uri\", \"~>0.12.2\"\n    ^^^^^\nGemfile:29:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"uri\", \"~>0.12.2\"\n           ^^^^^^^^^^\nGemfile:30:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"xml-simple\", \"~>1.1.8\"\n    ^^^^^^^^^^^^\nGemfile:30:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"xml-simple\", \"~>1.1.8\"\n                  ^^^^^^^^^\nGemfile:31:1: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem tempfile should appear before xml-simple.\ngem \"tempfile\"\n^^^^^^^^^^^^^^\nGemfile:31:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"tempfile\"\n    ^^^^^^^^^^\nGemfile:32:1: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem securerandom should appear before tempfile.\ngem \"securerandom\"\n^^^^^^^^^^^^^^^^^^\nGemfile:32:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"securerandom\"\n    ^^^^^^^^^^^^^^\nGemfile:33:1: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem rdf-vocab should appear before securerandom.\ngem \"rdf-vocab\"\n^^^^^^^^^^^^^^^\nGemfile:33:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"rdf-vocab\"\n    ^^^^^^^^^^^\nGemfile:35:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\nGemfile:36:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"metainspector\", \"~> 5-11-2\"\n    ^^^^^^^^^^^^^^^\nGemfile:36:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"metainspector\", \"~> 5-11-2\"\n                     ^^^^^^^^^^^\nGemfile:38:1: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.\n#gem \"zlib\", \"= 3.1.0\"\n^^^^^^^^^^^^^^^^^^^^^^\napp/controllers/application_controller.rb:3:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nrequire \"swagger/blocks\"\n        ^^^^^^^^^^^^^^^^\napp/controllers/application_controller.rb:4:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nrequire \"sinatra\"\n        ^^^^^^^^^\napp/controllers/application_controller.rb:5:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nrequire \"sinatra/base\"\n        ^^^^^^^^^^^^^^\napp/controllers/application_controller.rb:6:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nrequire \"json\"\n        ^^^^^^\napp/controllers/application_controller.rb:7:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nrequire \"erb\"\n        ^^^^^\napp/controllers/application_controller.rb:8:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nrequire \"require_all\"\n        ^^^^^^^^^^^^^\napp/controllers/application_controller.rb:9:121: C: Layout/LineLength: Line is too long. [142/120]\n# DO NOT change the order of loading below.  The files contain executable code that builds the overall configuration before this module starts\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^\napp/controllers/application_controller.rb:10:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nrequire_rel \"./routes.rb\"\n            ^^^^^^^^^^^^^\napp/controllers/application_controller.rb:11:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nrequire_rel \"../models\"\n            ^^^^^^^^^^^\napp/controllers/application_controller.rb:12:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nrequire_rel \"../views\"\n            ^^^^^^^^^^\napp/controllers/application_controller.rb:13:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nrequire_rel \"../tests\"\n            ^^^^^^^^^^\napp/controllers/application_controller.rb:14:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nrequire_rel \"../lib\"\n            ^^^^^^^^\napp/controllers/application_controller.rb:16:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/controllers/application_controller.rb:17:1: C: Style/Documentation: Missing top-level documentation comment for class ApplicationController.\nclass ApplicationController < Sinatra::Application\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/controllers/application_controller.rb:20:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n  set :bind, \"0.0.0.0\"\n             ^^^^^^^^^\napp/controllers/application_controller.rb:22:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    response.headers[\"Access-Control-Allow-Origin\"] = \"*\"\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/controllers/application_controller.rb:22:55: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    response.headers[\"Access-Control-Allow-Origin\"] = \"*\"\n                                                      ^^^\napp/controllers/application_controller.rb:26:25: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    set :public_folder, \"public\"\n                        ^^^^^^^^\napp/controllers/application_controller.rb:27:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    set :views, \"app/views\"\n                ^^^^^^^^^^^\napp/controllers/application_controller.rb:31:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n  options \"*\" do\n          ^^^\napp/controllers/application_controller.rb:32:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    response.headers[\"Allow\"] = \"GET, PUT, POST, DELETE, OPTIONS\"\n                     ^^^^^^^\napp/controllers/application_controller.rb:32:33: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    response.headers[\"Allow\"] = \"GET, PUT, POST, DELETE, OPTIONS\"\n                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/controllers/application_controller.rb:33:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    response.headers[\"Access-Control-Allow-Headers\"] = \"Authorization, Content-Type, Accept, X-User-Email, X-Auth-Token\"\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/controllers/application_controller.rb:33:56: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    response.headers[\"Access-Control-Allow-Headers\"] = \"Authorization, Content-Type, Accept, X-User-Email, X-Auth-Token\"\n                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/controllers/application_controller.rb:34:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    response.headers[\"Access-Control-Allow-Origin\"] = \"*\"\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/controllers/application_controller.rb:34:55: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    response.headers[\"Access-Control-Allow-Origin\"] = \"*\"\n                                                      ^^^\napp/controllers/application_controller.rb:39:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    key :swagger, \"2.0\"\n                  ^^^^^\napp/controllers/application_controller.rb:41:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      key :version, \"1.0.0\"\n                    ^^^^^^^\napp/controllers/application_controller.rb:42:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      key :title, \"FAIR Core Tests\"\n                  ^^^^^^^^^^^^^^^^^\napp/controllers/application_controller.rb:43:25: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      key :description, \"The core set of FAIR tests used by the FAIR Champion evaluation platform\"\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/controllers/application_controller.rb:44:28: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      key :termsOfService, \"https://example.org\"\n                           ^^^^^^^^^^^^^^^^^^^^^\napp/controllers/application_controller.rb:46:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n        key :name, \"Mark D. Wilkinson\"\n                   ^^^^^^^^^^^^^^^^^^^\napp/controllers/application_controller.rb:49:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n        key :name, \"MIT\"\n                   ^^^^^\napp/controllers/application_controller.rb:60:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    key :schemes, [\"http\"]\n                   ^^^^^^\napp/controllers/application_controller.rb:61:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    key :host, ENV.fetch(\"HARVESTER\", nil)\n                         ^^^^^^^^^^^\napp/controllers/application_controller.rb:62:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    key :basePath, \"/tests/\"\n                   ^^^^^^^^^\napp/controllers/routes.rb:3:1: C: Metrics/AbcSize: Assignment Branch Condition size for set_routes is too high. [<16, 46, 3> 48.8/17]\ndef set_routes(classes: allclasses) ...\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/controllers/routes.rb:3:1: C: Metrics/MethodLength: Method has too many lines. [43/10]\ndef set_routes(classes: allclasses) ...\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/controllers/routes.rb:14:14: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n    ts = Dir[File.dirname(__FILE__) + '/../tests/*.rb']\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/controllers/routes.rb:52:1: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 0 instead of 4).\n#    content_type 'application/ld+json'\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/controllers/routes.rb:60:5: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 4 instead of 0).\n    # end\n    ^^^^^\napp/controllers/routes.rb:61:1: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 0 instead of 4).\n#    graph.dump(:jsonld)\n^^^^^^^^^^^^^^^^^^^^^^^^\napp/controllers/routes.rb:65:3: W: Lint/EmptyBlock: Empty block detected.\n  before do ...\n  ^^^^^^^^^\napp/lib/cache.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nmodule FAIRChampion\n^\napp/lib/cache.rb:2:3: C: Style/Documentation: Missing top-level documentation comment for class FAIRChampion::Harvester.\n  class Harvester\n  ^^^^^^^^^^^^^^^\napp/lib/cache.rb:3:9: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 8 instead of 4).\n        ##########################################################\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/cache.rb:7:5: C: Metrics/AbcSize: Assignment Branch Condition size for checkRDFCache is too high. [<7, 17, 6> 19.34/17]\n    def self.checkRDFCache(body) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/cache.rb:7:5: C: Metrics/MethodLength: Method has too many lines. [18/10]\n    def self.checkRDFCache(body) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/cache.rb:7:14: C: Naming/MethodName: Use snake_case for method names.\n    def self.checkRDFCache(body)\n             ^^^^^^^^^^^^^\napp/lib/cache.rb:20:25: C: Security/MarshalLoad: Avoid using Marshal.load.\n        graph = Marshal.load(File.read(\"#{filename}_graph\")) # unmarshal it\n                        ^^^^\napp/lib/cache.rb:22:121: C: Layout/LineLength: Line is too long. [124/120]\n          g << statement # need to do this because the unmarshalled object isn't entirely functional as an RDF::Graph object\n                                                                                                                        ^^^^\napp/lib/cache.rb:31:14: C: Naming/MethodName: Use snake_case for method names.\n    def self.writeRDFCache(reader, body)\n             ^^^^^^^^^^^^^\napp/lib/cache.rb:41:5: C: Metrics/AbcSize: Assignment Branch Condition size for checkCache is too high. [<5, 18, 4> 19.1/17]\n    def self.checkCache(uri, headers) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/cache.rb:41:5: C: Metrics/MethodLength: Method has too many lines. [18/10]\n    def self.checkCache(uri, headers) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/cache.rb:41:14: C: Naming/MethodName: Use snake_case for method names.\n    def self.checkCache(uri, headers)\n             ^^^^^^^^^^\napp/lib/cache.rb:48:47: C: [Correctable] Style/AndOr: Use && instead of and.\n      if File.exist?(\"/tmp/#{filename}_head\") and File.exist?(\"/tmp/#{filename}_body\")\n                                              ^^^\napp/lib/cache.rb:50:24: C: Security/MarshalLoad: Avoid using Marshal.load.\n        head = Marshal.load(File.read(\"/tmp/#{filename}_head\"))\n                       ^^^^\napp/lib/cache.rb:51:24: C: Security/MarshalLoad: Avoid using Marshal.load.\n        body = Marshal.load(File.read(\"/tmp/#{filename}_body\"))\n                       ^^^^\napp/lib/cache.rb:52:9: C: Naming/VariableName: Use snake_case for variable names.\n        finalURI = [uri]\n        ^^^^^^^^\napp/lib/cache.rb:53:9: C: [Correctable] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.\n        if File.exist?(\"/tmp/#{filename}_uri\")\n        ^^\napp/lib/cache.rb:54:11: C: Naming/VariableName: Use snake_case for variable names.\n          finalURI = Marshal.load(File.read(\"/tmp/#{filename}_uri\")) \n          ^^^^^^^^\napp/lib/cache.rb:54:30: C: Security/MarshalLoad: Avoid using Marshal.load.\n          finalURI = Marshal.load(File.read(\"/tmp/#{filename}_uri\")) \n                             ^^^^\napp/lib/cache.rb:54:69: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n          finalURI = Marshal.load(File.read(\"/tmp/#{filename}_uri\")) \n                                                                    ^\napp/lib/cache.rb:57:29: C: Naming/VariableName: Use snake_case for variable names.\n        return [head, body, finalURI]\n                            ^^^^^^^^\napp/lib/cache.rb:62:14: C: Naming/MethodName: Use snake_case for method names.\n    def self.writeToCache(uri, headers, head, body, finalURI)\n             ^^^^^^^^^^^^\napp/lib/cache.rb:62:53: C: Naming/MethodParameterName: Only use lowercase characters for method parameter.\n    def self.writeToCache(uri, headers, head, body, finalURI)\n                                                    ^^^^^^^^\napp/lib/cache.rb:62:53: C: Naming/VariableName: Use snake_case for variable names.\n    def self.writeToCache(uri, headers, head, body, finalURI)\n                                                    ^^^^^^^^\napp/lib/cache.rb:65:22: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n      headfilename = filename + '_head'\n                     ^^^^^^^^^^^^^^^^^^\napp/lib/cache.rb:66:22: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n      bodyfilename = filename + '_body'\n                     ^^^^^^^^^^^^^^^^^^\napp/lib/cache.rb:67:21: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n      urifilename = filename + '_uri'\n                    ^^^^^^^^^^^^^^^^^\napp/lib/cache.rb:70:57: C: Naming/VariableName: Use snake_case for variable names.\n      File.binwrite(\"/tmp/#{urifilename}\", Marshal.dump(finalURI))\n                                                        ^^^^^^^^\napp/lib/cache.rb:73:14: C: Naming/MethodName: Use snake_case for method names.\n    def self.writeErrorToCache(uri, headers)\n             ^^^^^^^^^^^^^^^^^\napp/lib/common_queries.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nmodule FAIRChampion\n^\napp/lib/common_queries.rb:2:3: C: Metrics/ClassLength: Class has too many lines. [132/100]\n  class CommonQueries ...\n  ^^^^^^^^^^^^^^^^^^^\napp/lib/common_queries.rb:2:3: C: Style/Documentation: Missing top-level documentation comment for class FAIRChampion::CommonQueries.\n  class CommonQueries\n  ^^^^^^^^^^^^^^^^^^^\napp/lib/common_queries.rb:3:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.\napp/lib/common_queries.rb:4:5: C: Metrics/AbcSize: Assignment Branch Condition size for GetSelfIdentifier is too high. [<14, 41, 13> 45.23/17]\n    def self.GetSelfIdentifier(g, swagger) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/common_queries.rb:4:5: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for GetSelfIdentifier is too high. [12/7]\n    def self.GetSelfIdentifier(g, swagger) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/common_queries.rb:4:5: C: Metrics/MethodLength: Method has too many lines. [55/10]\n    def self.GetSelfIdentifier(g, swagger) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/common_queries.rb:4:5: C: Metrics/PerceivedComplexity: Perceived complexity for GetSelfIdentifier is too high. [14/8]\n    def self.GetSelfIdentifier(g, swagger) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/common_queries.rb:4:14: C: Naming/MethodName: Use snake_case for method names.\n    def self.GetSelfIdentifier(g, swagger)\n             ^^^^^^^^^^^^^^^^^\napp/lib/common_queries.rb:4:32: C: Naming/MethodParameterName: Method parameter must be at least 3 characters long.\n    def self.GetSelfIdentifier(g, swagger)\n                               ^\napp/lib/common_queries.rb:4:35: W: [Correctable] Lint/UnusedMethodArgument: Unused method argument - swagger. If it's necessary, use _ or _swagger as an argument name to indicate that it won't be used. If it's unnecessary, remove it.\n    def self.GetSelfIdentifier(g, swagger)\n                                  ^^^^^^^\napp/lib/common_queries.rb:7:7: C: Metrics/BlockLength: Block has too many lines. [51/25]\n      FAIRChampion::Utils::SELF_IDENTIFIER_PREDICATES.each do |prop| ...\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/common_queries.rb:18:121: C: Layout/LineLength: Line is too long. [129/120]\n                                      FILTER NOT EXISTS {?sub ?pred ?s} } #must be the root, if not, we don't know what id it is!\n                                                                                                                        ^^^^^^^^^\napp/lib/common_queries.rb:24:121: C: Layout/LineLength: Line is too long. [131/120]\n                FAIRChampion::Output.comments << \"INFO: '#{prop}' PropertyValue did not have the expected structure.  Moving on.\\n\"\n                                                                                                                        ^^^^^^^^^^^\napp/lib/common_queries.rb:29:121: C: Layout/LineLength: Line is too long. [135/120]\n              FAIRChampion::Output.comments << \"INFO: found identifier '#{identifier}' using Schema.org identifier as PropertyValue.\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^\napp/lib/common_queries.rb:41:17: C: Metrics/BlockNesting: Avoid more than 3 levels of block nesting.\n                unless r[:identifier].respond_to? :value ...\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/common_queries.rb:42:121: C: Layout/LineLength: Line is too long. [137/120]\n                  FAIRChampion::Output.comments << \"INFO: '#{prop}' as a simple value did not have the expected structure.  Moving on.\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^\napp/lib/common_queries.rb:46:121: C: Layout/LineLength: Line is too long. [150/120]\n                FAIRChampion::Output.comments << \"INFO: found identifier '#{identifier}' using Schema.org identifier as with a string or URI value.\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/common_queries.rb:57:121: C: Layout/LineLength: Line is too long. [150/120]\n                FAIRChampion::Output.comments << \"INFO: '#{prop}' as a simple identifier predicate did not have the expected structure.  Moving on.\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/common_queries.rb:61:121: C: Layout/LineLength: Line is too long. [123/120]\n              FAIRChampion::Output.comments << \"INFO: found identifier '#{identifier}' using #{prop} as a string or URI.\\n\"\n                                                                                                                        ^^^\napp/lib/common_queries.rb:71:5: C: Metrics/AbcSize: Assignment Branch Condition size for GetDataIdentifier is too high. [<15, 71, 17> 74.53/17]\n    def self.GetDataIdentifier(graph:) # send it the graph ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/common_queries.rb:71:5: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for GetDataIdentifier is too high. [13/7]\n    def self.GetDataIdentifier(graph:) # send it the graph ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/common_queries.rb:71:5: C: Metrics/MethodLength: Method has too many lines. [72/10]\n    def self.GetDataIdentifier(graph:) # send it the graph ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/common_queries.rb:71:5: C: Metrics/PerceivedComplexity: Perceived complexity for GetDataIdentifier is too high. [18/8]\n    def self.GetDataIdentifier(graph:) # send it the graph ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/common_queries.rb:71:14: C: Naming/MethodName: Use snake_case for method names.\n    def self.GetDataIdentifier(graph:) # send it the graph\n             ^^^^^^^^^^^^^^^^^\napp/lib/common_queries.rb:71:40: C: [Correctable] Style/CommentedKeyword: Do not place comments on the same line as the def keyword.\n    def self.GetDataIdentifier(graph:) # send it the graph\n                                       ^^^^^^^^^^^^^^^^^^^\napp/lib/common_queries.rb:76:37: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator <<.\n      FAIRChampion::Output.comments <<(\"INFO: SPARQLing graph of size #{graph.size}.\\n\")\n                                    ^^\napp/lib/common_queries.rb:78:7: C: Metrics/BlockLength: Block has too many lines. [65/25]\n      FAIRChampion::Utils::DATA_PREDICATES.each do |prop| ...\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/common_queries.rb:79:39: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator <<.\n        FAIRChampion::Output.comments <<(\"INFO: SPARQLing for #{prop}.\\n\")\n                                      ^^\napp/lib/common_queries.rb:80:9: C: [Correctable] Style/CaseLikeIf: Convert if-elsif to case-when.\n        if prop =~ %r{schema\\.org/distribution} ...\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/common_queries.rb:87:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\napp/lib/common_queries.rb:95:121: C: Layout/LineLength: Line is too long. [131/120]\n              FAIRChampion::Output.comments << \"INFO: '#{prop}' data identifier did not have the expected structure.  Moving on.\\n\"\n                                                                                                                        ^^^^^^^^^^^\napp/lib/common_queries.rb:99:121: C: Layout/LineLength: Line is too long. [128/120]\n            FAIRChampion::Output.comments << \"INFO: found identifier '#{@identifier}' using Schema.org distribution property.\\n\"\n                                                                                                                        ^^^^^^^^\napp/lib/common_queries.rb:111:121: C: Layout/LineLength: Line is too long. [131/120]\n              FAIRChampion::Output.comments << \"INFO: '#{prop}' data identifier did not have the expected structure.  Moving on.\\n\"\n                                                                                                                        ^^^^^^^^^^^\napp/lib/common_queries.rb:115:121: C: Layout/LineLength: Line is too long. [124/120]\n            FAIRChampion::Output.comments << \"INFO: found data identifier '#{@identifier}' using DCAT '#{prop}' property.\\n\"\n                                                                                                                        ^^^^\napp/lib/common_queries.rb:128:121: C: Layout/LineLength: Line is too long. [131/120]\n              FAIRChampion::Output.comments << \"INFO: '#{prop}' data identifier did not have the expected structure.  Moving on.\\n\"\n                                                                                                                        ^^^^^^^^^^^\napp/lib/common_queries.rb:132:121: C: Layout/LineLength: Line is too long. [151/120]\n            FAIRChampion::Output.comments << \"INFO: found identifier '#{@identifier}' using schema:mainEntity containing a schema:identifier clause.\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/common_queries.rb:143:121: C: Layout/LineLength: Line is too long. [131/120]\n              FAIRChampion::Output.comments << \"INFO: '#{prop}' data identifier did not have the expected structure.  Moving on.\\n\"\n                                                                                                                        ^^^^^^^^^^^\napp/lib/common_queries.rb:156:18: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n      @identifier  # returns nil if we get to this line\n                 ^\napp/lib/config.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nmodule FAIRChampion\n^\napp/lib/config.rb:2:3: C: Style/Documentation: Missing top-level documentation comment for class FAIRChampion::Utils.\n  class Utils\n  ^^^^^^^^^^^\napp/lib/config.rb:5:30: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n    config = ParseConfig.new(File.dirname(__FILE__) + '/config.conf')\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/config.rb:17:26: C: Naming/ConstantName: Use SCREAMING_SNAKE_CASE for constants.\n    FAIRChampion::Utils::ExtructCommand = extruct_command\n                         ^^^^^^^^^^^^^^\napp/lib/config.rb:19:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/lib/config.rb:28:22: C: [Correctable] Style/SpecialGlobalVars: Prefer $LAST_READ_LINE from the stdlib 'English' module (don't forget to require it) over $_.\n    when !(/rdf$/ =~ $_)\n                     ^^\napp/lib/config.rb:31:26: C: Naming/ConstantName: Use SCREAMING_SNAKE_CASE for constants.\n    FAIRChampion::Utils::RDFCommand = rdf_command\n                         ^^^^^^^^^^\napp/lib/config.rb:37:26: C: Naming/ConstantName: Use SCREAMING_SNAKE_CASE for constants.\n    FAIRChampion::Utils::TikaCommand = tika_command\n                         ^^^^^^^^^^^\napp/lib/config.rb:39:26: C: Naming/ConstantName: Use SCREAMING_SNAKE_CASE for constants.\n    FAIRChampion::Utils::AcceptHeader = { 'Accept' => 'text/turtle, application/ld+json, application/rdf+xml, text/xhtml+xml, application/n3, application/rdf+n3, application/turtle, application/x-turtle, text/n3, text/turtle, text/rdf+n3, text/rdf+turtle, application/n-triples' }\n                         ^^^^^^^^^^^^\napp/lib/config.rb:39:41: C: [Correctable] Style/MutableConstant: Freeze mutable objects assigned to constants.\n    FAIRChampion::Utils::AcceptHeader = { 'Accept' => 'text/turtle, application/ld+json, application/rdf+xml, text/xhtml+xml, application/n3, application/rdf+n3, application/turtle, application/x-turtle, text/n3, text/turtle, text/rdf+n3, text/rdf+turtle, application/n-triples' }\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/config.rb:39:121: C: Layout/LineLength: Line is too long. [280/120]\n    FAIRChampion::Utils::AcceptHeader = { 'Accept' => 'text/turtle, application/ld+json, application/rdf+xml, text/xhtml+xml, application/n3, application/rdf+n3, application/turtle, application/x-turtle, text/n3, text/turtle, text/rdf+n3, text/rdf+turtle, application/n-triples' }\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/config.rb:41:41: C: [Correctable] Style/MutableConstant: Freeze mutable objects assigned to constants.\n    FAIRChampion::Utils::TEXT_FORMATS = { ...\n                                        ^\napp/lib/config.rb:45:40: C: [Correctable] Style/MutableConstant: Freeze mutable objects assigned to constants.\n    FAIRChampion::Utils::RDF_FORMATS = { ...\n                                       ^\napp/lib/config.rb:48:19: C: [Correctable] Layout/ArrayAlignment: Align the elements of an array literal if they span more than one line.\n                  'application/turtle', 'application/x-turtle', 'text/n3', 'text/turtle',\n                  ^^^^^^^^^^^^^^^^^^^^\napp/lib/config.rb:49:19: C: [Correctable] Layout/ArrayAlignment: Align the elements of an array literal if they span more than one line.\n                  'text/rdf+n3', 'text/rdf+turtle'],\n                  ^^^^^^^^^^^^^\napp/lib/config.rb:55:40: C: [Correctable] Style/MutableConstant: Freeze mutable objects assigned to constants.\n    FAIRChampion::Utils::XML_FORMATS = { ...\n                                       ^\napp/lib/config.rb:59:41: C: [Correctable] Style/MutableConstant: Freeze mutable objects assigned to constants.\n    FAIRChampion::Utils::HTML_FORMATS = { ...\n                                        ^\napp/lib/config.rb:63:41: C: [Correctable] Style/MutableConstant: Freeze mutable objects assigned to constants.\n    FAIRChampion::Utils::JSON_FORMATS = { ...\n                                        ^\napp/lib/config.rb:67:44: C: [Correctable] Style/MutableConstant: Freeze mutable objects assigned to constants.\n    FAIRChampion::Utils::DATA_PREDICATES = [ ...\n                                           ^\napp/lib/config.rb:102:55: C: [Correctable] Style/MutableConstant: Freeze mutable objects assigned to constants.\n    FAIRChampion::Utils::SELF_IDENTIFIER_PREDICATES = [ ...\n                                                      ^\napp/lib/config.rb:111:39: C: [Correctable] Style/MutableConstant: Freeze mutable objects assigned to constants.\n    FAIRChampion::Utils::GUID_TYPES = { 'inchi' => /^\\w{14}-\\w{10}-\\w$/, ...\n                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/config.rb:112:27: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n                          'doi' => %r{^10.\\d{4,9}/[-._;()/:A-Z0-9]+$}i,\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/config.rb:113:27: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n                          'handle1' => %r{^[^/]+/[^/]+$}i,\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/config.rb:114:27: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n                          'handle2' => %r{^\\d{4,5}/[-._;()/:A-Z0-9]+$}i, # legacy style  12345/AGB47A\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/config.rb:115:27: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n                          'uri' => %r{^\\w+:/?/?[^\\s]+$} }\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/config.rb:117:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/lib/config.rb:118:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/lib/config.rb:119:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/lib/config.rb:120:5: C: Style/Documentation: Missing top-level documentation comment for class FAIRChampion::Utils::Config.\n    class Config\n    ^^^^^^^^^^^^\napp/lib/config.rb:121:46: W: [Correctable] Lint/TrailingCommaInAttributeDeclaration: Avoid leaving a trailing comma in attribute declarations.\n      attr_accessor :fairsharing_key_location, \n                                             ^\napp/lib/config.rb:121:47: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n      attr_accessor :fairsharing_key_location, \n                                              ^\napp/lib/config.rb:122:7: C: [Correctable] Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.\n      def initialize(fairsharing_key_location: \"\") ...\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/config.rb:122:48: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      def initialize(fairsharing_key_location: \"\")\n                                               ^^\napp/lib/config.rb:131:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.\nend\n   \napp/lib/dcat_metadata.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nmodule ChampionDCAT\n^\napp/lib/dcat_metadata.rb:2:3: C: Style/Documentation: Missing top-level documentation comment for class ChampionDCAT::DCAT_Record.\n  class DCAT_Record\n  ^^^^^^^^^^^^^^^^^\napp/lib/dcat_metadata.rb:2:9: C: Naming/ClassAndModuleCamelCase: Use CamelCase for classes and modules.\n  class DCAT_Record\n        ^^^^^^^^^^^\napp/lib/dcat_metadata.rb:3:19: C: Naming/MethodName: Use snake_case for method names.\n    attr_accessor :identifier, :testname, :description, :keywords, :creator, ...\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/dcat_metadata.rb:12:5: C: Metrics/AbcSize: Assignment Branch Condition size for initialize is too high. [<26, 27, 4> 37.7/17]\n    def initialize(meta:) ...\n    ^^^^^^^^^^^^^^^^^^^^^\napp/lib/dcat_metadata.rb:12:5: C: Metrics/MethodLength: Method has too many lines. [26/10]\n    def initialize(meta:) ...\n    ^^^^^^^^^^^^^^^^^^^^^\napp/lib/dcat_metadata.rb:23:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      @dctype = meta[:dctype] || \"http://edamontology.org/operation_2428\"\n                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/dcat_metadata.rb:32:7: C: Naming/VariableName: Use snake_case for variable names.\n      @basePath = meta[:basePath]\n      ^^^^^^^^^\napp/lib/dcat_metadata.rb:33:30: C: [Correctable] Style/RedundantRegexpArgument: Use string \"/\" as argument instead of regexp /\\//.\n      cleanhost = @host.gsub(/\\//, \"\")\n                             ^^^^\napp/lib/dcat_metadata.rb:33:30: C: [Correctable] Style/RegexpLiteral: Use %r around regular expression.\n      cleanhost = @host.gsub(/\\//, \"\")\n                             ^^^^\napp/lib/dcat_metadata.rb:33:36: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      cleanhost = @host.gsub(/\\//, \"\")\n                                   ^^\napp/lib/dcat_metadata.rb:34:34: C: [Correctable] Style/RedundantRegexpArgument: Use string \"/\" as argument instead of regexp /\\//.\n      cleanpath = @basePath.gsub(/\\//, \"\")\n                                 ^^^^\napp/lib/dcat_metadata.rb:34:34: C: [Correctable] Style/RegexpLiteral: Use %r around regular expression.\n      cleanpath = @basePath.gsub(/\\//, \"\")\n                                 ^^^^\napp/lib/dcat_metadata.rb:34:40: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      cleanpath = @basePath.gsub(/\\//, \"\")\n                                       ^^\napp/lib/dcat_metadata.rb:41:5: C: Metrics/AbcSize: Assignment Branch Condition size for get_dcat is too high. [<20, 88, 6> 90.44/17]\n    def get_dcat ...\n    ^^^^^^^^^^^^\napp/lib/dcat_metadata.rb:41:5: C: Metrics/MethodLength: Method has too many lines. [50/10]\n    def get_dcat ...\n    ^^^^^^^^^^^^\napp/lib/dcat_metadata.rb:41:9: C: Naming/AccessorMethodName: Do not prefix reader method names with get_.\n    def get_dcat\n        ^^^^^^^^\napp/lib/dcat_metadata.rb:42:7: W: [Correctable] Lint/UselessAssignment: Useless assignment to variable - schema.\n      schema = RDF::Vocab::SCHEMA\n      ^^^^^^\napp/lib/dcat_metadata.rb:104:41: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n      FAIRChampion::Output.triplify(me, RDF::Vocab::DCAT.to_s + 'version', testversion, g)\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/deprecaated_about.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\n# require 'cgi'\n^\napp/lib/deprecaated_about.rb:15:121: C: Layout/LineLength: Line is too long. [139/120]\n#     attr_accessor :score, :testedGUID, :testid, :uniqueid, :name, :description, :license, :dt, :metric, :version, :summary, :completeness\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^\napp/lib/deprecaated_about.rb:18:121: C: Layout/LineLength: Line is too long. [206/120]\n#     def initialize(  testedGUID:, name:, testid:, description:, version:, metric:, summary: \"Summary\", completeness: \"100\", license: \"https://creativecommons.org/licenses/by/4.0/\", score: 'indeterminate')\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/deprecaated_about.rb:71:132: C: Layout/LineLength: Line is too long. [134/120]\n#       triplify(softwareid, schema.identifier, \"https://github.com/wilkinsonlab/FAIR-Core-Tests/tree/main/app/tests/#{testid}.rb\", g)\n                                                                                                                                   ^^^\napp/lib/distiller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nmodule FAIRChampion\n^\napp/lib/distiller.rb:2:3: C: Style/Documentation: Missing top-level documentation comment for class FAIRChampion::Harvester.\n  class Harvester\n  ^^^^^^^^^^^^^^^\napp/lib/distiller.rb:3:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.\napp/lib/distiller.rb:4:5: C: Metrics/AbcSize: Assignment Branch Condition size for do_distiller is too high. [<12, 30, 3> 32.45/17]\n    def self.do_distiller(meta, body) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/distiller.rb:4:5: C: Metrics/MethodLength: Method has too many lines. [30/10]\n    def self.do_distiller(meta, body) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/distiller.rb:23:121: C: Layout/LineLength: Line is too long. [156/120]\n      #        command = \"LANG=en_US.UTF-8 #{FAIRChampion::Utils::RDFCommand} serialize --input-format rdfa --output-format turtle #{file.path} 2>/dev/null\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/distiller.rb:24:121: C: Layout/LineLength: Line is too long. [137/120]\n      # command = \"LANG=en_US.UTF-8 #{FAIRChampion::Utils::RDFCommand} serialize --input-format rdfa --output-format jsonld #{file.path}\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^\napp/lib/distiller.rb:25:121: C: Layout/LineLength: Line is too long. [135/120]\n      command = \"LANG=en_US.UTF-8 #{FAIRChampion::Utils::RDFCommand} serialize --input-format rdfa --output-format jsonld #{file.path}\"\n                                                                                                                        ^^^^^^^^^^^^^^^\napp/lib/distiller.rb:26:121: C: Layout/LineLength: Line is too long. [178/120]\n      #        command = \"LANG=en_US.UTF-8 /home/osboxes/.rvm/rubies/ruby-2.6.3/bin/ruby /home/osboxes/.rvm/gems/ruby-2.6.3/bin/rdf serialize --output-format jsonld #{file.path}\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/distiller.rb:27:12: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n      warn 'distiller command: ' + command\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/distiller.rb:30:7: W: Lint/SelfAssignment: Self-assignment detected.\n      stderr = stderr # silnece debugger\n      ^^^^^^^^^^^^^^^\napp/lib/distiller.rb:31:7: W: Lint/SelfAssignment: Self-assignment detected.\n      status = status\n      ^^^^^^^^^^^^^^^\napp/lib/distiller.rb:31:7: W: [Correctable] Lint/UselessAssignment: Useless assignment to variable - status.\n      status = status\n      ^^^^^^\napp/lib/distiller.rb:42:121: C: Layout/LineLength: Line is too long. [140/120]\n        meta.comments << \"WARN: The Distiller tool failed to find parseable data in the body, perhaps due to incorrectly formatted HTML..\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^\napp/lib/doi.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nmodule FAIRChampion\n^\napp/lib/doi.rb:2:3: C: Style/Documentation: Missing top-level documentation comment for class FAIRChampion::Harvester.\n  class Harvester\n  ^^^^^^^^^^^^^^^\napp/lib/doi.rb:3:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.\napp/lib/doi.rb:4:5: C: Metrics/AbcSize: Assignment Branch Condition size for resolve_doi is too high. [<4, 19, 2> 19.52/17]\n    def self.resolve_doi(guid, meta) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/doi.rb:4:5: C: Metrics/MethodLength: Method has too many lines. [14/10]\n    def self.resolve_doi(guid, meta) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/doi.rb:11:121: C: Layout/LineLength: Line is too long. [139/120]\n      Harvester.resolve_url(guid: url, meta: meta, nolinkheaders: false) # specifically metadataguid: link, meta: meta, nolinkheaders: true\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^\napp/lib/doi.rb:13:121: C: Layout/LineLength: Line is too long. [126/120]\n      Harvester.resolve_url(guid: url, meta: meta, nolinkheaders: false, headers: { 'Accept' => '*/*' }) # whatever is default\n                                                                                                                        ^^^^^^\napp/lib/doi.rb:20:7: C: Naming/VariableName: Use snake_case for variable names.\n      finalURI = meta.finalURI.last\n      ^^^^^^^^\napp/lib/doi.rb:21:10: C: Naming/VariableName: Use snake_case for variable names.\n      if finalURI =~ %r{\\w+://}\n         ^^^^^^^^\napp/lib/doi.rb:22:121: C: Layout/LineLength: Line is too long. [205/120]\n        meta.comments << \"INFO:  DOI resolution captures content-negotiation before reaching final data owner.  Now re-attempting the full suite of content negotiation on final redirect URI #{finalURI}.\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/doi.rb:22:193: C: Naming/VariableName: Use snake_case for variable names.\n        meta.comments << \"INFO:  DOI resolution captures content-negotiation before reaching final data owner.  Now re-attempting the full suite of content negotiation on final redirect URI #{finalURI}.\\n\"\n                                                                                                                                                                                                ^^^^^^^^\napp/lib/doi.rb:23:31: C: Naming/VariableName: Use snake_case for variable names.\n        Harvester.resolve_uri(finalURI, meta)\n                              ^^^^^^^^\napp/lib/extruct.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nmodule FAIRChampion\n^\napp/lib/extruct.rb:2:3: C: Style/Documentation: Missing top-level documentation comment for class FAIRChampion::Harvester.\n  class Harvester\n  ^^^^^^^^^^^^^^^\napp/lib/extruct.rb:3:5: C: Metrics/AbcSize: Assignment Branch Condition size for do_extruct is too high. [<5, 59, 12> 60.42/17]\n    def self.do_extruct(meta, uri) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/extruct.rb:3:5: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for do_extruct is too high. [12/7]\n    def self.do_extruct(meta, uri) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/extruct.rb:3:5: C: Metrics/MethodLength: Method has too many lines. [27/10]\n    def self.do_extruct(meta, uri) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/extruct.rb:3:5: C: Metrics/PerceivedComplexity: Perceived complexity for do_extruct is too high. [13/8]\n    def self.do_extruct(meta, uri) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/extruct.rb:7:47: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n      stdout, stderr, status = Open3.capture3(FAIRChampion::Utils::ExtructCommand + ' ' + uri)\n                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/extruct.rb:20:121: C: Layout/LineLength: Line is too long. [147/120]\n        meta.comments << \"WARN: extruct threw an error #{::Regexp.last_match(1)} when attempting to parse return value (message body) of #{uri}.\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/extruct.rb:21:80: C: [Correctable] Style/IfUnlessModifier: Modifier form of if makes the line too long.\n        meta.comments << \"WARN: extruct error was #{::Regexp.last_match(1)}\\n\" if result.to_s.match(/(ValueError:.*?)\\n/)\n                                                                               ^^\napp/lib/extruct.rb:21:121: C: Layout/LineLength: Line is too long. [121/120]\n        meta.comments << \"WARN: extruct error was #{::Regexp.last_match(1)}\\n\" if result.to_s.match(/(ValueError:.*?)\\n/)\n                                                                                                                        ^\napp/lib/extruct.rb:22:42: C: [Correctable] Style/AndOr: Use || instead of or.\n      elsif result.to_s.match(/^\\s+?\\{/) or result.to_s.match(/^\\s+\\[/) # this is JSON\n                                         ^^\napp/lib/handle.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nmodule FAIRChampion\n^\napp/lib/handle.rb:2:3: C: Style/Documentation: Missing top-level documentation comment for class FAIRChampion::Harvester.\n  class Harvester\n  ^^^^^^^^^^^^^^^\napp/lib/handle.rb:3:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.\napp/lib/handle.rb:11:121: C: Layout/LineLength: Line is too long. [140/120]\n      #      meta.comments << \"INFO:  Attempting to resolve http://hdl.handle.net/#{guid} using HTTP Headers #{{\"Accept\" => \"*/*\"}.to_s}.\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nrequire 'json'\n^\napp/lib/harvester.rb:24:1: W: [Correctable] Lint/DuplicateRequire: Duplicate require detected.\nrequire 'sparql'\n^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:28:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nrequire_rel \"../lib\"\n            ^^^^^^^^\napp/lib/harvester.rb:36:16: C: Naming/MethodParameterName: Method parameter must be at least 3 characters long.\ndef URI.escape(g)  # monkey patch to bring back functionality for metainspector\n               ^\napp/lib/harvester.rb:36:20: C: [Correctable] Style/CommentedKeyword: Do not place comments on the same line as the def keyword.\ndef URI.escape(g)  # monkey patch to bring back functionality for metainspector\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:39:1: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 0.\ndef URI.encode(g)  # monkey patch to bring back functionality for metainspector\n^^^^^^^^^^^^^^\napp/lib/harvester.rb:39:16: C: Naming/MethodParameterName: Method parameter must be at least 3 characters long.\ndef URI.encode(g)  # monkey patch to bring back functionality for metainspector\n               ^\napp/lib/harvester.rb:39:20: C: [Correctable] Style/CommentedKeyword: Do not place comments on the same line as the def keyword.\ndef URI.encode(g)  # monkey patch to bring back functionality for metainspector\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:42:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\napp/lib/harvester.rb:44:1: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between module definitions; found 2.\nmodule FAIRChampion\n^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:45:3: C: Metrics/ClassLength: Class has too many lines. [307/100]\n  class Harvester ...\n  ^^^^^^^^^^^^^^^\napp/lib/harvester.rb:45:3: C: Style/Documentation: Missing top-level documentation comment for class FAIRChampion::Harvester.\n  class Harvester\n  ^^^^^^^^^^^^^^^\napp/lib/harvester.rb:46:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.\napp/lib/harvester.rb:47:5: C: Style/ClassVars: Replace class var @@distillerknown with a class instance var.\n    @@distillerknown = {} # global, hash of sha256 keys of message bodies - have they been seen before t/f\n    ^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:49:5: C: Metrics/AbcSize: Assignment Branch Condition size for resolveit is too high. [<5, 20, 18> 27.37/17]\n    def self.resolveit(guid) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:49:5: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for resolveit is too high. [13/7]\n    def self.resolveit(guid) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:49:5: C: Metrics/MethodLength: Method has too many lines. [21/10]\n    def self.resolveit(guid) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:49:5: C: Metrics/PerceivedComplexity: Perceived complexity for resolveit is too high. [14/8]\n    def self.resolveit(guid) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:58:25: C: [Correctable] Style/AndOr: Use && instead of and.\n        if k == 'inchi' and regex.match(guid)\n                        ^^^\napp/lib/harvester.rb:60:30: C: [Correctable] Style/AndOr: Use && instead of and.\n        elsif k == 'handle1' and regex.match(guid)\n                             ^^^\napp/lib/harvester.rb:62:9: W: Lint/DuplicateBranch: Duplicate branch body detected.\n        elsif k == 'handle2' and regex.match(guid) ...\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:62:30: C: [Correctable] Style/AndOr: Use && instead of and.\n        elsif k == 'handle2' and regex.match(guid)\n                             ^^^\napp/lib/harvester.rb:64:26: C: [Correctable] Style/AndOr: Use && instead of and.\n        elsif k == 'uri' and regex.match(guid)\n                         ^^^\napp/lib/harvester.rb:66:26: C: [Correctable] Style/AndOr: Use && instead of and.\n        elsif k == 'doi' and regex.match(guid)\n                         ^^^\napp/lib/harvester.rb:71:10: C: [Correctable] Style/ZeroLengthPredicate: Use empty? instead of length < 1.\n      if meta.comments.length < 1 # didn't match any of the types, so no comments were added\n         ^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:73:121: C: Layout/LineLength: Line is too long. [159/120]\n        meta.comments << \"CRITICAL: The guid '#{guid}' did not correspond to any known GUID format. Tested #{FAIRChampion::Utils::GUID_TYPES.keys}. Halting.\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:80:5: C: Metrics/AbcSize: Assignment Branch Condition size for convertToURL is too high. [<3, 6, 16> 17.35/17]\n    def self.convertToURL(guid) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:80:5: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for convertToURL is too high. [12/7]\n    def self.convertToURL(guid) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:80:5: C: Metrics/MethodLength: Method has too many lines. [15/10]\n    def self.convertToURL(guid) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:80:5: C: Metrics/PerceivedComplexity: Perceived complexity for convertToURL is too high. [13/8]\n    def self.convertToURL(guid) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:80:14: C: Naming/MethodName: Use snake_case for method names.\n    def self.convertToURL(guid)\n             ^^^^^^^^^^^^\napp/lib/harvester.rb:83:25: C: [Correctable] Style/AndOr: Use && instead of and.\n        if k == 'inchi' and regex.match(guid)\n                        ^^^\napp/lib/harvester.rb:85:30: C: [Correctable] Style/AndOr: Use && instead of and.\n        elsif k == 'handle1' and regex.match(guid)\n                             ^^^\napp/lib/harvester.rb:87:9: W: Lint/DuplicateBranch: Duplicate branch body detected.\n        elsif k == 'handle2' and regex.match(guid) ...\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:87:30: C: [Correctable] Style/AndOr: Use && instead of and.\n        elsif k == 'handle2' and regex.match(guid)\n                             ^^^\napp/lib/harvester.rb:89:26: C: [Correctable] Style/AndOr: Use && instead of and.\n        elsif k == 'uri' and regex.match(guid)\n                         ^^^\napp/lib/harvester.rb:91:26: C: [Correctable] Style/AndOr: Use && instead of and.\n        elsif k == 'doi' and regex.match(guid)\n                         ^^^\napp/lib/harvester.rb:106:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/lib/harvester.rb:107:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/lib/harvester.rb:108:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/lib/harvester.rb:109:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/lib/harvester.rb:110:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/lib/harvester.rb:111:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/lib/harvester.rb:112:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/lib/harvester.rb:113:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/lib/harvester.rb:114:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/lib/harvester.rb:138:5: C: Metrics/AbcSize: Assignment Branch Condition size for parse_rdf is too high. [<10, 62, 11> 63.76/17]\n    def self.parse_rdf(meta, body, format = nil) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:138:5: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for parse_rdf is too high. [9/7]\n    def self.parse_rdf(meta, body, format = nil) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:138:5: C: Metrics/MethodLength: Method has too many lines. [61/10]\n    def self.parse_rdf(meta, body, format = nil) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:138:5: C: Metrics/PerceivedComplexity: Perceived complexity for parse_rdf is too high. [10/8]\n    def self.parse_rdf(meta, body, format = nil) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:148:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/lib/harvester.rb:149:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/lib/harvester.rb:153:121: C: Layout/LineLength: Line is too long. [258/120]\n      #   meta.comments << \"CRITICAL: The Evaluator found what it believed to be RDF (sample:  #{body[0..300].delete!(\"\\n\")}), but it could not find a parser.  Please report this error, along with the GUID of the resource, to the maintainer of the system.\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:158:10: C: [Correctable] Style/NumericPredicate: Use graph.size.positive? instead of graph.size > 0.\n      if graph.size > 0\n         ^^^^^^^^^^^^^^\napp/lib/harvester.rb:158:10: C: [Correctable] Style/ZeroLengthPredicate: Use !empty? instead of size > 0.\n      if graph.size > 0\n         ^^^^^^^^^^^^^^\napp/lib/harvester.rb:164:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\napp/lib/harvester.rb:179:121: C: Layout/LineLength: Line is too long. [228/120]\n        meta.comments << \"CRITICAL: Unable to find an RDF reader type that matches the content that was returned from resolution.  Here is a sample #{body[0..100]}  Please send your GUID to the dev team so we can investigate!\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:187:121: C: Layout/LineLength: Line is too long. [201/120]\n        meta.comments << \"WARN: Though linked data was found, it failed to parse.  This likely indicates some syntax error in the data.  As a result, no metadata will be extracted from this message.\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:193:12: C: [Correctable] Style/NumericPredicate: Use reader.size.zero? instead of reader.size == 0.\n        if reader.size == 0\n           ^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:193:12: C: [Correctable] Style/ZeroLengthPredicate: Use empty? instead of size == 0.\n        if reader.size == 0\n           ^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:194:121: C: Layout/LineLength: Line is too long. [203/120]\n          meta.comments << \"WARN: Though linked data was found, it failed to parse.  This likely indicates some syntax error in the data.  As a result, no metadata will be extracted from this message.\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:199:121: C: Layout/LineLength: Line is too long. [126/120]\n        reader = formattype.reader.new(body) # have to re-read it here, but now its safe because we have already caught errors\n                                                                                                                        ^^^^^^\napp/lib/harvester.rb:208:121: C: Layout/LineLength: Line is too long. [195/120]\n        meta.comments << \"CRITICAL: The Linked Data was malformed and caused the parser to crash with error message: #{e.message} ||  (sample of what was parsed:  #{body[0..300].delete(\"\\n\")})\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:209:121: C: Layout/LineLength: Line is too long. [183/120]\n        warn \"CRITICAL: The Linked Data was malformed and caused the parser to crash with error message: #{e.message} ||  (sample of what was parsed:  #{body[0..300].delete(\"\\n\")})\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:211:7: W: Lint/RescueException: Avoid rescuing the Exception class. Perhaps you meant to rescue StandardError?\n      rescue Exception => e ...\n      ^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:212:121: C: Layout/LineLength: Line is too long. [179/120]\n        meta.comments << \"CRITICAL: An unknown error occurred while parsing the (apparent) Linked Data (sample of what was parsed:  #{body[0..300].delete(\"\\n\")}).  Moving on...\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:213:121: C: Layout/LineLength: Line is too long. [149/120]\n        warn \"\\n\\nCRITICAL: #{e.inspect} An unknown error occurred while parsing the (apparent) Linked Data (full body:  #{body}).  Moving on...\\n\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:216:1: C: [Correctable] Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body end.\napp/lib/harvester.rb:226:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/lib/harvester.rb:227:5: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 2.\n    def self.parse_link_http_headers(headers)\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:227:5: C: Metrics/AbcSize: Assignment Branch Condition size for parse_link_http_headers is too high. [<9, 14, 8> 18.47/17]\n    def self.parse_link_http_headers(headers) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:227:5: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for parse_link_http_headers is too high. [9/7]\n    def self.parse_link_http_headers(headers) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:227:5: C: Metrics/MethodLength: Method has too many lines. [19/10]\n    def self.parse_link_http_headers(headers) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:227:5: C: Metrics/PerceivedComplexity: Perceived complexity for parse_link_http_headers is too high. [9/8]\n    def self.parse_link_http_headers(headers) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:238:7: C: [Correctable] Style/HashEachMethods: Use each_key instead of each and remove the unused _index block argument.\n      parts.each do |part, _index| ...\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:259:5: C: Metrics/MethodLength: Method has too many lines. [12/10]\n    def self.parse_link_body_headers(url, body) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:265:11: C: [Correctable] Layout/ArrayAlignment: Align the elements of an array literal if they span more than one line.\n          FAIRChampion::Utils::XML_FORMATS.values,\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:266:11: C: [Correctable] Layout/ArrayAlignment: Align the elements of an array literal if they span more than one line.\n          FAIRChampion::Utils::JSON_FORMATS.values].flatten\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:276:31: C: Naming/MethodParameterName: Only use lowercase characters for method parameter.\n    def self.deep_dive_values(myHash, value = nil, vals = [])\n                              ^^^^^^\napp/lib/harvester.rb:276:31: C: Naming/VariableName: Use snake_case for variable names.\n    def self.deep_dive_values(myHash, value = nil, vals = [])\n                              ^^^^^^\napp/lib/harvester.rb:277:7: C: Naming/VariableName: Use snake_case for variable names.\n      myHash.each_pair do |_k, v|\n      ^^^^^^\napp/lib/harvester.rb:288:5: C: Metrics/MethodLength: Method has too many lines. [12/10]\n    def self.deep_dive_properties(myHash, property = nil, props = []) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:288:35: C: Naming/MethodParameterName: Only use lowercase characters for method parameter.\n    def self.deep_dive_properties(myHash, property = nil, props = [])\n                                  ^^^^^^\napp/lib/harvester.rb:288:35: C: Naming/VariableName: Use snake_case for variable names.\n    def self.deep_dive_properties(myHash, property = nil, props = [])\n                                  ^^^^^^\napp/lib/harvester.rb:289:27: C: Naming/VariableName: Use snake_case for variable names.\n      return props unless myHash.is_a?(Hash)\n                          ^^^^^^\napp/lib/harvester.rb:291:7: C: Naming/VariableName: Use snake_case for variable names.\n      myHash.each_pair do |k, v|\n      ^^^^^^\napp/lib/harvester.rb:292:30: C: [Correctable] Style/AndOr: Use && instead of and.\n        props << if property and property == k\n                             ^^^\napp/lib/harvester.rb:293:18: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.\n                  [k, v]\n                 ^\napp/lib/harvester.rb:293:19: C: [Correctable] Style/IdenticalConditionalBranches: Move [k, v] out of the conditional.\n                  [k, v]\n                  ^^^^^^\napp/lib/harvester.rb:294:17: C: [Correctable] Layout/ElseAlignment: Align else with if.\n                else\n                ^^^^\napp/lib/harvester.rb:294:17: W: Lint/DuplicateBranch: Duplicate branch body detected.\n                else\n                ^^^^\napp/lib/harvester.rb:295:19: C: [Correctable] Style/IdenticalConditionalBranches: Move [k, v] out of the conditional.\n                  [k, v]\n                  ^^^^^^\napp/lib/harvester.rb:296:17: W: [Correctable] Layout/EndAlignment: end at 296, 16 is not aligned with if at 292, 17.\n                end\n                ^^^\napp/lib/harvester.rb:305:5: C: Metrics/AbcSize: Assignment Branch Condition size for figure_out_type is too high. [<12, 15, 11> 22.14/17]\n    def self.figure_out_type(head) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:305:5: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for figure_out_type is too high. [12/7]\n    def self.figure_out_type(head) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:305:5: C: Metrics/MethodLength: Method has too many lines. [23/10]\n    def self.figure_out_type(head) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:305:5: C: Metrics/PerceivedComplexity: Perceived complexity for figure_out_type is too high. [12/8]\n    def self.figure_out_type(head) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:333:5: C: Metrics/AbcSize: Assignment Branch Condition size for fetch is too high. [<9, 34, 12> 37.16/17]\n    def self.fetch(guid:, headers: FAIRChampion::Utils::AcceptHeader, meta: nil) # we will try to retrieve turtle whenever possible ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:333:5: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for fetch is too high. [12/7]\n    def self.fetch(guid:, headers: FAIRChampion::Utils::AcceptHeader, meta: nil) # we will try to retrieve turtle whenever possible ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:333:5: C: Metrics/MethodLength: Method has too many lines. [40/10]\n    def self.fetch(guid:, headers: FAIRChampion::Utils::AcceptHeader, meta: nil) # we will try to retrieve turtle whenever possible ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:333:5: C: Metrics/PerceivedComplexity: Perceived complexity for fetch is too high. [12/8]\n    def self.fetch(guid:, headers: FAIRChampion::Utils::AcceptHeader, meta: nil) # we will try to retrieve turtle whenever possible ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:333:82: C: [Correctable] Style/CommentedKeyword: Do not place comments on the same line as the def keyword.\n    def self.fetch(guid:, headers: FAIRChampion::Utils::AcceptHeader, meta: nil) # we will try to retrieve turtle whenever possible\n                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:333:121: C: Layout/LineLength: Line is too long. [131/120]\n    def self.fetch(guid:, headers: FAIRChampion::Utils::AcceptHeader, meta: nil) # we will try to retrieve turtle whenever possible\n                                                                                                                        ^^^^^^^^^^^\napp/lib/harvester.rb:334:19: C: Naming/VariableName: Use snake_case for variable names.\n      head, body, finalURI = Harvester.checkCache(guid, headers)\n                  ^^^^^^^^\napp/lib/harvester.rb:335:28: C: [Correctable] Style/AndOr: Use && instead of and.\n      return false if head and head == 'ERROR'\n                           ^^^\napp/lib/harvester.rb:338:9: C: [Correctable] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.\n        if finalURI\n        ^^\napp/lib/harvester.rb:338:9: C: [Correctable] Style/SoleNestedConditional: Consider merging nested conditions into outer if conditions.\n        if finalURI\n        ^^\napp/lib/harvester.rb:338:12: C: Naming/VariableName: Use snake_case for variable names.\n        if finalURI\n           ^^^^^^^^\napp/lib/harvester.rb:339:29: C: Naming/VariableName: Use snake_case for variable names.\n          meta.finalURI |= [finalURI]\n                            ^^^^^^^^\napp/lib/harvester.rb:344:15: C: [Correctable] Style/AndOr: Use && instead of and.\n      if head and body\n              ^^^\napp/lib/harvester.rb:352:49: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than the start of the previous line.\n                                                method: :get, ...\n                                                ^^^^^^^^^^^^^\napp/lib/harvester.rb:374:7: W: Lint/DuplicateBranch: Duplicate branch body detected.\n      rescue Exception => e ...\n      ^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:374:7: W: Lint/RescueException: Avoid rescuing the Exception class. Perhaps you meant to rescue StandardError?\n      rescue Exception => e ...\n      ^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:380:11: C: [Correctable] Style/CommentedKeyword: Do not place comments on the same line as the end keyword.\n      end # you can capture the Exception and do something useful with it!\\n\",\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:383:5: C: Metrics/MethodLength: Method has too many lines. [15/10]\n    def self.simplefetch(url, headers = FAIRChampion::Utils::AcceptHeader, _meta = nil) # we will try to retrieve turtle whenever possible ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:383:89: C: [Correctable] Style/CommentedKeyword: Do not place comments on the same line as the def keyword.\n    def self.simplefetch(url, headers = FAIRChampion::Utils::AcceptHeader, _meta = nil) # we will try to retrieve turtle whenever possible\n                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:383:121: C: Layout/LineLength: Line is too long. [138/120]\n    def self.simplefetch(url, headers = FAIRChampion::Utils::AcceptHeader, _meta = nil) # we will try to retrieve turtle whenever possible\n                                                                                                                        ^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:387:121: C: Layout/LineLength: Line is too long. [251/120]\n      #    meta.comments << \"WARN: The size of the content at #{url} reports itself to be >300kb.  This service will not download something so large.  This does not mean that the content is not FAIR, only that this service will not test it.  Sorry!\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:392:47: C: [Correctable] Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.\n                                              method: :get,\n                                              ^^^^^^^^^^^^\napp/lib/harvester.rb:397:45: C: [Correctable] Layout/FirstHashElementIndentation: Indent the right brace the same as the first position after the preceding left parenthesis.\n                                            })\n                                            ^\napp/lib/harvester.rb:403:5: W: Lint/DuplicateBranch: Duplicate branch body detected.\n    rescue RestClient::Exception => e ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:407:5: W: Lint/RescueException: Avoid rescuing the Exception class. Perhaps you meant to rescue StandardError?\n    rescue Exception => e ...\n    ^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:415:5: C: Metrics/MethodLength: Method has too many lines. [15/10]\n    def self.head(url, headers = FAIRChampion::Utils::AcceptHeader) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:417:47: C: [Correctable] Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.\n                                              method: :head,\n                                              ^^^^^^^^^^^^^\napp/lib/harvester.rb:422:45: C: [Correctable] Layout/FirstHashElementIndentation: Indent the right brace the same as the first position after the preceding left parenthesis.\n                                            })\n                                            ^\napp/lib/harvester.rb:428:5: W: Lint/DuplicateBranch: Duplicate branch body detected.\n    rescue RestClient::Exception => e ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:432:5: W: Lint/RescueException: Avoid rescuing the Exception class. Perhaps you meant to rescue StandardError?\n    rescue Exception => e ...\n    ^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:440:5: C: Metrics/MethodLength: Method has too many lines. [15/10]\n    def self.resolve(url, headers = FAIRChampion::Utils::AcceptHeader) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:442:47: C: [Correctable] Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.\n                                              method: :head,\n                                              ^^^^^^^^^^^^^\napp/lib/harvester.rb:447:45: C: [Correctable] Layout/FirstHashElementIndentation: Indent the right brace the same as the first position after the preceding left parenthesis.\n                                            })\n                                            ^\napp/lib/harvester.rb:453:5: W: Lint/DuplicateBranch: Duplicate branch body detected.\n    rescue RestClient::Exception => e ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:457:5: W: Lint/RescueException: Avoid rescuing the Exception class. Perhaps you meant to rescue StandardError?\n    rescue Exception => e ...\n    ^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:464:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/lib/harvester.rb:464:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.\napp/lib/harvester.rb:465:7: C: [Correctable] Style/CommentedKeyword: Do not place comments on the same line as the end keyword.\n  end # END OF Harvester CLASS\n      ^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/harvester.rb:466:1: C: [Correctable] Layout/EmptyLinesAroundModuleBody: Extra empty line detected at module body end.\napp/lib/harvester.rb:467:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.\nend\n   \napp/lib/inchi.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nmodule FAIRChampion\n^\napp/lib/inchi.rb:2:3: C: Style/Documentation: Missing top-level documentation comment for class FAIRChampion::Harvester.\n  class Harvester\n  ^^^^^^^^^^^^^^^\napp/lib/inchi.rb:3:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.\napp/lib/inchi.rb:4:5: C: Metrics/AbcSize: Assignment Branch Condition size for resolve_inchi is too high. [<16, 42, 8> 45.65/17]\n    def self.resolve_inchi(guid, meta) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/inchi.rb:4:5: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for resolve_inchi is too high. [9/7]\n    def self.resolve_inchi(guid, meta) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/inchi.rb:4:5: C: Metrics/MethodLength: Method has too many lines. [43/10]\n    def self.resolve_inchi(guid, meta) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/inchi.rb:4:5: C: Metrics/PerceivedComplexity: Perceived complexity for resolve_inchi is too high. [9/8]\n    def self.resolve_inchi(guid, meta) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/inchi.rb:9:121: C: Layout/LineLength: Line is too long. [135/120]\n      meta.comments << \"INFO: Resolving using PubChem Resolver #{url} with HTTP Accept Headers #{FAIRChampion::Utils::AcceptHeader}.\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^\napp/lib/inchi.rb:23:21: C: [Correctable] Style/AndOr: Use && instead of and.\n      unless parser and type\n                    ^^^\napp/lib/inchi.rb:43:121: C: Layout/LineLength: Line is too long. [192/120]\n        meta.comments << \"CRITICAL: Could not find the sio:is_attribute_of predicate in the first layer of metadatafrom https://pubchem.ncbi.nlm.nih.gov/rest/rdf/inchikey/#{guid}. Halting. \\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/inchi.rb:56:121: C: Layout/LineLength: Line is too long. [157/120]\n        meta.comments << \"CRITICAL: Resolution of #{cpd} using HTTP Accept Header #{FAIRChampion::Utils::AcceptHeader} returned no message body. Halting. \\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/inchi.rb:62:16: W: [Correctable] Lint/UselessAssignment: Useless assignment to variable - type. Use _ or _type as a variable name to indicate that it won't be used.\n      (parser, type) = Harvester.figure_out_type(head2)\n               ^^^^\napp/lib/metadata.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nmodule FAIRChampion\n^\napp/lib/metadata.rb:2:3: C: Style/Documentation: Missing top-level documentation comment for class FAIRChampion::MetadataObject.\n  class MetadataObject\n  ^^^^^^^^^^^^^^^^^^^^\napp/lib/metadata.rb:3:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.\napp/lib/metadata.rb:4:5: C: Style/ClassVars: Replace class var @@comments with a class instance var.\n    @@comments = []\n    ^^^^^^^^^^\napp/lib/metadata.rb:5:19: C: Naming/MethodName: Use snake_case for method names.\n    attr_accessor :hash, :graph, :guidtype, :full_response, :finalURI\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/metadata.rb:7:25: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n    # a hash of metadata \n                        ^\napp/lib/metadata.rb:8:33: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n    # a RDF.rb graph of metadata  \n                                ^^\napp/lib/metadata.rb:9:27: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n    # an array of comments  \n                          ^^\napp/lib/metadata.rb:12:19: C: [Correctable] Style/DefWithParentheses: Omit the parentheses in defs when the method doesn't accept any arguments.\n    def initialize()\n                  ^^\napp/lib/metadata.rb:16:7: C: Naming/VariableName: Use snake_case for variable names.\n      @finalURI = []\n      ^^^^^^^^^\napp/lib/metadata.rb:21:8: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n    end \n       ^\napp/lib/metadata.rb:22:5: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 0.\n    def self.comments\n    ^^^^^^^^^^^^^^^^^\napp/lib/metadata.rb:24:8: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n    end \n       ^\napp/lib/metadata.rb:27:7: C: Style/ClassVars: Replace class var @@comments with a class instance var.\n      @@comments = []\n      ^^^^^^^^^^\napp/lib/metadata.rb:29:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\napp/lib/metadata.rb:35:28: C: [Correctable] Style/CommentedKeyword: Do not place comments on the same line as the def keyword.\n    def merge_rdf(triples) # incoming list of triples\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/openapi.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class OpenAPI.\nclass OpenAPI\n^^^^^^^^^^^^^\napp/lib/openapi.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nclass OpenAPI\n^\napp/lib/openapi.rb:2:17: C: Naming/MethodName: Use snake_case for method names.\n  attr_accessor :title, :metric, :description, :indicator, :testid, ...\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/openapi.rb:7:3: C: Metrics/AbcSize: Assignment Branch Condition size for initialize is too high. [<18, 20, 1> 26.93/17]\n  def initialize(meta:) ...\n  ^^^^^^^^^^^^^^^^^^^^^\napp/lib/openapi.rb:7:3: C: Metrics/MethodLength: Method has too many lines. [18/10]\n  def initialize(meta:) ...\n  ^^^^^^^^^^^^^^^^^^^^^\napp/lib/openapi.rb:22:5: C: Naming/VariableName: Use snake_case for variable names.\n    @basePath =  meta[:basePath]\n    ^^^^^^^^^\napp/lib/openapi.rb:28:3: C: Metrics/MethodLength: Method has too many lines. [41/10]\n  def get_api ...\n  ^^^^^^^^^^^\napp/lib/openapi.rb:28:7: C: Naming/AccessorMethodName: Do not prefix reader method names with get_.\n  def get_api\n      ^^^^^^^\napp/lib/openapi.rb:29:5: C: [Correctable] Style/RedundantAssignment: Redundant assignment before returning detected.\n    message = <<~\"EOF_EOF\"\n    ^^^^^^^^^^^^^^^^^^^^^^\napp/lib/openapi.rb:30:1: C: [Correctable] Layout/HeredocIndentation: Use 2 spaces for indentation in a heredoc.\napp/lib/openapi.rb:71:1: C: [Correctable] Layout/ClosingHeredocIndentation: EOF_EOF is not aligned with message = <<~\"EOF_EOF\".\nEOF_EOF\n^^^^^^^\napp/lib/output.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nrequire 'cgi'\n^\napp/lib/output.rb:5:1: C: Style/MixinUsage: include is used at the top level. Use inside class or module.\ninclude RDF\n^^^^^^^^^^^\napp/lib/output.rb:8:3: C: Metrics/ClassLength: Class has too many lines. [140/100]\n  class Output ...\n  ^^^^^^^^^^^^\napp/lib/output.rb:8:3: C: Style/Documentation: Missing top-level documentation comment for class FAIRChampion::Output.\n  class Output\n  ^^^^^^^^^^^^\napp/lib/output.rb:14:19: C: Naming/MethodName: Use snake_case for method names.\n    attr_accessor :score, :testedGUID, :testid, :uniqueid, :name, :description, :license, :dt, :metric,  ...\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/output.rb:14:104: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n    attr_accessor :score, :testedGUID, :testid, :uniqueid, :name, :description, :license, :dt, :metric, \n                                                                                                       ^\napp/lib/output.rb:17:5: C: Style/ClassVars: Replace class var @@comments with a class instance var.\n    @@comments = []\n    ^^^^^^^^^^\napp/lib/output.rb:19:5: C: Metrics/MethodLength: Method has too many lines. [12/10]\n    def initialize(testedGUID:, meta:) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/output.rb:19:20: C: Naming/MethodParameterName: Only use lowercase characters for method parameter.\n    def initialize(testedGUID:, meta:)\n                   ^^^^^^^^^^\napp/lib/output.rb:19:20: C: Naming/VariableName: Use snake_case for variable names.\n    def initialize(testedGUID:, meta:)\n                   ^^^^^^^^^^\napp/lib/output.rb:21:7: C: Naming/VariableName: Use snake_case for variable names.\n      @testedGUID = testedGUID\n      ^^^^^^^^^^^\napp/lib/output.rb:21:21: C: Naming/VariableName: Use snake_case for variable names.\n      @testedGUID = testedGUID\n                    ^^^^^^^^^^\napp/lib/output.rb:22:19: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n      @uniqueid = 'urn:fairtestoutput:' + SecureRandom.uuid\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/output.rb:34:5: C: Metrics/AbcSize: Assignment Branch Condition size for createEvaluationResponse is too high. [<15, 116, 3> 117/17]\n    def createEvaluationResponse ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/output.rb:34:5: C: Metrics/MethodLength: Method has too many lines. [60/10]\n    def createEvaluationResponse ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/output.rb:34:9: C: Naming/MethodName: Use snake_case for method names.\n    def createEvaluationResponse\n        ^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/output.rb:38:27: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n      dct = RDF::Vocab::DC \n                          ^\napp/lib/output.rb:41:7: W: [Correctable] Lint/UselessAssignment: Useless assignment to variable - dqv.\n      dqv = RDF::Vocabulary.new('https://www.w3.org/TR/vocab-dqv/')\n      ^^^\napp/lib/output.rb:51:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/lib/output.rb:52:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/lib/output.rb:53:21: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n      executionid = 'urn:ostrails:testexecutionactivity:' + SecureRandom.uuid\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/output.rb:54:20: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n      softwareid = 'urn:ostrails:fairtestsoftware:' + SecureRandom.uuid\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/output.rb:55:13: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n      tid = 'urn:ostrails:fairtestentity:' + SecureRandom.uuid\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/output.rb:72:60: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n      triplify(uniqueid, ftr.outputFromTest, softwareid, g)      \n                                                           ^^^^^^\napp/lib/output.rb:78:39: C: [Correctable] Style/RedundantInterpolation: Prefer to_s over string interpolation.\n      triplify(softwareid, dct.title, \"#{name}\", g)\n                                      ^^^^^^^^^\napp/lib/output.rb:85:28: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      triplify(softwareid, \"http://www.w3.org/ns/dcat#version\", version, g)  # dcat namespace in library has no version - dcat 2 not 3\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/output.rb:85:76: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n      triplify(softwareid, \"http://www.w3.org/ns/dcat#version\", version, g)  # dcat namespace in library has no version - dcat 2 not 3\n                                                                           ^\napp/lib/output.rb:85:121: C: Layout/LineLength: Line is too long. [134/120]\n      triplify(softwareid, \"http://www.w3.org/ns/dcat#version\", version, g)  # dcat namespace in library has no version - dcat 2 not 3\n                                                                                                                        ^^^^^^^^^^^^^^\napp/lib/output.rb:87:32: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      triplify(softwareid, sio[\"SIO_000233\"], \"https://tests.ostrails.eu/tests/#{testid}/about\", g)\n                               ^^^^^^^^^^^^\napp/lib/output.rb:89:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/lib/output.rb:95:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\napp/lib/output.rb:96:1: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 0 instead of 6).\n#      g.dump(:jsonld)\n^^^^^^^^^^^^^^^^^^^^^^\napp/lib/output.rb:99:9: C: [Correctable] Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.\n        xsd: RDF::Vocab::XSD, \n        ^^^^^^^^^^^^^^^^^^^^\napp/lib/output.rb:99:30: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n        xsd: RDF::Vocab::XSD, \n                             ^\napp/lib/output.rb:106:7: C: [Correctable] Layout/FirstHashElementIndentation: Indent the right brace the same as the first position after the preceding left parenthesis.\n      })\n      ^\napp/lib/output.rb:119:7: C: Style/ClassVars: Replace class var @@comments with a class instance var.\n      @@comments = []\n      ^^^^^^^^^^\napp/lib/output.rb:128:7: C: Style/ClassVars: Replace class var @@comments with a class instance var.\n      @@comments = cleancomments\n      ^^^^^^^^^^\napp/lib/output.rb:131:5: C: Metrics/AbcSize: Assignment Branch Condition size for triplify is too high. [<7, 49, 18> 52.67/17]\n    def self.triplify(s, p, o, repo, datatype = nil) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/output.rb:131:5: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for triplify is too high. [16/7]\n    def self.triplify(s, p, o, repo, datatype = nil) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/output.rb:131:5: C: Metrics/MethodLength: Method has too many lines. [36/10]\n    def self.triplify(s, p, o, repo, datatype = nil) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/output.rb:131:5: C: Metrics/PerceivedComplexity: Perceived complexity for triplify is too high. [19/8]\n    def self.triplify(s, p, o, repo, datatype = nil) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/output.rb:131:23: C: Naming/MethodParameterName: Method parameter must be at least 3 characters long.\n    def self.triplify(s, p, o, repo, datatype = nil)\n                      ^\napp/lib/output.rb:131:26: C: Naming/MethodParameterName: Method parameter must be at least 3 characters long.\n    def self.triplify(s, p, o, repo, datatype = nil)\n                         ^\napp/lib/output.rb:131:29: C: Naming/MethodParameterName: Method parameter must be at least 3 characters long.\n    def self.triplify(s, p, o, repo, datatype = nil)\n                            ^\napp/lib/output.rb:156:11: C: [Correctable] Layout/IndentationWidth: Use 2 (not -2) spaces for indentation.\n          warn \"DATATYPE #{datatype}\"\n          ^^\napp/lib/output.rb:157:15: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.\n              RDF::Literal.new(o.to_s, datatype: datatype)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/output.rb:177:28: C: Naming/MethodParameterName: Method parameter must be at least 3 characters long.\n    def self.triplify_this(s, p, o, repo)\n                           ^\napp/lib/output.rb:177:31: C: Naming/MethodParameterName: Method parameter must be at least 3 characters long.\n    def self.triplify_this(s, p, o, repo)\n                              ^\napp/lib/output.rb:177:34: C: Naming/MethodParameterName: Method parameter must be at least 3 characters long.\n    def self.triplify_this(s, p, o, repo)\n                                 ^\napp/lib/tika.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nmodule FAIRChampion\n^\napp/lib/tika.rb:2:3: C: Style/Documentation: Missing top-level documentation comment for class FAIRChampion::Harvester.\n  class Harvester\n  ^^^^^^^^^^^^^^^\napp/lib/tika.rb:3:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.\napp/lib/tika.rb:11:121: C: Layout/LineLength: Line is too long. [126/120]\n      result = `curl --silent -T #{file.path} #{FAIRChampion::Utils::TikaCommand} --header \"Accept: application/rdf+xml\" 2>&1`\n                                                                                                                        ^^^^^^\napp/lib/tika.rb:19:5: C: Metrics/AbcSize: Assignment Branch Condition size for parse_tika_output is too high. [<5, 18, 2> 18.79/17]\n    def self.parse_tika_output(meta, output) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/tika.rb:19:5: C: Metrics/MethodLength: Method has too many lines. [12/10]\n    def self.parse_tika_output(meta, output) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/tika.rb:37:121: C: Layout/LineLength: Line is too long. [126/120]\n      meta.comments << \"INFO: Tika executed successfully (this doesn't necessarily mean that it discovered any metadata...)\\n\"\n                                                                                                                        ^^^^^^\napp/lib/uri.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nmodule FAIRChampion\n^\napp/lib/uri.rb:2:3: C: Style/Documentation: Missing top-level documentation comment for class FAIRChampion::Harvester.\n  class Harvester\n  ^^^^^^^^^^^^^^^\napp/lib/uri.rb:3:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.\napp/lib/uri.rb:4:5: C: Metrics/AbcSize: Assignment Branch Condition size for resolve_uri is too high. [<3, 26, 1> 26.19/17]\n    def self.resolve_uri(guid, meta) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/uri.rb:4:5: C: Metrics/MethodLength: Method has too many lines. [12/10]\n    def self.resolve_uri(guid, meta) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/uri.rb:11:121: C: Layout/LineLength: Line is too long. [135/120]\n      meta.comments << \"INFO:  Attempting to resolve #{url} using HTTP Headers #{FAIRChampion::Utils::XML_FORMATS['xml'].join(',')}.\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^\napp/lib/uri.rb:12:97: C: [Correctable] Style/RedundantInterpolation: Prefer to_s over string interpolation.\n      Harvester.resolve_url(guid: url, meta: meta, nolinkheaders: false, headers: { 'Accept' => \"#{FAIRChampion::Utils::XML_FORMATS['xml'].join(',')}\" })\n                                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/uri.rb:12:121: C: [Correctable] Layout/LineLength: Line is too long. [153/120]\n      Harvester.resolve_url(guid: url, meta: meta, nolinkheaders: false, headers: { 'Accept' => \"#{FAIRChampion::Utils::XML_FORMATS['xml'].join(',')}\" })\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/uri.rb:13:121: C: Layout/LineLength: Line is too long. [137/120]\n      meta.comments << \"INFO:  Attempting to resolve #{url} using HTTP Headers #{FAIRChampion::Utils::JSON_FORMATS['json'].join(',')}.\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^\napp/lib/uri.rb:14:97: C: [Correctable] Style/RedundantInterpolation: Prefer to_s over string interpolation.\n      Harvester.resolve_url(guid: url, meta: meta, nolinkheaders: false, headers: { 'Accept' => \"#{FAIRChampion::Utils::JSON_FORMATS['json'].join(',')}\" })\n                                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/uri.rb:14:121: C: [Correctable] Layout/LineLength: Line is too long. [155/120]\n      Harvester.resolve_url(guid: url, meta: meta, nolinkheaders: false, headers: { 'Accept' => \"#{FAIRChampion::Utils::JSON_FORMATS['json'].join(',')}\" })\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/url.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nmodule FAIRChampion\n^\napp/lib/url.rb:2:3: C: Style/Documentation: Missing top-level documentation comment for class FAIRChampion::Harvester.\n  class Harvester\n  ^^^^^^^^^^^^^^^\napp/lib/url.rb:3:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.\napp/lib/url.rb:4:5: C: Metrics/AbcSize: Assignment Branch Condition size for resolve_url is too high. [<11, 100, 18> 102.2/17]\n    def self.resolve_url(guid:, meta:, nolinkheaders: false, headers: FAIRChampion::Utils::AcceptHeader) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/url.rb:4:5: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for resolve_url is too high. [14/7]\n    def self.resolve_url(guid:, meta:, nolinkheaders: false, headers: FAIRChampion::Utils::AcceptHeader) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/url.rb:4:5: C: Metrics/MethodLength: Method has too many lines. [80/10]\n    def self.resolve_url(guid:, meta:, nolinkheaders: false, headers: FAIRChampion::Utils::AcceptHeader) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/url.rb:4:5: C: Metrics/PerceivedComplexity: Perceived complexity for resolve_url is too high. [18/8]\n    def self.resolve_url(guid:, meta:, nolinkheaders: false, headers: FAIRChampion::Utils::AcceptHeader) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/url.rb:7:20: C: [Correctable] Style/RedundantSelf: Redundant self detected.\n      head, body = self.fetch(guid: guid, headers: headers, meta: meta)\n                   ^^^^\napp/lib/url.rb:13:121: C: Layout/LineLength: Line is too long. [177/120]\n      meta.comments << \"INFO: following redirection using this header led to the following URL: #{meta.finalURI.last}.  Using the output from this URL for the next few tests...\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/url.rb:23:121: C: Layout/LineLength: Line is too long. [165/120]\n        meta.comments << \"INFO: a Link 'alternate' or 'meta' header was found: #{link}, and is now being followed as an independent URI that may contain metadata.\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/url.rb:24:121: C: Layout/LineLength: Line is too long. [133/120]\n        Harvester.resolve_url(guid: link, meta: meta, nolinkheaders: true) # the true is to prevent recursive pursuit of link headers\n                                                                                                                        ^^^^^^^^^^^^^\napp/lib/url.rb:26:11: C: [Correctable] Style/CommentedKeyword: Do not place comments on the same line as the end keyword.\n      end # this fills the metadata object with the content from Link headers, but not recursively\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/lib/url.rb:31:121: C: Layout/LineLength: Line is too long. [139/120]\n      meta.comments << \"INFO: Found #{parser} #{contenttype} type of content when resolving #{guid} using HTTP Accept header #{headers}.\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^\napp/lib/url.rb:51:9: W: [Correctable] Lint/UselessAssignment: Useless assignment to variable - url.\n        url = ''\n        ^^^\napp/lib/url.rb:60:201: C: Layout/LineLength: Line is too long. [204/120]\n        meta.comments << \"INFO: Note that, if the Distiller fails, you can view the output of its parse by visiting http://rdf.greggkellogg.net/distiller?command=serialize&url=#{CGI.escape(url.to_s)}. \\n\"\n                                                                                                                                                                                                        ^^^^\napp/lib/url.rb:73:9: W: [Correctable] Lint/UselessAssignment: Useless assignment to variable - url.\n        url = ''\n        ^^^\napp/models/models.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class ErrorModel.\nclass ErrorModel  # Notice, this is just a plain ruby object.\n^^^^^^^^^^^^^^^^\napp/models/models.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nclass ErrorModel  # Notice, this is just a plain ruby object.\n^\napp/models/models.rb:1:17: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\nclass ErrorModel  # Notice, this is just a plain ruby object.\n                ^\napp/models/models.rb:1:19: C: [Correctable] Style/CommentedKeyword: Do not place comments on the same line as the class keyword.\nclass ErrorModel  # Notice, this is just a plain ruby object.\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/models/models.rb:15:1: C: [Correctable] Layout/TrailingEmptyLines: 1 trailing blank lines detected.\napp/tests/fc_data_authorization.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nrequire_relative File.dirname(__FILE__) + '/../lib/harvester.rb'\n^\napp/tests/fc_data_authorization.rb:1:18: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nrequire_relative File.dirname(__FILE__) + '/../lib/harvester.rb'\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_authorization.rb:3:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_data_authorization.rb:4:1: C: Style/Documentation: Missing top-level documentation comment for class FAIRTest.\nclass FAIRTest\n^^^^^^^^^^^^^^\napp/tests/fc_data_authorization.rb:5:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.\napp/tests/fc_data_authorization.rb:6:3: C: Metrics/MethodLength: Method has too many lines. [24/10]\n  def self.fc_data_authorization_meta ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_authorization.rb:8:5: C: [Correctable] Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n    testversion: HARVESTER_VERSION + ':' + 'Tst-2.0.0',\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_authorization.rb:8:18: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n    testversion: HARVESTER_VERSION + ':' + 'Tst-2.0.0',\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_authorization.rb:9:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    testname: \"FAIR Champion: Data Authorization\",\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_authorization.rb:10:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    testid: \"fc_data_authorization\",\n            ^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_authorization.rb:11:121: C: Layout/LineLength: Line is too long. [412/120]\n    description: \"Test a discovered data GUID for the ability to implement authentication and authorization in its resolution protocol.  Currently passes InChI Keys, DOIs, Handles, and URLs.  It also searches the metadata for the Dublin Core 'accessRights' property, which may point to a document describing the data access process. Recognition of other identifiers will be added upon request by the community.\",\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_authorization.rb:12:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\napp/tests/fc_data_authorization.rb:13:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n      metric: 'https://doi.org/10.25504/FAIRsharing.EwnE1n',\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_authorization.rb:14:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n      indicators: 'https://w3id.org/fair/principles/latest/A1.2',\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_authorization.rb:15:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n      type: 'http://edamontology.org/operation_2428',\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_authorization.rb:16:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n      license: 'https://creativecommons.org/publicdomain/zero/1.0/',\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_authorization.rb:17:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n      keywords: ['FAIR Assessment', 'FAIR Principles'],\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_authorization.rb:18:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n      themes: ['http://edamontology.org/topic_4012'],\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_authorization.rb:19:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n      organization: 'OSTrails Project',\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_authorization.rb:20:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n      org_url: 'https://ostrails.eu/',\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_authorization.rb:21:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n      responsible_developer: 'Mark D Wilkinson',\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_authorization.rb:22:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n      email: 'mark.wilkinson@upm.es',\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_authorization.rb:23:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n      response_description: 'The response is \"pass\", \"fail\" or \"indeterminate\"',\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_authorization.rb:24:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n      schemas: { 'subject' => ['string', 'the GUID being tested'] },\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_authorization.rb:25:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n      organizations: [{ 'name' => 'OSTrails Project', 'url' => 'https://ostrails.eu/' }],\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_authorization.rb:26:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n      individuals: [{ 'name' => 'Mark D Wilkinson', 'email' => 'mark.wilkinson@upm.es' }],\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_authorization.rb:27:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n      creator: 'https://orcid.org/0000-0001-6960-357X',\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_authorization.rb:28:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n      protocol: ENV.fetch('TEST_PROTOCOL', 'https'),\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_authorization.rb:29:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n      host: ENV.fetch('TEST_HOST', 'localhost'),\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_authorization.rb:30:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n      basePath: ENV.fetch('TEST_PATH', '/tests')\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_authorization.rb:34:3: C: Metrics/AbcSize: Assignment Branch Condition size for fc_data_authorization is too high. [<23, 57, 15> 63.27/17]\n  def self.fc_data_authorization(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_authorization.rb:34:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for fc_data_authorization is too high. [11/7]\n  def self.fc_data_authorization(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_authorization.rb:34:3: C: Metrics/MethodLength: Method has too many lines. [59/10]\n  def self.fc_data_authorization(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_authorization.rb:34:3: C: Metrics/PerceivedComplexity: Perceived complexity for fc_data_authorization is too high. [13/8]\n  def self.fc_data_authorization(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_authorization.rb:38:24: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n      testedGUID: guid, \n                       ^\napp/tests/fc_data_authorization.rb:40:7: C: [Correctable] Layout/ClosingParenthesisIndentation: Indent ) to column 4 (not 6)\n      )\n      ^\napp/tests/fc_data_authorization.rb:42:47: C: [Correctable] Style/RedundantSelf: Redundant self detected.\n    output.comments << \"INFO: TEST VERSION '#{self.fc_data_authorization_meta[:testversion]}'\\n\"\n                                              ^^^^\napp/tests/fc_data_authorization.rb:51:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      output.score = \"indeterminate\"\n                     ^^^^^^^^^^^^^^^\napp/tests/fc_data_authorization.rb:61:29: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n    id_hash = id_graph = nil  # set to nil for now\n                            ^\napp/tests/fc_data_authorization.rb:82:8: C: [Correctable] Style/NumericPredicate: Use metadata.graph.size.positive? instead of metadata.graph.size > 0.\n    if metadata.graph.size > 0 # have we found anything yet?\n       ^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_authorization.rb:82:8: C: [Correctable] Style/ZeroLengthPredicate: Use !empty? instead of size > 0.\n    if metadata.graph.size > 0 # have we found anything yet?\n       ^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_authorization.rb:88:21: C: [Correctable] Style/AndOr: Use && instead of and.\n    if id_hash.nil? and id_graph.nil?\n                    ^^^\napp/tests/fc_data_authorization.rb:94:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_data_authorization.rb:95:5: C: [Correctable] Style/ConditionalAssignment: Use the return of the conditional for variable assignment and comparison.\n    if id_hash ...\n    ^^^^^^^^^^\napp/tests/fc_data_authorization.rb:97:9: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n    else \n        ^\napp/tests/fc_data_authorization.rb:102:121: C: Layout/LineLength: Line is too long. [177/120]\n      output.comments << \"SUCCESS: The identifier #{@identifier} is recognized as a #{metadata2}, which is resolvable by an protocol that allows authorization/authentication.\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_authorization.rb:104:7: C: [Correctable] Style/IdenticalConditionalBranches: Move output.createEvaluationResponse out of the conditional.\n      output.createEvaluationResponse\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_authorization.rb:108:7: C: [Correctable] Style/IdenticalConditionalBranches: Move output.createEvaluationResponse out of the conditional.\n      output.createEvaluationResponse\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_authorization.rb:122:1: C: [Correctable] Layout/TrailingEmptyLines: 1 trailing blank lines detected.\napp/tests/fc_data_identifier_in_metadata.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nrequire_relative File.dirname(__FILE__) + '/../lib/harvester.rb'\n^\napp/tests/fc_data_identifier_in_metadata.rb:1:18: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nrequire_relative File.dirname(__FILE__) + '/../lib/harvester.rb'\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:3:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_data_identifier_in_metadata.rb:4:1: C: Metrics/ClassLength: Class has too many lines. [105/100]\nclass FAIRTest ...\n^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:4:1: C: Style/Documentation: Missing top-level documentation comment for class FAIRTest.\nclass FAIRTest\n^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:5:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.\napp/tests/fc_data_identifier_in_metadata.rb:6:3: C: Metrics/MethodLength: Method has too many lines. [24/10]\n  def self.fc_data_identifier_in_metadata_meta ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:7:5: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n    return {\n    ^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:8:5: C: [Correctable] Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n    testversion: HARVESTER_VERSION + ':' + 'Tst-2.0.0',\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:8:18: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n    testversion: HARVESTER_VERSION + ':' + 'Tst-2.0.0',\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:9:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    testname: \"FAIR Champion: Data Identifier in Metadata\",\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:10:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    testid: \"fc_data_identifier_in_metadata\",\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:11:121: C: Layout/LineLength: Line is too long. [412/120]\n    description: \"Test a discovered data GUID for the ability to implement authentication and authorization in its resolution protocol.  Currently passes InChI Keys, DOIs, Handles, and URLs.  It also searches the metadata for the Dublin Core 'accessRights' property, which may point to a document describing the data access process. Recognition of other identifiers will be added upon request by the community.\",\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:12:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n      metric: 'https://doi.org/10.25504/FAIRsharing.o8TYnW',\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:13:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n      indicators: 'https://w3id.org/fair/principles/latest/F3',\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:14:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n      type: 'http://edamontology.org/operation_2428',\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:15:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n      license: 'https://creativecommons.org/publicdomain/zero/1.0/',\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:16:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n      keywords: ['FAIR Assessment', 'FAIR Principles'],\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:17:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n      themes: ['http://edamontology.org/topic_4012'],\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:18:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n      organization: 'OSTrails Project',\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:19:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n      org_url: 'https://ostrails.eu/',\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:20:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n      responsible_developer: 'Mark D Wilkinson',\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:21:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n      email: 'mark.wilkinson@upm.es',\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:22:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n      response_description: 'The response is \"pass\", \"fail\" or \"indeterminate\"',\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:23:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n      schemas: { 'subject' => ['string', 'the GUID being tested'] },\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:24:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n      organizations: [{ 'name' => 'OSTrails Project', 'url' => 'https://ostrails.eu/' }],\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:25:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n      individuals: [{ 'name' => 'Mark D Wilkinson', 'email' => 'mark.wilkinson@upm.es' }],\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:26:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n      creator: 'https://orcid.org/0000-0001-6960-357X',\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:27:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n      protocol: ENV.fetch('TEST_PROTOCOL', 'https'),\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:28:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n      host: ENV.fetch('TEST_HOST', 'localhost'),\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:29:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n      basePath: ENV.fetch('TEST_PATH', '/tests')\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:33:3: C: Metrics/AbcSize: Assignment Branch Condition size for fc_data_identifier_in_metadata is too high. [<19, 47, 11> 51.87/17]\n  def self.fc_data_identifier_in_metadata(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:33:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for fc_data_identifier_in_metadata is too high. [8/7]\n  def self.fc_data_identifier_in_metadata(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:33:3: C: Metrics/MethodLength: Method has too many lines. [48/10]\n  def self.fc_data_identifier_in_metadata(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:33:3: C: Metrics/PerceivedComplexity: Perceived complexity for fc_data_identifier_in_metadata is too high. [9/8]\n  def self.fc_data_identifier_in_metadata(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:40:47: C: [Correctable] Style/RedundantSelf: Redundant self detected.\n    output.comments << \"INFO: TEST VERSION '#{self.fc_data_identifier_in_metadata_meta[:testversion]}'\\n\"\n                                              ^^^^\napp/tests/fc_data_identifier_in_metadata.rb:49:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      output.score = \"indeterminate\"\n                     ^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:60:1: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 0 instead of 4).\n#############################################################################################################\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:62:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_data_identifier_in_metadata.rb:67:7: C: [Correctable] Style/ParallelAssignment: Do not use parallel assignment.\n      key, value = nil, nil\n      ^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:68:28: C: [Correctable] Style/Semicolon: Do not use semicolons to terminate expressions.\n      (key, value) = keyval;\n                           ^\napp/tests/fc_data_identifier_in_metadata.rb:70:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\napp/tests/fc_data_identifier_in_metadata.rb:73:17: C: [Correctable] Style/RegexpLiteral: Use %r around regular expression.\n        prop =~ /.*[#\\/]([^#\\/]+)$/\n                ^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:74:16: C: [Correctable] Style/PerlBackrefs: Prefer ::Regexp.last_match(1) over $1.\n        prop = $1\n               ^^\napp/tests/fc_data_identifier_in_metadata.rb:78:21: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.\n          identifier=value.to_s\n                    ^\napp/tests/fc_data_identifier_in_metadata.rb:83:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_data_identifier_in_metadata.rb:84:8: C: [Correctable] Style/NumericPredicate: Use graph.size.positive? instead of graph.size > 0.\n    if graph.size > 0  # have we found anything yet?\n       ^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:84:8: C: [Correctable] Style/ZeroLengthPredicate: Use !empty? instead of size > 0.\n    if graph.size > 0  # have we found anything yet?\n       ^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:84:22: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n    if graph.size > 0  # have we found anything yet?\n                     ^\napp/tests/fc_data_identifier_in_metadata.rb:86:80: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n      identifier = FAIRChampion::CommonQueries::GetDataIdentifier(graph: graph)\t\t\n                                                                               ^^\napp/tests/fc_data_identifier_in_metadata.rb:89:5: C: [Correctable] Style/UnlessElse: Do not use unless with else. Rewrite these with the positive case first.\n    unless identifier =~ /\\w+/ ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:90:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.\n        output.score = \"fail\"\n    ^^^^\napp/tests/fc_data_identifier_in_metadata.rb:90:24: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n        output.score = \"fail\"\n                       ^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:91:121: C: Layout/LineLength: Line is too long. [140/120]\n        output.comments <<  \"INFO: Tested the following #{FAIRChampion::Utils::DATA_PREDICATES}(or their plain JSON hash-key equivalents)\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:92:29: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n        output.comments <<  \"FAILURE: Was unable to locate the data identifier in the metadata using any (common) property/predicate reserved for this purpose.\"\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:92:121: C: Layout/LineLength: Line is too long. [160/120]\n        output.comments <<  \"FAILURE: Was unable to locate the data identifier in the metadata using any (common) property/predicate reserved for this purpose.\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:94:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.\n        output.comments <<  \"INFO: Now resolving #{identifier} to test its properties.\\n\"\n    ^^^^\napp/tests/fc_data_identifier_in_metadata.rb:95:9: C: [Correctable] Style/RedundantSelf: Redundant self detected.\n        self.testIdentifier(guid: identifier, output: output) # this will add more comments and a score to @swagger\n        ^^^^\napp/tests/fc_data_identifier_in_metadata.rb:97:5: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n    return output.createEvaluationResponse\n    ^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:100:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_data_identifier_in_metadata.rb:101:3: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 2.\n  def self.testIdentifier(guid:, output:)\n  ^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:101:3: C: Metrics/AbcSize: Assignment Branch Condition size for testIdentifier is too high. [<5, 25, 12> 28.18/17]\n  def self.testIdentifier(guid:, output:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:101:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for testIdentifier is too high. [10/7]\n  def self.testIdentifier(guid:, output:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:101:3: C: Metrics/MethodLength: Method has too many lines. [18/10]\n  def self.testIdentifier(guid:, output:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:101:3: C: Metrics/PerceivedComplexity: Perceived complexity for testIdentifier is too high. [12/8]\n  def self.testIdentifier(guid:, output:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:101:12: C: Naming/MethodName: Use snake_case for method names.\n  def self.testIdentifier(guid:, output:)\n           ^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:102:1: C: [Correctable] Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body beginning.\napp/tests/fc_data_identifier_in_metadata.rb:104:35: C: [Correctable] Style/ColonMethodCall: Do not use :: for method calls.\n    type = FAIRChampion::Harvester::typeit(guid)  # this is where the magic happens!\n                                  ^^\napp/tests/fc_data_identifier_in_metadata.rb:104:49: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n    type = FAIRChampion::Harvester::typeit(guid)  # this is where the magic happens!\n                                                ^\napp/tests/fc_data_identifier_in_metadata.rb:109:121: C: Layout/LineLength: Line is too long. [124/120]\n      output.comments << \"FAILURE: The GUID identifier of the data #{guid} did not match any known identification system.\\n\"\n                                                                                                                        ^^^^\napp/tests/fc_data_identifier_in_metadata.rb:110:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      output.score = \"fail\"\n                     ^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:111:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    elsif type == \"uri\"\n                  ^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:112:121: C: Layout/LineLength: Line is too long. [159/120]\n      output.comments << \"INFO: The data GUID appears to be a URL.  Testing known URL persistence schemas (purl, oclc, fdlp, purlz, w3id, ark, doi(as URL)).\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:113:31: C: [Correctable] Style/AndOr: Use || instead of or.\n      if (guid =~ /(purl)\\./) or (guid =~ /(oclc)\\./) or(guid =~ /(fdlp)\\./) or (guid =~ /(purlz)\\./) or (guid =~ /(w3id)\\./) or (guid =~ /(ark)\\:/) or (guid =~ /(doi.org)/)\n                              ^^\napp/tests/fc_data_identifier_in_metadata.rb:113:55: C: [Correctable] Layout/SpaceAroundKeyword: Space after keyword or is missing.\n      if (guid =~ /(purl)\\./) or (guid =~ /(oclc)\\./) or(guid =~ /(fdlp)\\./) or (guid =~ /(purlz)\\./) or (guid =~ /(w3id)\\./) or (guid =~ /(ark)\\:/) or (guid =~ /(doi.org)/)\n                                                      ^^\napp/tests/fc_data_identifier_in_metadata.rb:113:55: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator or.\n      if (guid =~ /(purl)\\./) or (guid =~ /(oclc)\\./) or(guid =~ /(fdlp)\\./) or (guid =~ /(purlz)\\./) or (guid =~ /(w3id)\\./) or (guid =~ /(ark)\\:/) or (guid =~ /(doi.org)/)\n                                                      ^^\napp/tests/fc_data_identifier_in_metadata.rb:113:55: C: [Correctable] Style/AndOr: Use || instead of or.\n      if (guid =~ /(purl)\\./) or (guid =~ /(oclc)\\./) or(guid =~ /(fdlp)\\./) or (guid =~ /(purlz)\\./) or (guid =~ /(w3id)\\./) or (guid =~ /(ark)\\:/) or (guid =~ /(doi.org)/)\n                                                      ^^\napp/tests/fc_data_identifier_in_metadata.rb:113:78: C: [Correctable] Style/AndOr: Use || instead of or.\n      if (guid =~ /(purl)\\./) or (guid =~ /(oclc)\\./) or(guid =~ /(fdlp)\\./) or (guid =~ /(purlz)\\./) or (guid =~ /(w3id)\\./) or (guid =~ /(ark)\\:/) or (guid =~ /(doi.org)/)\n                                                                             ^^\napp/tests/fc_data_identifier_in_metadata.rb:113:103: C: [Correctable] Style/AndOr: Use || instead of or.\n      if (guid =~ /(purl)\\./) or (guid =~ /(oclc)\\./) or(guid =~ /(fdlp)\\./) or (guid =~ /(purlz)\\./) or (guid =~ /(w3id)\\./) or (guid =~ /(ark)\\:/) or (guid =~ /(doi.org)/)\n                                                                                                      ^^\napp/tests/fc_data_identifier_in_metadata.rb:113:121: C: Layout/LineLength: Line is too long. [173/120]\n      if (guid =~ /(purl)\\./) or (guid =~ /(oclc)\\./) or(guid =~ /(fdlp)\\./) or (guid =~ /(purlz)\\./) or (guid =~ /(w3id)\\./) or (guid =~ /(ark)\\:/) or (guid =~ /(doi.org)/)\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:113:127: C: [Correctable] Style/AndOr: Use || instead of or.\n      if (guid =~ /(purl)\\./) or (guid =~ /(oclc)\\./) or(guid =~ /(fdlp)\\./) or (guid =~ /(purlz)\\./) or (guid =~ /(w3id)\\./) or (guid =~ /(ark)\\:/) or (guid =~ /(doi.org)/)\n                                                                                                                              ^^\napp/tests/fc_data_identifier_in_metadata.rb:113:145: C: [Correctable] Style/RedundantRegexpEscape: Redundant escape inside regexp literal\n      if (guid =~ /(purl)\\./) or (guid =~ /(oclc)\\./) or(guid =~ /(fdlp)\\./) or (guid =~ /(purlz)\\./) or (guid =~ /(w3id)\\./) or (guid =~ /(ark)\\:/) or (guid =~ /(doi.org)/)\n                                                                                                                                                ^^\napp/tests/fc_data_identifier_in_metadata.rb:113:150: C: [Correctable] Style/AndOr: Use || instead of or.\n      if (guid =~ /(purl)\\./) or (guid =~ /(oclc)\\./) or(guid =~ /(fdlp)\\./) or (guid =~ /(purlz)\\./) or (guid =~ /(w3id)\\./) or (guid =~ /(ark)\\:/) or (guid =~ /(doi.org)/)\n                                                                                                                                                     ^^\napp/tests/fc_data_identifier_in_metadata.rb:114:63: C: [Correctable] Style/PerlBackrefs: Prefer ::Regexp.last_match(1) over $1.\n        output.comments << \"SUCCESS: The GUID conforms with #{$1}, which is known to be persistent.\\n\"\n                                                              ^^\napp/tests/fc_data_identifier_in_metadata.rb:115:24: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n        output.score = \"pass\"\n                       ^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:118:24: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n        output.score = \"fail\"\n                       ^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:120:9: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n    else \n        ^\napp/tests/fc_data_identifier_in_metadata.rb:122:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      output.score = \"pass\"\n                     ^^^^^^\napp/tests/fc_data_identifier_in_metadata.rb:125:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_data_identifier_in_metadata.rb:125:1: C: [Correctable] Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body end.\napp/tests/fc_data_kr_language_strong.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nrequire_relative File.dirname(__FILE__) + '/../lib/harvester.rb'\n^\napp/tests/fc_data_kr_language_strong.rb:1:18: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nrequire_relative File.dirname(__FILE__) + '/../lib/harvester.rb'\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:3:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_data_kr_language_strong.rb:4:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_data_kr_language_strong.rb:5:1: C: Metrics/ClassLength: Class has too many lines. [130/100]\nclass FAIRTest ...\n^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:5:1: C: Style/Documentation: Missing top-level documentation comment for class FAIRTest.\nclass FAIRTest\n^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:6:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.\napp/tests/fc_data_kr_language_strong.rb:7:3: C: Metrics/MethodLength: Method has too many lines. [24/10]\n  def self.fc_data_kr_language_strong_meta ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:8:5: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n    return {\n    ^^^^^^\napp/tests/fc_data_kr_language_strong.rb:9:5: C: [Correctable] Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n    testversion: HARVESTER_VERSION + ':' + 'Tst-2.0.0',\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:9:18: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n    testversion: HARVESTER_VERSION + ':' + 'Tst-2.0.0',\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:10:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    testname: \"FAIR Champion: Data Knowlege Representation Language (Strict Test)\",\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:11:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    testid: \"fc_data_kr_language_strong\",\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:12:121: C: Layout/LineLength: Line is too long. [408/120]\n    description: \"Test if the data uses a formal language broadly applicable for knowledge representation.  This particular test takes a broad view of what defines a 'knowledge representation language'; in this evaluation, a knowledge representation language is interpreted as one in which terms are semantically-grounded in ontologies.  Any form of ontologically-grounded linked data will pass this test. \",\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:31:3: C: [Correctable] Layout/FirstHashElementIndentation: Indent the right brace the same as the start of the line where the left brace is.\n  }\n  ^\napp/tests/fc_data_kr_language_strong.rb:34:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_data_kr_language_strong.rb:35:3: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 2.\n  def self.fc_data_kr_language_strong(guid:)\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:35:3: C: Metrics/AbcSize: Assignment Branch Condition size for fc_data_kr_language_strong is too high. [<19, 47, 11> 51.87/17]\n  def self.fc_data_kr_language_strong(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:35:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for fc_data_kr_language_strong is too high. [8/7]\n  def self.fc_data_kr_language_strong(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:35:3: C: Metrics/MethodLength: Method has too many lines. [48/10]\n  def self.fc_data_kr_language_strong(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:35:3: C: Metrics/PerceivedComplexity: Perceived complexity for fc_data_kr_language_strong is too high. [9/8]\n  def self.fc_data_kr_language_strong(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:42:47: C: [Correctable] Style/RedundantSelf: Redundant self detected.\n    output.comments << \"INFO: TEST VERSION '#{self.fc_data_kr_language_strong_meta[:testversion]}'\\n\"\n                                              ^^^^\napp/tests/fc_data_kr_language_strong.rb:51:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      output.score = \"indeterminate\"\n                     ^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:62:1: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 0 instead of 4).\n#############################################################################################################\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:64:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_data_kr_language_strong.rb:69:7: C: [Correctable] Style/ParallelAssignment: Do not use parallel assignment.\n      key, value = nil, nil\n      ^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:70:28: C: [Correctable] Style/Semicolon: Do not use semicolons to terminate expressions.\n      (key, value) = keyval;\n                           ^\napp/tests/fc_data_kr_language_strong.rb:72:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\napp/tests/fc_data_kr_language_strong.rb:75:17: C: [Correctable] Style/RegexpLiteral: Use %r around regular expression.\n        prop =~ /.*[#\\/]([^#\\/]+)$/\n                ^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:76:16: C: [Correctable] Style/PerlBackrefs: Prefer ::Regexp.last_match(1) over $1.\n        prop = $1\n               ^^\napp/tests/fc_data_kr_language_strong.rb:80:21: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.\n          identifier=value.to_s\n                    ^\napp/tests/fc_data_kr_language_strong.rb:85:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_data_kr_language_strong.rb:86:8: C: [Correctable] Style/NumericPredicate: Use graph.size.positive? instead of graph.size > 0.\n    if graph.size > 0  # have we found anything yet?\n       ^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:86:8: C: [Correctable] Style/ZeroLengthPredicate: Use !empty? instead of size > 0.\n    if graph.size > 0  # have we found anything yet?\n       ^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:86:22: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n    if graph.size > 0  # have we found anything yet?\n                     ^\napp/tests/fc_data_kr_language_strong.rb:88:80: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n      identifier = FAIRChampion::CommonQueries::GetDataIdentifier(graph: graph)\t\t\n                                                                               ^^\napp/tests/fc_data_kr_language_strong.rb:91:5: C: [Correctable] Style/UnlessElse: Do not use unless with else. Rewrite these with the positive case first.\n    unless identifier =~ /\\w+/ ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:92:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.\n        output.score = \"indeterminate\"\n    ^^^^\napp/tests/fc_data_kr_language_strong.rb:92:24: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n        output.score = \"indeterminate\"\n                       ^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:93:121: C: Layout/LineLength: Line is too long. [140/120]\n        output.comments <<  \"INFO: Tested the following #{FAIRChampion::Utils::DATA_PREDICATES}(or their plain JSON hash-key equivalents)\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:94:29: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n        output.comments <<  \"INDETERMINATE: Was unable to locate the data identifier in the metadata using any (common) property/predicate reserved for this purpose.\"\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:94:121: C: Layout/LineLength: Line is too long. [166/120]\n        output.comments <<  \"INDETERMINATE: Was unable to locate the data identifier in the metadata using any (common) property/predicate reserved for this purpose.\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:96:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.\n        output.comments <<  \"INFO: Now resolving #{identifier} to test its properties.\\n\"\n    ^^^^\napp/tests/fc_data_kr_language_strong.rb:97:9: C: [Correctable] Style/RedundantSelf: Redundant self detected.\n        self.testIdentifier(guid: identifier, output: output) # this will add more comments and a score to output\n        ^^^^\napp/tests/fc_data_kr_language_strong.rb:99:5: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n    return output.createEvaluationResponse\n    ^^^^^^\napp/tests/fc_data_kr_language_strong.rb:102:3: C: Metrics/AbcSize: Assignment Branch Condition size for testIdentifier is too high. [<11, 35, 16> 40.02/17]\n  def self.testIdentifier(guid:, output: ) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:102:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for testIdentifier is too high. [9/7]\n  def self.testIdentifier(guid:, output: ) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:102:3: C: Metrics/MethodLength: Method has too many lines. [43/10]\n  def self.testIdentifier(guid:, output: ) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:102:3: C: Metrics/PerceivedComplexity: Perceived complexity for testIdentifier is too high. [13/8]\n  def self.testIdentifier(guid:, output: ) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:102:12: C: Naming/MethodName: Use snake_case for method names.\n  def self.testIdentifier(guid:, output: )\n           ^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:102:41: C: [Correctable] Layout/SpaceInsideParens: Space inside parentheses detected.\n  def self.testIdentifier(guid:, output: )\n                                        ^\napp/tests/fc_data_kr_language_strong.rb:103:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.\napp/tests/fc_data_kr_language_strong.rb:103:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\napp/tests/fc_data_kr_language_strong.rb:104:40: C: [Correctable] Style/ColonMethodCall: Do not use :: for method calls.\n    type, url = FAIRChampion::Harvester::convertToURL(guid)\n                                       ^^\napp/tests/fc_data_kr_language_strong.rb:106:121: C: Layout/LineLength: Line is too long. [296/120]\n      output.comments << \"INDETERMINATE: The GUID identifier of the data #{guid} did not match any known identification system (tested inchi, doi, handle, uri) and therefore did not pass this metric.  If you think this is an error, please contact the FAIR Metrics group (http://fairmetrics.org).\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:107:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      output.score = \"indeterminate\"\n                     ^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:110:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\napp/tests/fc_data_kr_language_strong.rb:111:5: C: [Correctable] Style/CaseLikeIf: Convert if-elsif to case-when.\n    if type == \"handle\" ...\n    ^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:111:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    if type == \"handle\"\n               ^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:113:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    elsif type == \"doi\"\n                  ^^^^^\napp/tests/fc_data_kr_language_strong.rb:115:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    elsif type == \"inchi\"\n                  ^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:117:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    elsif type == \"uri\"\n                  ^^^^^\napp/tests/fc_data_kr_language_strong.rb:121:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      output.score = \"indeterminate\"\n                     ^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:124:38: C: [Correctable] Style/ColonMethodCall: Do not use :: for method calls.\n    headers = FAIRChampion::Harvester::head(url, FAIRChampion::Utils::AcceptHeader) # returns headers or false\n                                     ^^\napp/tests/fc_data_kr_language_strong.rb:130:121: C: Layout/LineLength: Line is too long. [128/120]\n          output.comments << \"SUCCESS: The reported content-type of the data is [#{type}] which is a known Linked Data format\\n\"\n                                                                                                                        ^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:131:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n          output.score = \"pass\"\n                         ^^^^^^\napp/tests/fc_data_kr_language_strong.rb:132:11: C: [Correctable] Style/IdenticalConditionalBranches: Move return out of the conditional.\n          return\n          ^^^^^^\napp/tests/fc_data_kr_language_strong.rb:132:11: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n          return\n          ^^^^^^\napp/tests/fc_data_kr_language_strong.rb:133:13: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n        else \n            ^\napp/tests/fc_data_kr_language_strong.rb:134:121: C: Layout/LineLength: Line is too long. [132/120]\n          output.comments << \"FAILURE: The reported content-type of the data is [#{type}] which is not a known Linked Data format\\n\"\n                                                                                                                        ^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:135:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n          output.score = \"fail\"\n                         ^^^^^^\napp/tests/fc_data_kr_language_strong.rb:136:11: C: [Correctable] Style/IdenticalConditionalBranches: Move return out of the conditional.\n          return\n          ^^^^^^\napp/tests/fc_data_kr_language_strong.rb:136:11: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n          return\n          ^^^^^^\napp/tests/fc_data_kr_language_strong.rb:139:121: C: Layout/LineLength: Line is too long. [139/120]\n        output.comments << \"INDETERMINATE: The URL to the data is not reporting a Content-Type in its headers.  This test will now halt.\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:140:24: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n        output.score = \"indeterminate\"\n                       ^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:141:9: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n        return\n        ^^^^^^\napp/tests/fc_data_kr_language_strong.rb:144:121: C: Layout/LineLength: Line is too long. [172/120]\n      output.comments << \"INDETERMINATE: The url #{url} failed to resolve via a HEAD call with headers #{FAIRChampion::Utils::AcceptHeader}, therefore we cannot continue\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:145:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      output.score = \"indeterminate\"\n                     ^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_strong.rb:146:7: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n      return\n      ^^^^^^\napp/tests/fc_data_kr_language_strong.rb:160:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\napp/tests/fc_data_kr_language_weak.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nrequire_relative File.dirname(__FILE__) + '/../lib/harvester.rb'\n^\napp/tests/fc_data_kr_language_weak.rb:1:18: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nrequire_relative File.dirname(__FILE__) + '/../lib/harvester.rb'\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:3:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_data_kr_language_weak.rb:4:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_data_kr_language_weak.rb:5:1: C: Metrics/ClassLength: Class has too many lines. [141/100]\nclass FAIRTest ...\n^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:5:1: C: Style/Documentation: Missing top-level documentation comment for class FAIRTest.\nclass FAIRTest\n^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:6:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.\napp/tests/fc_data_kr_language_weak.rb:7:3: C: Metrics/MethodLength: Method has too many lines. [24/10]\n  def self.fc_data_kr_language_weak_meta ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:8:5: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n    return {\n    ^^^^^^\napp/tests/fc_data_kr_language_weak.rb:9:5: C: [Correctable] Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n    testversion: HARVESTER_VERSION + ':' + 'Tst-2.0.0',\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:9:18: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n    testversion: HARVESTER_VERSION + ':' + 'Tst-2.0.0',\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:10:5: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n    testname:  \"FAIR Champion: Data Knowlege Representation Language (Weak Test)\",\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:10:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    testname:  \"FAIR Champion: Data Knowlege Representation Language (Weak Test)\",\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:11:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    testid: \"fc_data_kr_language_weak\",\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:12:121: C: Layout/LineLength: Line is too long. [387/120]\n    description: \"Test if the data uses a formal language broadly applicable for knowledge representation.  This particular test takes a broad view of what defines a 'knowledge representation language'; in this evaluation, a knowledge representation language is interpreted as one in which terms are semantically-grounded in ontologies.  Any form of structured data will pass this test\",\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:31:3: C: [Correctable] Layout/FirstHashElementIndentation: Indent the right brace the same as the start of the line where the left brace is.\n  }\n  ^\napp/tests/fc_data_kr_language_weak.rb:34:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_data_kr_language_weak.rb:35:3: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 2.\n  def self.fc_data_kr_language_weak(guid:)\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:35:3: C: Metrics/AbcSize: Assignment Branch Condition size for fc_data_kr_language_weak is too high. [<19, 47, 11> 51.87/17]\n  def self.fc_data_kr_language_weak(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:35:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for fc_data_kr_language_weak is too high. [8/7]\n  def self.fc_data_kr_language_weak(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:35:3: C: Metrics/MethodLength: Method has too many lines. [48/10]\n  def self.fc_data_kr_language_weak(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:35:3: C: Metrics/PerceivedComplexity: Perceived complexity for fc_data_kr_language_weak is too high. [9/8]\n  def self.fc_data_kr_language_weak(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:42:47: C: [Correctable] Layout/SpaceInsideStringInterpolation: Space inside string interpolation detected.\n    output.comments << \"INFO: TEST VERSION '#{ self.fc_data_kr_language_weak_meta[:testversion]}'\\n\"\n                                              ^\napp/tests/fc_data_kr_language_weak.rb:42:48: C: [Correctable] Style/RedundantSelf: Redundant self detected.\n    output.comments << \"INFO: TEST VERSION '#{ self.fc_data_kr_language_weak_meta[:testversion]}'\\n\"\n                                               ^^^^\napp/tests/fc_data_kr_language_weak.rb:51:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      output.score = \"indeterminate\"\n                     ^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:62:1: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 0 instead of 4).\n#############################################################################################################\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:64:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_data_kr_language_weak.rb:69:7: C: [Correctable] Style/ParallelAssignment: Do not use parallel assignment.\n      key, value = nil, nil\n      ^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:70:28: C: [Correctable] Style/Semicolon: Do not use semicolons to terminate expressions.\n      (key, value) = keyval;\n                           ^\napp/tests/fc_data_kr_language_weak.rb:72:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\napp/tests/fc_data_kr_language_weak.rb:75:17: C: [Correctable] Style/RegexpLiteral: Use %r around regular expression.\n        prop =~ /.*[#\\/]([^#\\/]+)$/\n                ^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:76:16: C: [Correctable] Style/PerlBackrefs: Prefer ::Regexp.last_match(1) over $1.\n        prop = $1\n               ^^\napp/tests/fc_data_kr_language_weak.rb:80:21: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.\n          identifier=value.to_s\n                    ^\napp/tests/fc_data_kr_language_weak.rb:85:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_data_kr_language_weak.rb:86:8: C: [Correctable] Style/NumericPredicate: Use graph.size.positive? instead of graph.size > 0.\n    if graph.size > 0  # have we found anything yet?\n       ^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:86:8: C: [Correctable] Style/ZeroLengthPredicate: Use !empty? instead of size > 0.\n    if graph.size > 0  # have we found anything yet?\n       ^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:86:22: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n    if graph.size > 0  # have we found anything yet?\n                     ^\napp/tests/fc_data_kr_language_weak.rb:88:80: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n      identifier = FAIRChampion::CommonQueries::GetDataIdentifier(graph: graph)\t\t\n                                                                               ^^\napp/tests/fc_data_kr_language_weak.rb:91:5: C: [Correctable] Style/UnlessElse: Do not use unless with else. Rewrite these with the positive case first.\n    unless identifier =~ /\\w+/ ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:92:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.\n        output.score = \"indeterminate\"\n    ^^^^\napp/tests/fc_data_kr_language_weak.rb:92:24: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n        output.score = \"indeterminate\"\n                       ^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:93:121: C: Layout/LineLength: Line is too long. [140/120]\n        output.comments <<  \"INFO: Tested the following #{FAIRChampion::Utils::DATA_PREDICATES}(or their plain JSON hash-key equivalents)\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:94:29: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n        output.comments <<  \"INDETERMINATE: Was unable to locate the data identifier in the metadata using any (common) property/predicate reserved for this purpose.\"\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:94:121: C: Layout/LineLength: Line is too long. [166/120]\n        output.comments <<  \"INDETERMINATE: Was unable to locate the data identifier in the metadata using any (common) property/predicate reserved for this purpose.\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:96:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.\n        output.comments <<  \"INFO: Now resolving #{identifier} to test its properties.\\n\"\n    ^^^^\napp/tests/fc_data_kr_language_weak.rb:97:9: C: [Correctable] Style/RedundantSelf: Redundant self detected.\n        self.testIdentifier(guid: identifier, output: output) # this will add more comments and a score to output\n        ^^^^\napp/tests/fc_data_kr_language_weak.rb:99:5: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n    return output.createEvaluationResponse\n    ^^^^^^\napp/tests/fc_data_kr_language_weak.rb:102:3: C: Metrics/AbcSize: Assignment Branch Condition size for testIdentifier is too high. [<14, 49, 18> 54.05/17]\n  def self.testIdentifier(guid:, output: ) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:102:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for testIdentifier is too high. [10/7]\n  def self.testIdentifier(guid:, output: ) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:102:3: C: Metrics/MethodLength: Method has too many lines. [54/10]\n  def self.testIdentifier(guid:, output: ) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:102:3: C: Metrics/PerceivedComplexity: Perceived complexity for testIdentifier is too high. [15/8]\n  def self.testIdentifier(guid:, output: ) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:102:12: C: Naming/MethodName: Use snake_case for method names.\n  def self.testIdentifier(guid:, output: )\n           ^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:102:41: C: [Correctable] Layout/SpaceInsideParens: Space inside parentheses detected.\n  def self.testIdentifier(guid:, output: )\n                                        ^\napp/tests/fc_data_kr_language_weak.rb:103:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.\napp/tests/fc_data_kr_language_weak.rb:103:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\napp/tests/fc_data_kr_language_weak.rb:104:40: C: [Correctable] Style/ColonMethodCall: Do not use :: for method calls.\n    type, url = FAIRChampion::Harvester::convertToURL(guid)\n                                       ^^\napp/tests/fc_data_kr_language_weak.rb:106:121: C: Layout/LineLength: Line is too long. [296/120]\n      output.comments << \"INDETERMINATE: The GUID identifier of the data #{guid} did not match any known identification system (tested inchi, doi, handle, uri) and therefore did not pass this metric.  If you think this is an error, please contact the FAIR Metrics group (http://fairmetrics.org).\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:107:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      output.score = \"indeterminate\"\n                     ^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:110:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\napp/tests/fc_data_kr_language_weak.rb:111:5: C: [Correctable] Style/CaseLikeIf: Convert if-elsif to case-when.\n    if type == \"handle\" ...\n    ^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:111:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    if type == \"handle\"\n               ^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:113:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    elsif type == \"doi\"\n                  ^^^^^\napp/tests/fc_data_kr_language_weak.rb:115:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    elsif type == \"inchi\"\n                  ^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:117:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    elsif type == \"uri\"\n                  ^^^^^\napp/tests/fc_data_kr_language_weak.rb:121:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      output.score = \"fail\"\n                     ^^^^^^\napp/tests/fc_data_kr_language_weak.rb:124:38: C: [Correctable] Style/ColonMethodCall: Do not use :: for method calls.\n    headers = FAIRChampion::Harvester::head(url, FAIRChampion::Utils::AcceptHeader) # returns headers or false\n                                     ^^\napp/tests/fc_data_kr_language_weak.rb:130:121: C: Layout/LineLength: Line is too long. [128/120]\n          output.comments << \"SUCCESS: The reported content-type of the data is [#{type}] which is a known Linked Data format\\n\"\n                                                                                                                        ^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:131:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n          output.score = \"pass\"\n                         ^^^^^^\napp/tests/fc_data_kr_language_weak.rb:132:11: C: [Correctable] Style/IdenticalConditionalBranches: Move return out of the conditional.\n          return\n          ^^^^^^\napp/tests/fc_data_kr_language_weak.rb:133:13: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n        else \n            ^\napp/tests/fc_data_kr_language_weak.rb:134:121: C: Layout/LineLength: Line is too long. [132/120]\n          output.comments << \"FAILURE: The reported content-type of the data is [#{type}] which is not a known Linked Data format\\n\"\n                                                                                                                        ^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:135:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n          output.score = \"fail\"\n                         ^^^^^^\napp/tests/fc_data_kr_language_weak.rb:136:11: C: [Correctable] Style/IdenticalConditionalBranches: Move return out of the conditional.\n          return\n          ^^^^^^\napp/tests/fc_data_kr_language_weak.rb:138:9: W: Lint/UnreachableCode: Unreachable code detected.\n        structuredformats = Utils::RDF_FORMATS.values.append Utils::XML_FORMATS.values.append Utils::JSON_FORMATS.values.append ['text/xhtml+xml', 'application/xhtml+xml']\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:138:121: C: [Correctable] Layout/LineLength: Line is too long. [171/120]\n        structuredformats = Utils::RDF_FORMATS.values.append Utils::XML_FORMATS.values.append Utils::JSON_FORMATS.values.append ['text/xhtml+xml', 'application/xhtml+xml']\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:141:121: C: Layout/LineLength: Line is too long. [143/120]\n          output.comments << \"SUCCESS: The reported content-type of the data is [#{type}] which is, or is likely to contain, structured data\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:142:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n          output.score = \"pass\"\n                         ^^^^^^\napp/tests/fc_data_kr_language_weak.rb:143:11: C: [Correctable] Style/IdenticalConditionalBranches: Move return out of the conditional.\n          return\n          ^^^^^^\napp/tests/fc_data_kr_language_weak.rb:143:11: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n          return\n          ^^^^^^\napp/tests/fc_data_kr_language_weak.rb:144:13: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n        else \n            ^\napp/tests/fc_data_kr_language_weak.rb:145:121: C: Layout/LineLength: Line is too long. [139/120]\n          output.comments << \"FAILURE: The reported content-type of the data is [#{type}] which is not likely to contain structured data\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:146:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n          output.score = \"fail\"\n                         ^^^^^^\napp/tests/fc_data_kr_language_weak.rb:147:11: C: [Correctable] Style/IdenticalConditionalBranches: Move return out of the conditional.\n          return\n          ^^^^^^\napp/tests/fc_data_kr_language_weak.rb:147:11: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n          return\n          ^^^^^^\napp/tests/fc_data_kr_language_weak.rb:150:121: C: Layout/LineLength: Line is too long. [139/120]\n        output.comments << \"INDETERMINATE: The URL to the data is not reporting a Content-Type in its headers.  This test will now halt.\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:151:24: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n        output.score = \"indeterminate\"\n                       ^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:152:9: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n        return\n        ^^^^^^\napp/tests/fc_data_kr_language_weak.rb:155:121: C: Layout/LineLength: Line is too long. [172/120]\n      output.comments << \"INDETERMINATE: The url #{url} failed to resolve via a HEAD call with headers #{FAIRChampion::Utils::AcceptHeader}, therefore we cannot continue\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:156:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      output.score = \"indeterminate\"\n                     ^^^^^^^^^^^^^^^\napp/tests/fc_data_kr_language_weak.rb:157:7: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n      return\n      ^^^^^^\napp/tests/fc_data_protocol.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nrequire_relative File.dirname(__FILE__) + '/../lib/harvester.rb'\n^\napp/tests/fc_data_protocol.rb:1:18: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nrequire_relative File.dirname(__FILE__) + '/../lib/harvester.rb'\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_protocol.rb:3:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_data_protocol.rb:4:1: C: Style/Documentation: Missing top-level documentation comment for class FAIRTest.\nclass FAIRTest\n^^^^^^^^^^^^^^\napp/tests/fc_data_protocol.rb:5:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.\napp/tests/fc_data_protocol.rb:6:3: C: Metrics/MethodLength: Method has too many lines. [24/10]\n  def self.fc_data_protocol_meta ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_protocol.rb:7:5: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n    return {\n    ^^^^^^\napp/tests/fc_data_protocol.rb:8:5: C: [Correctable] Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n    testversion: HARVESTER_VERSION + ':' + 'Tst-2.0.0',\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_protocol.rb:8:18: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n    testversion: HARVESTER_VERSION + ':' + 'Tst-2.0.0',\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_protocol.rb:9:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    testname: \"FAIR Champion: Data Protocol\",\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_protocol.rb:10:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    testid: \"fc_data_protocol\",\n            ^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_protocol.rb:11:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    description: \"Data may be retrieved by an open and free protocol.  Tests data GUID for its resolution protocol.  Currently passes InChI Keys, DOIs, Handles, and URLs.  Recognition of other identifiers will be added upon request by the community.\",\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_protocol.rb:11:121: C: Layout/LineLength: Line is too long. [251/120]\n    description: \"Data may be retrieved by an open and free protocol.  Tests data GUID for its resolution protocol.  Currently passes InChI Keys, DOIs, Handles, and URLs.  Recognition of other identifiers will be added upon request by the community.\",\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_protocol.rb:30:3: C: [Correctable] Layout/FirstHashElementIndentation: Indent the right brace the same as the start of the line where the left brace is.\n  }\n  ^\napp/tests/fc_data_protocol.rb:31:1: W: [Correctable] Layout/DefEndAlignment: end at 31, 0 is not aligned with def at 6, 2.\nend\n^^^\napp/tests/fc_data_protocol.rb:33:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_data_protocol.rb:34:3: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 2.\n  def self.fc_data_protocol(guid:)\n  ^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_protocol.rb:34:3: C: Metrics/AbcSize: Assignment Branch Condition size for fc_data_protocol is too high. [<22, 52, 13> 57.94/17]\n  def self.fc_data_protocol(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_protocol.rb:34:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for fc_data_protocol is too high. [9/7]\n  def self.fc_data_protocol(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_protocol.rb:34:3: C: Metrics/MethodLength: Method has too many lines. [54/10]\n  def self.fc_data_protocol(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_protocol.rb:34:3: C: Metrics/PerceivedComplexity: Perceived complexity for fc_data_protocol is too high. [11/8]\n  def self.fc_data_protocol(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_protocol.rb:42:47: C: [Correctable] Style/RedundantSelf: Redundant self detected.\n    output.comments << \"INFO: TEST VERSION '#{self.fc_data_protocol_meta[:testversion]}'\\n\"\n                                              ^^^^\napp/tests/fc_data_protocol.rb:51:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      output.score = \"indeterminate\"\n                     ^^^^^^^^^^^^^^^\napp/tests/fc_data_protocol.rb:62:1: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 0 instead of 4).\n#############################################################################################################\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_protocol.rb:64:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_data_protocol.rb:69:7: C: [Correctable] Style/ParallelAssignment: Do not use parallel assignment.\n      key, value = nil, nil\n      ^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_protocol.rb:70:28: C: [Correctable] Style/Semicolon: Do not use semicolons to terminate expressions.\n      (key, value) = keyval;\n                           ^\napp/tests/fc_data_protocol.rb:72:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\napp/tests/fc_data_protocol.rb:75:17: C: [Correctable] Style/RegexpLiteral: Use %r around regular expression.\n        prop =~ /.*[#\\/]([^#\\/]+)$/\n                ^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_protocol.rb:76:16: C: [Correctable] Style/PerlBackrefs: Prefer ::Regexp.last_match(1) over $1.\n        prop = $1\n               ^^\napp/tests/fc_data_protocol.rb:80:21: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.\n          identifier=value.to_s\n                    ^\napp/tests/fc_data_protocol.rb:85:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_data_protocol.rb:86:8: C: [Correctable] Style/NumericPredicate: Use graph.size.positive? instead of graph.size > 0.\n    if graph.size > 0  # have we found anything yet?\n       ^^^^^^^^^^^^^^\napp/tests/fc_data_protocol.rb:86:8: C: [Correctable] Style/ZeroLengthPredicate: Use !empty? instead of size > 0.\n    if graph.size > 0  # have we found anything yet?\n       ^^^^^^^^^^^^^^\napp/tests/fc_data_protocol.rb:86:22: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n    if graph.size > 0  # have we found anything yet?\n                     ^\napp/tests/fc_data_protocol.rb:88:80: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n      identifier = FAIRChampion::CommonQueries::GetDataIdentifier(graph: graph)\t\t\n                                                                               ^^\napp/tests/fc_data_protocol.rb:91:5: C: [Correctable] Style/UnlessElse: Do not use unless with else. Rewrite these with the positive case first.\n    unless identifier =~ /\\w+/ ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_protocol.rb:92:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.\n        output.score = \"indeterminate\"\n    ^^^^\napp/tests/fc_data_protocol.rb:92:24: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n        output.score = \"indeterminate\"\n                       ^^^^^^^^^^^^^^^\napp/tests/fc_data_protocol.rb:93:121: C: Layout/LineLength: Line is too long. [140/120]\n        output.comments <<  \"INFO: Tested the following #{FAIRChampion::Utils::DATA_PREDICATES}(or their plain JSON hash-key equivalents)\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_protocol.rb:94:29: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n        output.comments <<  \"INDETERMINATE: Was unable to locate the data identifier in the metadata using any (common) property/predicate reserved for this purpose.\"\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_protocol.rb:94:121: C: Layout/LineLength: Line is too long. [166/120]\n        output.comments <<  \"INDETERMINATE: Was unable to locate the data identifier in the metadata using any (common) property/predicate reserved for this purpose.\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_protocol.rb:96:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.\n        metadata2 = FAIRChampion::Harvester::typeit(identifier) \n    ^^^^\napp/tests/fc_data_protocol.rb:96:44: C: [Correctable] Style/ColonMethodCall: Do not use :: for method calls.\n        metadata2 = FAIRChampion::Harvester::typeit(identifier) \n                                           ^^\napp/tests/fc_data_protocol.rb:96:64: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n        metadata2 = FAIRChampion::Harvester::typeit(identifier) \n                                                               ^\napp/tests/fc_data_protocol.rb:97:9: C: [Correctable] Style/NegatedIfElseCondition: Invert the negated condition and swap the if-else branches.\n        if !metadata2 ...\n        ^^^^^^^^^^^^^\napp/tests/fc_data_protocol.rb:98:27: C: [Correctable] Layout/SpaceAroundOperators: Operator << should be surrounded by a single space.\n          output.comments <<  \"FAILURE: The identifier #{@identifier} did not match any known identification system.\\n\"\n                          ^^\napp/tests/fc_data_protocol.rb:99:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n          output.score = \"fail\"\n                         ^^^^^^\napp/tests/fc_data_protocol.rb:101:27: C: [Correctable] Layout/SpaceAroundOperators: Operator << should be surrounded by a single space.\n          output.comments <<  \"SUCCESS: The identifier #{@identifier} is recognized as a #{metadata2}, which is resolvable by an open and free protocol.\\n\"\n                          ^^\napp/tests/fc_data_protocol.rb:101:121: C: Layout/LineLength: Line is too long. [155/120]\n          output.comments <<  \"SUCCESS: The identifier #{@identifier} is recognized as a #{metadata2}, which is resolvable by an open and free protocol.\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_data_protocol.rb:102:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n          output.score = \"pass\"\n                         ^^^^^^\napp/tests/fc_data_protocol.rb:105:5: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n    return output.createEvaluationResponse\n    ^^^^^^\napp/tests/fc_data_protocol.rb:106:1: C: [Correctable] Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body end.\napp/tests/fc_data_protocol.rb:118:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.\nend\n   \napp/tests/fc_grounded_metadata.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nrequire_relative File.dirname(__FILE__) + '/../lib/harvester.rb'\n^\napp/tests/fc_grounded_metadata.rb:1:18: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nrequire_relative File.dirname(__FILE__) + '/../lib/harvester.rb'\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_grounded_metadata.rb:3:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_grounded_metadata.rb:4:1: C: Style/Documentation: Missing top-level documentation comment for class FAIRTest.\nclass FAIRTest\n^^^^^^^^^^^^^^\napp/tests/fc_grounded_metadata.rb:5:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.\napp/tests/fc_grounded_metadata.rb:6:3: C: Metrics/MethodLength: Method has too many lines. [24/10]\n  def self.fc_grounded_metadata_meta ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_grounded_metadata.rb:7:5: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n    return {\n    ^^^^^^\napp/tests/fc_grounded_metadata.rb:8:5: C: [Correctable] Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n    testversion: HARVESTER_VERSION + ':' + 'Tst-2.0.0',\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_grounded_metadata.rb:8:18: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n    testversion: HARVESTER_VERSION + ':' + 'Tst-2.0.0',\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_grounded_metadata.rb:9:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    testname: \"FAIR Champion: Grounded Metadata\",\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_grounded_metadata.rb:10:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    testid: \"fc_grounded_metadata\",\n            ^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_grounded_metadata.rb:11:121: C: Layout/LineLength: Line is too long. [385/120]\n    description: \"Tests whether a machine is able to find 'grounded' metadata.  i.e. metadata terms that are in a resolvable namespace, where resolution leads to a definition of the meaning of the term. Examples include JSON-LD, embedded schema, or any form of RDF. This test currently excludes XML, even when terms are namespaced.  Future versions of this test may be more flexible.\",\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_grounded_metadata.rb:30:3: C: [Correctable] Layout/FirstHashElementIndentation: Indent the right brace the same as the start of the line where the left brace is.\n  }\n  ^\napp/tests/fc_grounded_metadata.rb:31:1: W: [Correctable] Layout/DefEndAlignment: end at 31, 0 is not aligned with def at 6, 2.\nend\n^^^\napp/tests/fc_grounded_metadata.rb:33:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_grounded_metadata.rb:34:3: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 2.\n  def self.fc_grounded_metadata(guid:)\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_grounded_metadata.rb:34:3: C: Metrics/AbcSize: Assignment Branch Condition size for fc_grounded_metadata is too high. [<9, 28, 6> 30.02/17]\n  def self.fc_grounded_metadata(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_grounded_metadata.rb:34:3: C: Metrics/MethodLength: Method has too many lines. [26/10]\n  def self.fc_grounded_metadata(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_grounded_metadata.rb:42:47: C: [Correctable] Style/RedundantSelf: Redundant self detected.\n    output.comments << \"INFO: TEST VERSION '#{self.fc_grounded_metadata_meta[:testversion]}'\\n\"\n                                              ^^^^\napp/tests/fc_grounded_metadata.rb:51:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      output.score = \"indeterminate\"\n                     ^^^^^^^^^^^^^^^\napp/tests/fc_grounded_metadata.rb:58:5: W: [Correctable] Lint/UselessAssignment: Useless assignment to variable - properties.\n    properties = FAIRChampion::Harvester.deep_dive_properties(hash)\n    ^^^^^^^^^^\napp/tests/fc_grounded_metadata.rb:62:1: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 0 instead of 4).\n#############################################################################################################\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_grounded_metadata.rb:64:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_grounded_metadata.rb:65:8: C: [Correctable] Style/NumericPredicate: Use graph.size.positive? instead of graph.size > 0.\n    if graph.size > 0  # have we found anything yet?\n       ^^^^^^^^^^^^^^\napp/tests/fc_grounded_metadata.rb:65:8: C: [Correctable] Style/ZeroLengthPredicate: Use !empty? instead of size > 0.\n    if graph.size > 0  # have we found anything yet?\n       ^^^^^^^^^^^^^^\napp/tests/fc_grounded_metadata.rb:65:22: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n    if graph.size > 0  # have we found anything yet?\n                     ^\napp/tests/fc_grounded_metadata.rb:66:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      output.score = \"pass\"\n                     ^^^^^^\napp/tests/fc_grounded_metadata.rb:70:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      output.score = \"fail\"\n                     ^^^^^^\napp/tests/fc_grounded_metadata.rb:72:5: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n    return output.createEvaluationResponse\n    ^^^^^^\napp/tests/fc_grounded_metadata.rb:73:1: C: [Correctable] Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body end.\napp/tests/fc_metadata_authorization.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nrequire_relative File.dirname(__FILE__) + '/../lib/harvester.rb'\n^\napp/tests/fc_metadata_authorization.rb:1:18: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nrequire_relative File.dirname(__FILE__) + '/../lib/harvester.rb'\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_authorization.rb:3:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_metadata_authorization.rb:4:1: C: Style/Documentation: Missing top-level documentation comment for class FAIRTest.\nclass FAIRTest\n^^^^^^^^^^^^^^\napp/tests/fc_metadata_authorization.rb:5:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.\napp/tests/fc_metadata_authorization.rb:6:3: C: Metrics/MethodLength: Method has too many lines. [24/10]\n  def self.fc_metadata_authorization_meta ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_authorization.rb:7:5: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n    return {\n    ^^^^^^\napp/tests/fc_metadata_authorization.rb:8:5: C: [Correctable] Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n    testversion: HARVESTER_VERSION + ':' + 'Tst-2.0.0',\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_authorization.rb:8:18: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n    testversion: HARVESTER_VERSION + ':' + 'Tst-2.0.0',\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_authorization.rb:11:121: C: Layout/LineLength: Line is too long. [263/120]\n    description: 'Tests metadata GUID for the ability to implement authentication and authorization in its resolution protocol.  Currently passes InChI Keys, DOIs, Handles, and URLs.  Recognition of other identifiers will be added upon request by the community.',\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_authorization.rb:33:3: C: Metrics/MethodLength: Method has too many lines. [14/10]\n  def self.fc_metadata_authorization(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_authorization.rb:36:24: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n      testedGUID: guid, \n                       ^\napp/tests/fc_metadata_authorization.rb:37:43: C: [Correctable] Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument when opening brace is on a separate line from the first argument.\n      meta: fc_metadata_authorization_meta)\n                                          ^\napp/tests/fc_metadata_authorization.rb:47:121: C: Layout/LineLength: Line is too long. [131/120]\n      output.comments << \"PASS:  The GUID of the metadata is a #{type}, which is known to be allow authentication/authorization.\\n\"\n                                                                                                                        ^^^^^^^^^^^\napp/tests/fc_metadata_authorization.rb:51:121: C: Layout/LineLength: Line is too long. [134/120]\n      output.comments << \"INDETERMINATE: The GUID identifier of the metadata #{guid} did not match any known identification system.\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^\napp/tests/fc_metadata_identifier_in_metadata.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nrequire_relative File.dirname(__FILE__) + '/../lib/harvester.rb'\n^\napp/tests/fc_metadata_identifier_in_metadata.rb:1:18: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nrequire_relative File.dirname(__FILE__) + '/../lib/harvester.rb'\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_identifier_in_metadata.rb:3:1: C: Style/Documentation: Missing top-level documentation comment for class FAIRTest.\nclass FAIRTest\n^^^^^^^^^^^^^^\napp/tests/fc_metadata_identifier_in_metadata.rb:4:3: C: Metrics/MethodLength: Method has too many lines. [24/10]\n  def self.fc_metadata_identifier_in_metadata_meta ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_identifier_in_metadata.rb:6:20: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n      testversion: HARVESTER_VERSION + ':' + 'Tst-2.0.0',\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_identifier_in_metadata.rb:9:121: C: Layout/LineLength: Line is too long. [372/120]\n      description: \"Metric to test if the metadata contains the unique identifier to the metadata itself.  This is done using a variety of 'scraping' tools, including DOI metadata resolution, the use of the 'extruct' Python tool, and others.  The test is executed by searching for the predicates 'http[s]://purl.org/dc/terms/identifier','http[s]://schema.org/identifier.\",\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_identifier_in_metadata.rb:31:3: C: Metrics/AbcSize: Assignment Branch Condition size for fc_metadata_identifier_in_metadata is too high. [<14, 54, 11> 56.86/17]\n  def self.fc_metadata_identifier_in_metadata(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_identifier_in_metadata.rb:31:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for fc_metadata_identifier_in_metadata is too high. [8/7]\n  def self.fc_metadata_identifier_in_metadata(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_identifier_in_metadata.rb:31:3: C: Metrics/MethodLength: Method has too many lines. [49/10]\n  def self.fc_metadata_identifier_in_metadata(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_identifier_in_metadata.rb:31:3: C: Metrics/PerceivedComplexity: Perceived complexity for fc_metadata_identifier_in_metadata is too high. [10/8]\n  def self.fc_metadata_identifier_in_metadata(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_identifier_in_metadata.rb:55:5: W: [Correctable] Lint/UselessAssignment: Useless assignment to variable - properties.\n    properties = FAIRChampion::Harvester.deep_dive_properties(hash)\n    ^^^^^^^^^^\napp/tests/fc_metadata_identifier_in_metadata.rb:61:8: C: [Correctable] Style/NumericPredicate: Use graph.size.positive? instead of graph.size > 0.\n    if graph.size > 0\n       ^^^^^^^^^^^^^^\napp/tests/fc_metadata_identifier_in_metadata.rb:61:8: C: [Correctable] Style/ZeroLengthPredicate: Use !empty? instead of size > 0.\n    if graph.size > 0\n       ^^^^^^^^^^^^^^\napp/tests/fc_metadata_identifier_in_metadata.rb:62:121: C: Layout/LineLength: Line is too long. [191/120]\n      output.comments << \"INFO: Linked Data Found.  Now searching for the metadata identifier using appropriate linked data predicates (#{FAIRChampion::Utils::SELF_IDENTIFIER_PREDICATES}).\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_identifier_in_metadata.rb:64:7: C: Naming/VariableName: Use snake_case for variable names.\n      foundID = FAIRChampion::CommonQueries::GetSelfIdentifier(metadata.graph, output)\n      ^^^^^^^\napp/tests/fc_metadata_identifier_in_metadata.rb:67:14: C: Naming/VariableName: Use snake_case for variable names.\n      unless foundID.first\n             ^^^^^^^\napp/tests/fc_metadata_identifier_in_metadata.rb:72:10: C: Naming/VariableName: Use snake_case for variable names.\n      if foundID.first.empty?\n         ^^^^^^^\napp/tests/fc_metadata_identifier_in_metadata.rb:74:121: C: Layout/LineLength: Line is too long. [167/120]\n        output.comments << \"FAILURE: No metadata identifiers were found in the metadata record using predicates #{FAIRChampion::Utils::SELF_IDENTIFIER_PREDICATES}. \\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_identifier_in_metadata.rb:77:14: C: Naming/VariableName: Use snake_case for variable names.\n      unless foundID.first =~ /\\w/\n             ^^^^^^^\napp/tests/fc_metadata_identifier_in_metadata.rb:79:121: C: Layout/LineLength: Line is too long. [167/120]\n        output.comments << \"FAILURE: No metadata identifiers were found in the metadata record using predicates #{FAIRChampion::Utils::SELF_IDENTIFIER_PREDICATES}. \\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_identifier_in_metadata.rb:89:8: C: Naming/VariableName: Use snake_case for variable names.\n    if foundID.include?(guid)\n       ^^^^^^^\napp/tests/fc_metadata_identifier_in_metadata.rb:94:95: C: Naming/VariableName: Use snake_case for variable names.\n      output.comments << \"FAILURE: While (apparent) metadata record identifiers were found (#{foundID}) none of them matched the initial GUID provided to the test (#{guid}).  Exact identifier match is required.\\n\"\n                                                                                              ^^^^^^^\napp/tests/fc_metadata_identifier_in_metadata.rb:94:121: C: Layout/LineLength: Line is too long. [213/120]\n      output.comments << \"FAILURE: While (apparent) metadata record identifiers were found (#{foundID}) none of them matched the initial GUID provided to the test (#{guid}).  Exact identifier match is required.\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_identifier_in_metadata.rb:100:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_metadata_identifier_in_metadata.rb:101:3: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 2.\n  def self.fc_metadata_identifier_in_metadata_api\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_identifier_persistence.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nrequire_relative File.dirname(__FILE__) + '/../lib/harvester.rb'\n^\napp/tests/fc_metadata_identifier_persistence.rb:1:18: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nrequire_relative File.dirname(__FILE__) + '/../lib/harvester.rb'\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_identifier_persistence.rb:3:1: C: Style/Documentation: Missing top-level documentation comment for class FAIRTest.\nclass FAIRTest\n^^^^^^^^^^^^^^\napp/tests/fc_metadata_identifier_persistence.rb:4:3: C: Metrics/MethodLength: Method has too many lines. [24/10]\n  def self.fc_metadata_identifier_persistence_meta ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_identifier_persistence.rb:6:20: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n      testversion: HARVESTER_VERSION + ':' + 'Tst-2.0.0',\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_identifier_persistence.rb:9:121: C: Layout/LineLength: Line is too long. [372/120]\n      description: \"Metric to test if the unique identifier of the metadata resource is likely to be persistent. Known schema are registered in FAIRSharing (https://fairsharing.org/standards/?q=&selected_facets=type_exact:identifier%20schema). For URLs that don't follow a schema in FAIRSharing we test known URL persistence schemas (purl, oclc, fdlp, purlz, w3id, ark).\",\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_identifier_persistence.rb:31:3: C: Metrics/AbcSize: Assignment Branch Condition size for fc_metadata_identifier_persistence is too high. [<6, 32, 12> 34.7/17]\n  def self.fc_metadata_identifier_persistence(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_identifier_persistence.rb:31:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for fc_metadata_identifier_persistence is too high. [10/7]\n  def self.fc_metadata_identifier_persistence(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_identifier_persistence.rb:31:3: C: Metrics/MethodLength: Method has too many lines. [24/10]\n  def self.fc_metadata_identifier_persistence(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_identifier_persistence.rb:31:3: C: Metrics/PerceivedComplexity: Perceived complexity for fc_metadata_identifier_persistence is too high. [12/8]\n  def self.fc_metadata_identifier_persistence(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_identifier_persistence.rb:63:121: C: Layout/LineLength: Line is too long. [128/120]\n      output.comments << \"FAILURE: The GUID identifier of the metadata #{guid} did not match any known identification system.\\n\"\n                                                                                                                        ^^^^^^^^\napp/tests/fc_metadata_identifier_persistence.rb:66:121: C: Layout/LineLength: Line is too long. [163/120]\n      output.comments << \"INFO: The metadata GUID appears to be a URL.  Testing known URL persistence schemas (purl, oclc, fdlp, purlz, w3id, ark, doi(as URL)).\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_identifier_persistence.rb:67:31: C: [Correctable] Style/AndOr: Use || instead of or.\n      if (guid =~ /(purl)\\./) or (guid =~ /(oclc)\\./) or (guid =~ /(fdlp)\\./) or (guid =~ /(purlz)\\./) or (guid =~ /(w3id)\\./) or (guid =~ /(ark):/) or (guid =~ /(doi.org)/)\n                              ^^\napp/tests/fc_metadata_identifier_persistence.rb:67:55: C: [Correctable] Style/AndOr: Use || instead of or.\n      if (guid =~ /(purl)\\./) or (guid =~ /(oclc)\\./) or (guid =~ /(fdlp)\\./) or (guid =~ /(purlz)\\./) or (guid =~ /(w3id)\\./) or (guid =~ /(ark):/) or (guid =~ /(doi.org)/)\n                                                      ^^\napp/tests/fc_metadata_identifier_persistence.rb:67:79: C: [Correctable] Style/AndOr: Use || instead of or.\n      if (guid =~ /(purl)\\./) or (guid =~ /(oclc)\\./) or (guid =~ /(fdlp)\\./) or (guid =~ /(purlz)\\./) or (guid =~ /(w3id)\\./) or (guid =~ /(ark):/) or (guid =~ /(doi.org)/)\n                                                                              ^^\napp/tests/fc_metadata_identifier_persistence.rb:67:104: C: [Correctable] Style/AndOr: Use || instead of or.\n      if (guid =~ /(purl)\\./) or (guid =~ /(oclc)\\./) or (guid =~ /(fdlp)\\./) or (guid =~ /(purlz)\\./) or (guid =~ /(w3id)\\./) or (guid =~ /(ark):/) or (guid =~ /(doi.org)/)\n                                                                                                       ^^\napp/tests/fc_metadata_identifier_persistence.rb:67:121: C: Layout/LineLength: Line is too long. [173/120]\n      if (guid =~ /(purl)\\./) or (guid =~ /(oclc)\\./) or (guid =~ /(fdlp)\\./) or (guid =~ /(purlz)\\./) or (guid =~ /(w3id)\\./) or (guid =~ /(ark):/) or (guid =~ /(doi.org)/)\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_identifier_persistence.rb:67:128: C: [Correctable] Style/AndOr: Use || instead of or.\n      if (guid =~ /(purl)\\./) or (guid =~ /(oclc)\\./) or (guid =~ /(fdlp)\\./) or (guid =~ /(purlz)\\./) or (guid =~ /(w3id)\\./) or (guid =~ /(ark):/) or (guid =~ /(doi.org)/)\n                                                                                                                               ^^\napp/tests/fc_metadata_identifier_persistence.rb:67:150: C: [Correctable] Style/AndOr: Use || instead of or.\n      if (guid =~ /(purl)\\./) or (guid =~ /(oclc)\\./) or (guid =~ /(fdlp)\\./) or (guid =~ /(purlz)\\./) or (guid =~ /(w3id)\\./) or (guid =~ /(ark):/) or (guid =~ /(doi.org)/)\n                                                                                                                                                     ^^\napp/tests/fc_metadata_identifier_persistence.rb:68:121: C: Layout/LineLength: Line is too long. [131/120]\n        output.comments << \"SUCCESS: The metadata GUID conforms with #{::Regexp.last_match(1)}, which is known to be persistent.\\n\"\n                                                                                                                        ^^^^^^^^^^^\napp/tests/fc_metadata_identifier_persistence.rb:81:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_metadata_identifier_persistence.rb:82:3: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 2.\n  def self.fc_metadata_identifier_persistence_api\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_includes_license.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nrequire_relative File.dirname(__FILE__) + '/../lib/harvester.rb'\n^\napp/tests/fc_metadata_includes_license.rb:1:18: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nrequire_relative File.dirname(__FILE__) + '/../lib/harvester.rb'\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_includes_license.rb:3:1: C: Metrics/ClassLength: Class has too many lines. [106/100]\nclass FAIRTest ...\n^^^^^^^^^^^^^^\napp/tests/fc_metadata_includes_license.rb:3:1: C: Style/Documentation: Missing top-level documentation comment for class FAIRTest.\nclass FAIRTest\n^^^^^^^^^^^^^^\napp/tests/fc_metadata_includes_license.rb:4:3: C: Metrics/MethodLength: Method has too many lines. [24/10]\n  def self.fc_metadata_includes_license_meta ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_includes_license.rb:6:20: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n      testversion: HARVESTER_VERSION + ':' + 'Tst-2.0.0',\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_includes_license.rb:9:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      description: \"Maturity Indicator to test if the linked data metadata contains an explicit pointer to the license.  Tests: xhtml, dvia, dcterms, cc, data.gov.au, and Schema license predicates in linked data, and validates the value of those properties.\",\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_includes_license.rb:9:121: C: Layout/LineLength: Line is too long. [259/120]\n      description: \"Maturity Indicator to test if the linked data metadata contains an explicit pointer to the license.  Tests: xhtml, dvia, dcterms, cc, data.gov.au, and Schema license predicates in linked data, and validates the value of those properties.\",\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_includes_license.rb:31:3: C: Metrics/AbcSize: Assignment Branch Condition size for fc_metadata_includes_license is too high. [<23, 76, 21> 82.13/17]\n  def self.fc_metadata_includes_license(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_includes_license.rb:31:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for fc_metadata_includes_license is too high. [15/7]\n  def self.fc_metadata_includes_license(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_includes_license.rb:31:3: C: Metrics/MethodLength: Method has too many lines. [70/10]\n  def self.fc_metadata_includes_license(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_includes_license.rb:31:3: C: Metrics/PerceivedComplexity: Perceived complexity for fc_metadata_includes_license is too high. [19/8]\n  def self.fc_metadata_includes_license(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_includes_license.rb:55:5: W: [Correctable] Lint/UselessAssignment: Useless assignment to variable - properties.\n    properties = FAIRChampion::Harvester.deep_dive_properties(hash)\n    ^^^^^^^^^^\napp/tests/fc_metadata_includes_license.rb:69:8: C: [Correctable] Style/NumericPredicate: Use g.size.positive? instead of g.size > 0.\n    if g.size > 0 # have we found anything yet?\n       ^^^^^^^^^^\napp/tests/fc_metadata_includes_license.rb:69:8: C: [Correctable] Style/ZeroLengthPredicate: Use !empty? instead of size > 0.\n    if g.size > 0 # have we found anything yet?\n       ^^^^^^^^^^\napp/tests/fc_metadata_includes_license.rb:73:30: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n        query = SPARQL.parse('select ?o where {?s <' + predicate + '> ?o}')\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_includes_license.rb:82:121: C: Layout/LineLength: Line is too long. [141/120]\n          output.comments << \"WARN: Found the #{predicate} predicate, but it does not have a Resource as its value, thus is non-compliant.\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_includes_license.rb:95:121: C: Layout/LineLength: Line is too long. [254/120]\n          output.comments << \"WARN: Found the Schema license predicate, but it does not have a Resource as its value.  While this is compliant with Schema, it is not best-practice.  Please update your metadata to point to a URL containing the license.\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_includes_license.rb:108:121: C: Layout/LineLength: Line is too long. [254/120]\n          output.comments << \"WARN: Found the Schema license predicate, but it does not have a Resource as its value.  While this is compliant with Schema, it is not best-practice.  Please update your metadata to point to a URL containing the license.\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_includes_license.rb:121:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_metadata_includes_license.rb:122:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_metadata_includes_license.rb:123:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_metadata_includes_license.rb:124:3: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 4.\n  def self.fc_metadata_includes_license_api\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_includes_license_weak.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nrequire_relative File.dirname(__FILE__) + '/../lib/harvester.rb'\n^\napp/tests/fc_metadata_includes_license_weak.rb:1:18: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nrequire_relative File.dirname(__FILE__) + '/../lib/harvester.rb'\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_includes_license_weak.rb:3:1: C: Metrics/ClassLength: Class has too many lines. [121/100]\nclass FAIRTest ...\n^^^^^^^^^^^^^^\napp/tests/fc_metadata_includes_license_weak.rb:3:1: C: Style/Documentation: Missing top-level documentation comment for class FAIRTest.\nclass FAIRTest\n^^^^^^^^^^^^^^\napp/tests/fc_metadata_includes_license_weak.rb:4:3: C: Metrics/MethodLength: Method has too many lines. [24/10]\n  def self.fc_metadata_includes_license_weak_meta ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_includes_license_weak.rb:6:20: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n      testversion: HARVESTER_VERSION + ':' + 'Tst-2.0.0',\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_includes_license_weak.rb:9:121: C: Layout/LineLength: Line is too long. [386/120]\n      description: \"Maturity Indicator to test if the metadata contains an explicit pointer to the license.  This 'weak' test will use a case-insensitive regular expression, and scan both key/value style metadata, as well as linked data metadata.  Tests: xhtml, dvia, dcterms, cc, data.gov.au, and Schema license predicates in linked data, and validates the value of those properties.\",\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_includes_license_weak.rb:31:3: C: Metrics/AbcSize: Assignment Branch Condition size for fc_metadata_includes_license_weak is too high. [<32, 89, 25> 97.83/17]\n  def self.fc_metadata_includes_license_weak(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_includes_license_weak.rb:31:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for fc_metadata_includes_license_weak is too high. [18/7]\n  def self.fc_metadata_includes_license_weak(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_includes_license_weak.rb:31:3: C: Metrics/MethodLength: Method has too many lines. [85/10]\n  def self.fc_metadata_includes_license_weak(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_includes_license_weak.rb:31:3: C: Metrics/PerceivedComplexity: Perceived complexity for fc_metadata_includes_license_weak is too high. [22/8]\n  def self.fc_metadata_includes_license_weak(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_includes_license_weak.rb:55:5: W: [Correctable] Lint/UselessAssignment: Useless assignment to variable - properties.\n    properties = FAIRChampion::Harvester.deep_dive_properties(hash)\n    ^^^^^^^^^^\napp/tests/fc_metadata_includes_license_weak.rb:61:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\napp/tests/fc_metadata_includes_license_weak.rb:62:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    output.score = \"fail\"\n                   ^^^^^^\napp/tests/fc_metadata_includes_license_weak.rb:65:39: C: [Correctable] Style/ColonMethodCall: Do not use :: for method calls.\n      properties = FAIRChampion::Utils::deep_dive_properties(hash)\n                                      ^^\napp/tests/fc_metadata_includes_license_weak.rb:68:9: W: [Correctable] Lint/UselessAssignment: Useless assignment to variable - key. Use _ or _key as a variable name to indicate that it won't be used.\n        key, value = nil, nil\n        ^^^\napp/tests/fc_metadata_includes_license_weak.rb:68:9: C: [Correctable] Style/ParallelAssignment: Do not use parallel assignment.\n        key, value = nil, nil\n        ^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_includes_license_weak.rb:68:14: W: [Correctable] Lint/UselessAssignment: Useless assignment to variable - value. Use _ or _value as a variable name to indicate that it won't be used.\n        key, value = nil, nil\n             ^^^^^\napp/tests/fc_metadata_includes_license_weak.rb:69:15: W: [Correctable] Lint/UselessAssignment: Useless assignment to variable - value. Use _ or _value as a variable name to indicate that it won't be used.\n        (key, value) = keyval;\n              ^^^^^\napp/tests/fc_metadata_includes_license_weak.rb:69:30: C: [Correctable] Style/Semicolon: Do not use semicolons to terminate expressions.\n        (key, value) = keyval;\n                             ^\napp/tests/fc_metadata_includes_license_weak.rb:71:9: C: [Correctable] Style/Next: Use next to skip iteration.\n        if key =~ /license/i\n        ^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_includes_license_weak.rb:73:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n          output.score = \"pass\"\n                         ^^^^^^\napp/tests/fc_metadata_includes_license_weak.rb:88:8: C: [Correctable] Style/NumericPredicate: Use g.size.positive? instead of g.size > 0.\n    if g.size > 0 # have we found anything yet?\n       ^^^^^^^^^^\napp/tests/fc_metadata_includes_license_weak.rb:88:8: C: [Correctable] Style/ZeroLengthPredicate: Use !empty? instead of size > 0.\n    if g.size > 0 # have we found anything yet?\n       ^^^^^^^^^^\napp/tests/fc_metadata_includes_license_weak.rb:92:30: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n        query = SPARQL.parse('select ?o where {?s <' + predicate + '> ?o}')\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_includes_license_weak.rb:101:121: C: Layout/LineLength: Line is too long. [141/120]\n          output.comments << \"WARN: Found the #{predicate} predicate, but it does not have a Resource as its value, thus is non-compliant.\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_includes_license_weak.rb:114:121: C: Layout/LineLength: Line is too long. [254/120]\n          output.comments << \"WARN: Found the Schema license predicate, but it does not have a Resource as its value.  While this is compliant with Schema, it is not best-practice.  Please update your metadata to point to a URL containing the license.\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_includes_license_weak.rb:127:121: C: Layout/LineLength: Line is too long. [254/120]\n          output.comments << \"WARN: Found the Schema license predicate, but it does not have a Resource as its value.  While this is compliant with Schema, it is not best-practice.  Please update your metadata to point to a URL containing the license.\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_includes_license_weak.rb:140:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_metadata_includes_license_weak.rb:141:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_metadata_includes_license_weak.rb:142:3: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 3.\n  def self.fc_metadata_includes_license_weak_api\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_kr_language_strong.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nrequire_relative File.dirname(__FILE__) + '/../lib/harvester.rb'\n^\napp/tests/fc_metadata_kr_language_strong.rb:1:18: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nrequire_relative File.dirname(__FILE__) + '/../lib/harvester.rb'\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_kr_language_strong.rb:3:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_metadata_kr_language_strong.rb:4:1: C: Style/Documentation: Missing top-level documentation comment for class FAIRTest.\nclass FAIRTest\n^^^^^^^^^^^^^^\napp/tests/fc_metadata_kr_language_strong.rb:5:3: C: Metrics/MethodLength: Method has too many lines. [24/10]\n  def self.fc_metadata_kr_language_strong_meta ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_kr_language_strong.rb:7:20: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n      testversion: HARVESTER_VERSION + ':' + 'Tst-2.0.0',\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_kr_language_strong.rb:10:121: C: Layout/LineLength: Line is too long. [495/120]\n      description: \"Maturity Indicator to test if the metadata uses a formal language broadly applicable for knowledge representation.  This particular test takes a broad view of what defines a 'knowledge representation language'; in this evaluation, a knowledge representation language is interpreted as one in which terms are semantically-grounded in ontologies.  Any form of RDF will pass this test (including RDF that is automatically extracted by third-party parsers such as Apache Tika).\",\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_kr_language_strong.rb:32:3: C: Metrics/AbcSize: Assignment Branch Condition size for fc_metadata_kr_language_strong is too high. [<9, 28, 6> 30.02/17]\n  def self.fc_metadata_kr_language_strong(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_kr_language_strong.rb:32:3: C: Metrics/MethodLength: Method has too many lines. [26/10]\n  def self.fc_metadata_kr_language_strong(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_kr_language_strong.rb:56:5: W: [Correctable] Lint/UselessAssignment: Useless assignment to variable - properties.\n    properties = FAIRChampion::Harvester.deep_dive_properties(hash)\n    ^^^^^^^^^^\napp/tests/fc_metadata_kr_language_strong.rb:62:8: C: [Correctable] Style/NumericPredicate: Use graph.size.positive? instead of graph.size > 0.\n    if graph.size > 0  # have we found anything yet?\n       ^^^^^^^^^^^^^^\napp/tests/fc_metadata_kr_language_strong.rb:62:8: C: [Correctable] Style/ZeroLengthPredicate: Use !empty? instead of size > 0.\n    if graph.size > 0  # have we found anything yet?\n       ^^^^^^^^^^^^^^\napp/tests/fc_metadata_kr_language_strong.rb:62:22: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n    if graph.size > 0  # have we found anything yet?\n                     ^\napp/tests/fc_metadata_kr_language_strong.rb:63:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      output.comments << \"SUCCESS: Linked data was found.  \"\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_kr_language_strong.rb:64:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      output.score = \"pass\"\n                     ^^^^^^\napp/tests/fc_metadata_kr_language_strong.rb:66:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      output.comments << \"FAILURE: No linked data was found.  \"\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_kr_language_strong.rb:67:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      output.score = \"fail\"\n                     ^^^^^^\napp/tests/fc_metadata_kr_language_strong.rb:69:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\napp/tests/fc_metadata_kr_language_strong.rb:73:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_metadata_kr_language_strong.rb:74:3: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 2.\n  def self.fc_metadata_kr_language_strong_api\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_kr_language_strong.rb:84:1: C: [Correctable] Layout/TrailingEmptyLines: 1 trailing blank lines detected.\napp/tests/fc_metadata_kr_language_weak.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nrequire_relative File.dirname(__FILE__) + \"/../lib/harvester.rb\"\n^\napp/tests/fc_metadata_kr_language_weak.rb:1:18: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nrequire_relative File.dirname(__FILE__) + \"/../lib/harvester.rb\"\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_kr_language_weak.rb:1:43: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nrequire_relative File.dirname(__FILE__) + \"/../lib/harvester.rb\"\n                                          ^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_kr_language_weak.rb:3:1: C: Style/Documentation: Missing top-level documentation comment for class FAIRTest.\nclass FAIRTest\n^^^^^^^^^^^^^^\napp/tests/fc_metadata_kr_language_weak.rb:4:3: C: Metrics/MethodLength: Method has too many lines. [24/10]\n  def self.fc_metadata_kr_language_weak_meta ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_kr_language_weak.rb:5:5: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n    return {\n    ^^^^^^\napp/tests/fc_metadata_kr_language_weak.rb:6:14: C: [Correctable] Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n             testversion: HARVESTER_VERSION + \":\" + \"Tst-2.0.0\",\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_kr_language_weak.rb:6:27: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n             testversion: HARVESTER_VERSION + \":\" + \"Tst-2.0.0\",\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_kr_language_weak.rb:6:47: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n             testversion: HARVESTER_VERSION + \":\" + \"Tst-2.0.0\",\n                                              ^^^\napp/tests/fc_metadata_kr_language_weak.rb:6:53: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n             testversion: HARVESTER_VERSION + \":\" + \"Tst-2.0.0\",\n                                                    ^^^^^^^^^^^\napp/tests/fc_metadata_kr_language_weak.rb:7:24: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n             testname: \"FAIR Champion: Metadata Knowledge Representation Language (weak)\",\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_kr_language_weak.rb:8:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n             testid: \"fc_metadata_kr_language_weak\",\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_kr_language_weak.rb:9:121: C: Layout/LineLength: Line is too long. [329/120]\n             description: \"Maturity Indicator to test if the metadata uses a formal language broadly applicable for knowledge representation.  This particular test takes a broad view of what defines a 'knowledge representation language'; in this evaluation, anything that can be represented as structured data will be accepted.\",\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_kr_language_weak.rb:28:12: C: [Correctable] Layout/FirstHashElementIndentation: Indent the right brace the same as the start of the line where the left brace is.\n           }\n           ^\napp/tests/fc_metadata_kr_language_weak.rb:29:10: W: [Correctable] Layout/DefEndAlignment: end at 29, 9 is not aligned with def at 4, 2.\n         end\n         ^^^\napp/tests/fc_metadata_kr_language_weak.rb:31:3: C: Metrics/AbcSize: Assignment Branch Condition size for fc_metadata_kr_language_weak is too high. [<10, 32, 7> 34.25/17]\n  def self.fc_metadata_kr_language_weak(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_kr_language_weak.rb:31:3: C: Metrics/MethodLength: Method has too many lines. [29/10]\n  def self.fc_metadata_kr_language_weak(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_kr_language_weak.rb:39:47: C: [Correctable] Style/RedundantSelf: Redundant self detected.\n    output.comments << \"INFO: TEST VERSION '#{self.fc_metadata_kr_language_weak_meta[:testversion]}'\\n\"\n                                              ^^^^\napp/tests/fc_metadata_kr_language_weak.rb:47:29: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    if metadata.guidtype == \"unknown\"\n                            ^^^^^^^^^\napp/tests/fc_metadata_kr_language_weak.rb:48:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      output.score = \"indeterminate\"\n                     ^^^^^^^^^^^^^^^\napp/tests/fc_metadata_kr_language_weak.rb:55:5: W: [Correctable] Lint/UselessAssignment: Useless assignment to variable - properties.\n    properties = FAIRChampion::Harvester.deep_dive_properties(hash)\n    ^^^^^^^^^^\napp/tests/fc_metadata_kr_language_weak.rb:62:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      output.score = \"pass\"\n                     ^^^^^^\napp/tests/fc_metadata_kr_language_weak.rb:64:11: C: [Correctable] Style/NumericPredicate: Use graph.size.positive? instead of graph.size > 0.\n    elsif graph.size > 0 # have we found anything yet?\n          ^^^^^^^^^^^^^^\napp/tests/fc_metadata_kr_language_weak.rb:64:11: C: [Correctable] Style/ZeroLengthPredicate: Use !empty? instead of size > 0.\n    elsif graph.size > 0 # have we found anything yet?\n          ^^^^^^^^^^^^^^\napp/tests/fc_metadata_kr_language_weak.rb:65:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      output.score = \"pass\"\n                     ^^^^^^\napp/tests/fc_metadata_kr_language_weak.rb:68:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      output.score = \"fail\"\n                     ^^^^^^\napp/tests/fc_metadata_kr_language_weak.rb:72:5: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n    return output.createEvaluationResponse\n    ^^^^^^\napp/tests/fc_metadata_kr_language_weak.rb:75:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_metadata_kr_language_weak.rb:76:3: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 2.\n  def self.fc_metadata_kr_language_weak_api\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_outward_links.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nrequire_relative File.dirname(__FILE__) + '/../lib/harvester.rb'\n^\napp/tests/fc_metadata_outward_links.rb:1:18: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nrequire_relative File.dirname(__FILE__) + '/../lib/harvester.rb'\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_outward_links.rb:3:1: C: Style/Documentation: Missing top-level documentation comment for class FAIRTest.\nclass FAIRTest\n^^^^^^^^^^^^^^\napp/tests/fc_metadata_outward_links.rb:4:3: C: Metrics/MethodLength: Method has too many lines. [24/10]\n  def self.fc_metadata_outward_links_meta ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_outward_links.rb:6:20: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n      testversion: HARVESTER_VERSION + ':' + 'Tst-2.0.0',\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_outward_links.rb:9:121: C: Layout/LineLength: Line is too long. [168/120]\n      description: 'Maturity Indicator to test if the metadata links outward to third-party resources.  It only tests metadata that can be represented as Linked Data.',\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_outward_links.rb:31:3: C: Metrics/AbcSize: Assignment Branch Condition size for fc_metadata_outward_links is too high. [<23, 60, 18> 66.73/17]\n  def self.fc_metadata_outward_links(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_outward_links.rb:31:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for fc_metadata_outward_links is too high. [14/7]\n  def self.fc_metadata_outward_links(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_outward_links.rb:31:3: C: Metrics/MethodLength: Method has too many lines. [56/10]\n  def self.fc_metadata_outward_links(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_outward_links.rb:31:3: C: Metrics/PerceivedComplexity: Perceived complexity for fc_metadata_outward_links is too high. [16/8]\n  def self.fc_metadata_outward_links(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_outward_links.rb:55:5: W: [Correctable] Lint/UselessAssignment: Useless assignment to variable - properties.\n    properties = FAIRChampion::Harvester.deep_dive_properties(hash)\n    ^^^^^^^^^^\napp/tests/fc_metadata_outward_links.rb:62:8: C: [Correctable] Style/NumericPredicate: Use g.size.positive? instead of g.size > 0.\n    if g.size > 0 # have we found anything yet?\n       ^^^^^^^^^^\napp/tests/fc_metadata_outward_links.rb:62:8: C: [Correctable] Style/ZeroLengthPredicate: Use !empty? instead of size > 0.\n    if g.size > 0 # have we found anything yet?\n       ^^^^^^^^^^\napp/tests/fc_metadata_outward_links.rb:100:121: C: Layout/LineLength: Line is too long. [145/120]\n      output.comments << \"SUCCESS: #{success} of the #{count} triples discovered in the linked metadata pointed to resources hosted elsewhere.  \"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_outward_links.rb:103:121: C: Layout/LineLength: Line is too long. [182/120]\n      output.comments << \"FAILURE: #{success} of the #{count} triples discovered in the linked metadata pointed to resources hosted elsewhere.  The minimum to pass this test is 1.  \"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_persistence.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nrequire_relative File.dirname(__FILE__) + '/../lib/harvester.rb'\n^\napp/tests/fc_metadata_persistence.rb:1:18: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nrequire_relative File.dirname(__FILE__) + '/../lib/harvester.rb'\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_persistence.rb:3:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_metadata_persistence.rb:4:1: C: Style/Documentation: Missing top-level documentation comment for class FAIRTest.\nclass FAIRTest\n^^^^^^^^^^^^^^\napp/tests/fc_metadata_persistence.rb:5:3: C: Metrics/MethodLength: Method has too many lines. [24/10]\n  def self.fc_metadata_persistence_meta ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_persistence.rb:6:5: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n    return {\n    ^^^^^^\napp/tests/fc_metadata_persistence.rb:7:5: C: [Correctable] Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n    testversion: HARVESTER_VERSION + ':' + 'Tst-2.0.0',\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_persistence.rb:7:18: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n    testversion: HARVESTER_VERSION + ':' + 'Tst-2.0.0',\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_persistence.rb:8:5: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.\n    testname:\"FAIR Champion: Metadata Persistence\",\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_persistence.rb:8:13: C: [Correctable] Layout/SpaceAfterColon: Space missing after colon.\n    testname:\"FAIR Champion: Metadata Persistence\",\n            ^\napp/tests/fc_metadata_persistence.rb:8:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    testname:\"FAIR Champion: Metadata Persistence\",\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_persistence.rb:9:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    testid: \"fc_metadata_persistence\",\n            ^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_persistence.rb:10:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    description: \"Metric to test if the metadata contains a persistence policy, explicitly identified by a persistencePolicy key (in hashed data) or a http://www.w3.org/2000/10/swap/pim/doc#persistencePolicy predicate in Linked Data.\",\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_persistence.rb:10:121: C: Layout/LineLength: Line is too long. [235/120]\n    description: \"Metric to test if the metadata contains a persistence policy, explicitly identified by a persistencePolicy key (in hashed data) or a http://www.w3.org/2000/10/swap/pim/doc#persistencePolicy predicate in Linked Data.\",\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_persistence.rb:29:3: C: [Correctable] Layout/FirstHashElementIndentation: Indent the right brace the same as the start of the line where the left brace is.\n  }\n  ^\napp/tests/fc_metadata_persistence.rb:30:1: W: [Correctable] Layout/DefEndAlignment: end at 30, 0 is not aligned with def at 5, 2.\nend\n^^^\napp/tests/fc_metadata_persistence.rb:32:3: C: Metrics/AbcSize: Assignment Branch Condition size for fc_metadata_persistence is too high. [<14, 50, 12> 53.29/17]\n  def self.fc_metadata_persistence(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_persistence.rb:32:3: C: Metrics/MethodLength: Method has too many lines. [46/10]\n  def self.fc_metadata_persistence(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_persistence.rb:32:3: C: Metrics/PerceivedComplexity: Perceived complexity for fc_metadata_persistence is too high. [10/8]\n  def self.fc_metadata_persistence(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_persistence.rb:40:47: C: [Correctable] Style/RedundantSelf: Redundant self detected.\n    output.comments << \"INFO: TEST VERSION '#{self.fc_metadata_persistence_meta[:testversion]}'\\n\"\n                                              ^^^^\napp/tests/fc_metadata_persistence.rb:46:5: W: [Correctable] Lint/UselessAssignment: Useless assignment to variable - properties.\n    properties = FAIRChampion::Harvester.deep_dive_properties(hash)\n    ^^^^^^^^^^\napp/tests/fc_metadata_persistence.rb:50:1: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 0 instead of 4).\n#############################################################################################################\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_persistence.rb:52:14: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n    g = graph  # shorter :-)\n             ^\napp/tests/fc_metadata_persistence.rb:53:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\napp/tests/fc_metadata_persistence.rb:54:8: C: [Correctable] Style/NumericPredicate: Use g.size.positive? instead of g.size > 0.\n    if g.size > 0  # have we found anything yet?\n       ^^^^^^^^^^\napp/tests/fc_metadata_persistence.rb:54:8: C: [Correctable] Style/ZeroLengthPredicate: Use !empty? instead of size > 0.\n    if g.size > 0  # have we found anything yet?\n       ^^^^^^^^^^\napp/tests/fc_metadata_persistence.rb:54:18: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n    if g.size > 0  # have we found anything yet?\n                 ^\napp/tests/fc_metadata_persistence.rb:55:127: C: Layout/LineLength: Line is too long. [140/120]\n      output.comments << \"INFO: Found linked data.  Testing for the 'http://www.w3.org/2000/10/swap/pim/doc#persistencePolicy' predicate.\\n\"\n                                                                                                                              ^^^^^^^^^^^^^^\napp/tests/fc_metadata_persistence.rb:56:28: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      query = SPARQL.parse(\"select ?o where {?s <http://www.w3.org/2000/10/swap/pim/doc#persistencePolicy> ?o}\")\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_persistence.rb:59:121: C: Layout/LineLength: Line is too long. [170/120]\n        output.comments << \"INFO: Found persistence policy predicate with #{results.first[:o]} as its value.  This should be a resolveable URL; Now testing resolution.\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_persistence.rb:60:9: C: Naming/VariableName: Use snake_case for variable names.\n        policyURI = results.first[:o].value\n        ^^^^^^^^^\napp/tests/fc_metadata_persistence.rb:61:16: C: Naming/VariableName: Use snake_case for variable names.\n        unless policyURI =~ /:\\/\\/\\w+\\.\\w+/  # the structure of a URI\n               ^^^^^^^^^\napp/tests/fc_metadata_persistence.rb:61:29: C: [Correctable] Style/RegexpLiteral: Use %r around regular expression.\n        unless policyURI =~ /:\\/\\/\\w+\\.\\w+/  # the structure of a URI\n                            ^^^^^^^^^^^^^^^\napp/tests/fc_metadata_persistence.rb:61:44: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n        unless policyURI =~ /:\\/\\/\\w+\\.\\w+/  # the structure of a URI\n                                           ^\napp/tests/fc_metadata_persistence.rb:62:121: C: Layout/LineLength: Line is too long. [207/120]\n          output.comments << \"FAILURE: http://www.w3.org/2000/10/swap/pim/doc#persistencePolicy states that the range of the property must be a resource.  The discovered value (#{polucyURI}) is not a URL.\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_persistence.rb:63:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n          output.score = \"fail\"\n                         ^^^^^^\napp/tests/fc_metadata_persistence.rb:66:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\napp/tests/fc_metadata_persistence.rb:67:15: W: [Correctable] Lint/UselessAssignment: Useless assignment to variable - body. Use _ or _body as a variable name to indicate that it won't be used.\n        head, body = Utils::fetch(policyURI, {\"Accept\" => \"*/*\"})  # returns HTTP object, or false\n              ^^^^\napp/tests/fc_metadata_persistence.rb:67:27: C: [Correctable] Style/ColonMethodCall: Do not use :: for method calls.\n        head, body = Utils::fetch(policyURI, {\"Accept\" => \"*/*\"})  # returns HTTP object, or false\n                          ^^\napp/tests/fc_metadata_persistence.rb:67:35: C: Naming/VariableName: Use snake_case for variable names.\n        head, body = Utils::fetch(policyURI, {\"Accept\" => \"*/*\"})  # returns HTTP object, or false\n                                  ^^^^^^^^^\napp/tests/fc_metadata_persistence.rb:67:46: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.\n        head, body = Utils::fetch(policyURI, {\"Accept\" => \"*/*\"})  # returns HTTP object, or false\n                                             ^\napp/tests/fc_metadata_persistence.rb:67:47: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n        head, body = Utils::fetch(policyURI, {\"Accept\" => \"*/*\"})  # returns HTTP object, or false\n                                              ^^^^^^^^\napp/tests/fc_metadata_persistence.rb:67:59: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n        head, body = Utils::fetch(policyURI, {\"Accept\" => \"*/*\"})  # returns HTTP object, or false\n                                                          ^^^^^\napp/tests/fc_metadata_persistence.rb:67:64: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.\n        head, body = Utils::fetch(policyURI, {\"Accept\" => \"*/*\"})  # returns HTTP object, or false\n                                                               ^\napp/tests/fc_metadata_persistence.rb:67:66: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n        head, body = Utils::fetch(policyURI, {\"Accept\" => \"*/*\"})  # returns HTTP object, or false\n                                                                 ^\napp/tests/fc_metadata_persistence.rb:70:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n          output.score = \"pass\"\n                         ^^^^^^\napp/tests/fc_metadata_persistence.rb:71:11: C: [Correctable] Style/IdenticalConditionalBranches: Move return output.createEvaluationResponse out of the conditional.\n          return output.createEvaluationResponse\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_persistence.rb:74:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n          output.score = \"fail\"\n                         ^^^^^^\napp/tests/fc_metadata_persistence.rb:75:11: C: [Correctable] Style/IdenticalConditionalBranches: Move return output.createEvaluationResponse out of the conditional.\n          return output.createEvaluationResponse\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_persistence.rb:80:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\napp/tests/fc_metadata_persistence.rb:81:9: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n    else \n        ^\napp/tests/fc_metadata_persistence.rb:85:24: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    if output.score == \"fail\"\n                       ^^^^^^\napp/tests/fc_metadata_persistence.rb:88:20: W: [Correctable] Lint/Void: Operator == used in void context.\n      output.score == \"indeterminate\"\n                   ^^\napp/tests/fc_metadata_persistence.rb:88:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      output.score == \"indeterminate\"\n                      ^^^^^^^^^^^^^^^\napp/tests/fc_metadata_persistence.rb:92:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_metadata_persistence.rb:93:5: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n    return output.createEvaluationResponse\n    ^^^^^^\napp/tests/fc_metadata_persistence.rb:96:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_metadata_persistence.rb:97:3: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 2.\n  def self.fc_metadata_persistence_api\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_protocol.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nrequire_relative File.dirname(__FILE__) + '/../lib/harvester.rb'\n^\napp/tests/fc_metadata_protocol.rb:1:18: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nrequire_relative File.dirname(__FILE__) + '/../lib/harvester.rb'\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_protocol.rb:3:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_metadata_protocol.rb:4:1: C: Style/Documentation: Missing top-level documentation comment for class FAIRTest.\nclass FAIRTest\n^^^^^^^^^^^^^^\napp/tests/fc_metadata_protocol.rb:5:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.\napp/tests/fc_metadata_protocol.rb:6:3: C: Metrics/MethodLength: Method has too many lines. [24/10]\n  def self.fc_metadata_protocol_meta ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_protocol.rb:7:5: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n    return {\n    ^^^^^^\napp/tests/fc_metadata_protocol.rb:8:5: C: [Correctable] Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n    testversion: HARVESTER_VERSION + ':' + 'Tst-2.0.0',\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_protocol.rb:8:18: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n    testversion: HARVESTER_VERSION + ':' + 'Tst-2.0.0',\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_protocol.rb:9:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    testname: \"FAIR Champion: Uses open free protocol for metadata retrieval\",\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_protocol.rb:10:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    testid: \"fc_metadata_protocol\",\n            ^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_protocol.rb:11:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    description: \"Metadata may be retrieved by an open and free protocol.  Tests metadata GUID for its resolution protocol.  Currently passes InChI Keys, DOIs, Handles, and URLs.  Recognition of other identifiers will be added upon request by the community.\",\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_protocol.rb:11:121: C: Layout/LineLength: Line is too long. [259/120]\n    description: \"Metadata may be retrieved by an open and free protocol.  Tests metadata GUID for its resolution protocol.  Currently passes InChI Keys, DOIs, Handles, and URLs.  Recognition of other identifiers will be added upon request by the community.\",\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_protocol.rb:30:3: C: [Correctable] Layout/FirstHashElementIndentation: Indent the right brace the same as the start of the line where the left brace is.\n  }\n  ^\napp/tests/fc_metadata_protocol.rb:31:1: W: [Correctable] Layout/DefEndAlignment: end at 31, 0 is not aligned with def at 6, 2.\nend\n^^^\napp/tests/fc_metadata_protocol.rb:33:3: C: Metrics/MethodLength: Method has too many lines. [16/10]\n  def self.fc_metadata_protocol(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_protocol.rb:41:47: C: [Correctable] Style/RedundantSelf: Redundant self detected.\n    output.comments << \"INFO: TEST VERSION '#{self.fc_metadata_protocol_meta[:testversion]}'\\n\"\n                                              ^^^^\napp/tests/fc_metadata_protocol.rb:45:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_metadata_protocol.rb:46:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\napp/tests/fc_metadata_protocol.rb:50:5: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 4 instead of 0).\n    # properties = FAIRChampion::Harvester.deep_dive_properties(hash)\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_protocol.rb:54:1: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 0 instead of 4).\n#############################################################################################################\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_protocol.rb:55:5: C: [Correctable] Style/UnlessElse: Do not use unless with else. Rewrite these with the positive case first.\n    unless type ...\n    ^^^^^^^^^^^\napp/tests/fc_metadata_protocol.rb:56:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      output.score = \"indeterminate\"\n                     ^^^^^^^^^^^^^^^\napp/tests/fc_metadata_protocol.rb:57:14: C: [Correctable] Layout/SpaceAroundMethodCallOperator: Avoid using spaces around a method call operator.\n      output. comments << \"INDETERMINATE: The identifier #{guid} did not match any known identification system.\\n\"\n             ^\napp/tests/fc_metadata_protocol.rb:58:7: C: [Correctable] Style/IdenticalConditionalBranches: Move return output.createEvaluationResponse out of the conditional.\n      return output.createEvaluationResponse\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_protocol.rb:58:7: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n      return output.createEvaluationResponse\n      ^^^^^^\napp/tests/fc_metadata_protocol.rb:60:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      output.score = \"pass\"\n                     ^^^^^^\napp/tests/fc_metadata_protocol.rb:62:7: C: [Correctable] Style/IdenticalConditionalBranches: Move return output.createEvaluationResponse out of the conditional.\n      return output.createEvaluationResponse\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_protocol.rb:62:7: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n      return output.createEvaluationResponse\n      ^^^^^^\napp/tests/fc_metadata_protocol.rb:66:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_metadata_protocol.rb:67:3: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 2.\n  def self.fc_metadata_protocol_api\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nrequire_relative File.dirname(__FILE__) + '/../lib/harvester.rb'\n^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:1:18: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nrequire_relative File.dirname(__FILE__) + '/../lib/harvester.rb'\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:3:1: C: Metrics/ClassLength: Class has too many lines. [113/100]\nclass FAIRTest ...\n^^^^^^^^^^^^^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:3:1: C: Style/Documentation: Missing top-level documentation comment for class FAIRTest.\nclass FAIRTest\n^^^^^^^^^^^^^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:4:3: C: Metrics/MethodLength: Method has too many lines. [24/10]\n  def self.fc_metadata_uses_fair_vocabularies_meta ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:6:20: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n      testversion: HARVESTER_VERSION + ':' + 'Tst-2.0.0',\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:9:121: C: Layout/LineLength: Line is too long. [123/120]\n      description: 'Maturity Indicator to test if the linked data metadata uses terms that resolve to linked (FAIR) data.',\n                                                                                                                        ^^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:31:3: C: Metrics/AbcSize: Assignment Branch Condition size for fc_metadata_uses_fair_vocabularies is too high. [<36, 106, 25> 114.7/17]\n  def self.fc_metadata_uses_fair_vocabularies(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:31:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for fc_metadata_uses_fair_vocabularies is too high. [18/7]\n  def self.fc_metadata_uses_fair_vocabularies(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:31:3: C: Metrics/MethodLength: Method has too many lines. [77/10]\n  def self.fc_metadata_uses_fair_vocabularies(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:31:3: C: Metrics/PerceivedComplexity: Perceived complexity for fc_metadata_uses_fair_vocabularies is too high. [19/8]\n  def self.fc_metadata_uses_fair_vocabularies(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:55:5: W: [Correctable] Lint/UselessAssignment: Useless assignment to variable - properties.\n    properties = FAIRChampion::Harvester.deep_dive_properties(hash)\n    ^^^^^^^^^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:64:63: C: [Correctable] Style/AndOr: Use || instead of or.\n      s.predicate unless s.predicate.value =~ %r{1999/xhtml/} or s.predicate.value =~ /rdf-syntax-ns/\n                                                              ^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:72:5: C: Metrics/BlockLength: Block has too many lines. [38/25]\n    hosthash.keys.each do |host| ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:72:14: C: [Correctable] Style/HashEachMethods: Use each_key instead of keys.each.\n    hosthash.keys.each do |host|\n             ^^^^^^^^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:73:34: C: [Correctable] Style/RedundantSort: Use min instead of sort...first.\n      predicate = hosthash[host].sort.first\n                                 ^^^^^^^^^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:80:7: C: [Correctable] Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.\n      output.comments << \"INFO:  resolution of DC predicate #{predicate.value} accepted\\n\"\n      \napp/tests/fc_metadata_uses_fair_vocabularies.rb:82:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.\n        success += hosthash[host].uniq.count\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:83:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.\n        next\n        ^^^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:85:7: C: [Correctable] Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.\n      output.comments << \"INFO:  resolution of VCARD predicate #{predicate.value} accepted\\n\"\n      \napp/tests/fc_metadata_uses_fair_vocabularies.rb:87:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.\n        success += hosthash[host].uniq.count\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:88:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.\n        next\n        ^^^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:90:7: C: [Correctable] Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.\n      output.comments << \"INFO:  resolution of DCAT predicate #{predicate.value} accepted\\n\"\n      \napp/tests/fc_metadata_uses_fair_vocabularies.rb:92:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.\n        success += hosthash[host].uniq.count\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:93:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.\n        next\n        ^^^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:95:7: C: [Correctable] Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.\n      output.comments << \"INFO:  resolution of FOAF predicate #{predicate.value} accepted\\n\"\n      \napp/tests/fc_metadata_uses_fair_vocabularies.rb:97:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.\n        success += hosthash[host].uniq.count\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:98:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.\n        next\n        ^^^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:102:121: C: Layout/LineLength: Line is too long. [122/120]\n      metadata2 = FAIRChampion::Harvester.resolveit(predicate.value) # this  sends the content-negotiation for linked data\n                                                                                                                        ^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:104:29: C: [Correctable] Style/NumericPredicate: Use g2.size.positive? instead of g2.size > 0.\n      output.comments << if g2.size > 0\n                            ^^^^^^^^^^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:104:29: C: [Correctable] Style/ZeroLengthPredicate: Use !empty? instead of size > 0.\n      output.comments << if g2.size > 0\n                            ^^^^^^^^^^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:105:26: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.\n                          \"INFO:  predicate #{predicate.value} resolved to linked data.\\n\"\n                         ^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:106:25: C: [Correctable] Layout/ElseAlignment: Align else with if.\n                        else\n                        ^^^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:108:25: W: [Correctable] Layout/EndAlignment: end at 108, 24 is not aligned with if at 104, 25.\n                        end\n                        ^^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:110:25: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.\n                        output.comments << \"INFO: If linked data was found in the previous line, it will now be tested by the following SPARQL query: 'select * where {<#{predicate.value}> ?p ?o}' \\n\"\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:110:121: C: Layout/LineLength: Line is too long. [199/120]\n                        output.comments << \"INFO: If linked data was found in the previous line, it will now be tested by the following SPARQL query: 'select * where {<#{predicate.value}> ?p ?o}' \\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:115:121: C: Layout/LineLength: Line is too long. [126/120]\n        output.comments << \"INFO: Resolving #{predicate.value}returned linked data, including that URI as a triple Subject.\\n\"\n                                                                                                                        ^^^^^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:119:121: C: Layout/LineLength: Line is too long. [162/120]\n        output.comments << \"WARN:  predicate #{predicate.value} was not found as the SUBJECT of a triple, indicating that it did not resolve to its definition.\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:123:8: C: [Correctable] Style/NumericPredicate: Use count.positive? instead of count > 0.\n    if count > 0 and success >= count * 0.66\n       ^^^^^^^^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:123:18: C: [Correctable] Style/AndOr: Use && instead of and.\n    if count > 0 and success >= count * 0.66\n                 ^^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:124:121: C: Layout/LineLength: Line is too long. [177/120]\n      output.comments << \"SUCCESS: #{success} of a total of #{count} predicates discovered in the metadata resolved to Linked Data data.  This is sufficient to pass the test.\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:126:11: C: [Correctable] Style/NumericPredicate: Use count.zero? instead of count == 0.\n    elsif count == 0\n          ^^^^^^^^^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:130:121: C: Layout/LineLength: Line is too long. [220/120]\n      output.comments << \"FAILURE: #{success} of a total of #{count} predicates discovered in the metadata resolved to Linked Data data.  The minimum to pass this test is 2/3 (with a minimum of 3 predicates in total).\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_metadata_uses_fair_vocabularies.rb:136:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_metadata_uses_fair_vocabularies.rb:137:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_metadata_uses_fair_vocabularies.rb:138:3: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 3.\n  def self.fc_metadata_uses_fair_vocabularies_api\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nrequire_relative File.dirname(__FILE__) + \"/../lib/harvester.rb\"\n^\napp/tests/fc_searchable.rb:1:18: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nrequire_relative File.dirname(__FILE__) + \"/../lib/harvester.rb\"\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:1:43: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nrequire_relative File.dirname(__FILE__) + \"/../lib/harvester.rb\"\n                                          ^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:3:1: C: Metrics/ClassLength: Class has too many lines. [263/100]\nclass FAIRTest ...\n^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:3:1: C: Style/Documentation: Missing top-level documentation comment for class FAIRTest.\nclass FAIRTest\n^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:4:3: C: Metrics/MethodLength: Method has too many lines. [24/10]\n  def self.fc_searchable_meta ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:5:5: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n    return {\n    ^^^^^^\napp/tests/fc_searchable.rb:6:14: C: [Correctable] Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n             testversion: HARVESTER_VERSION + \":\" + \"Tst-2.0.0\",\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:6:27: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n             testversion: HARVESTER_VERSION + \":\" + \"Tst-2.0.0\",\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:6:47: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n             testversion: HARVESTER_VERSION + \":\" + \"Tst-2.0.0\",\n                                              ^^^\napp/tests/fc_searchable.rb:6:53: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n             testversion: HARVESTER_VERSION + \":\" + \"Tst-2.0.0\",\n                                                    ^^^^^^^^^^^\napp/tests/fc_searchable.rb:7:24: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n             testname: \"FAIR Champion: Searchable in major search engine\",\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:8:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n             testid: \"fc_searchable\",\n                     ^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:9:27: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n             description: \"Tests whether a machine is able to discover the resource by search, using Microsoft Bing.\",\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:28:12: C: [Correctable] Layout/FirstHashElementIndentation: Indent the right brace the same as the start of the line where the left brace is.\n           }\n           ^\napp/tests/fc_searchable.rb:29:10: W: [Correctable] Layout/DefEndAlignment: end at 29, 9 is not aligned with def at 4, 2.\n         end\n         ^^^\napp/tests/fc_searchable.rb:31:3: C: Metrics/AbcSize: Assignment Branch Condition size for fc_searchable is too high. [<80, 259, 74> 281/17]\n  def self.fc_searchable(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:31:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for fc_searchable is too high. [61/7]\n  def self.fc_searchable(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:31:3: C: Metrics/MethodLength: Method has too many lines. [198/10]\n  def self.fc_searchable(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:31:3: C: Metrics/PerceivedComplexity: Perceived complexity for fc_searchable is too high. [66/8]\n  def self.fc_searchable(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:39:47: C: [Correctable] Style/RedundantSelf: Redundant self detected.\n    output.comments << \"INFO: TEST VERSION '#{self.fc_searchable_meta[:testversion]}'\\n\"\n                                              ^^^^\napp/tests/fc_searchable.rb:47:29: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    if metadata.guidtype == \"unknown\"\n                            ^^^^^^^^^\napp/tests/fc_searchable.rb:48:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      output.score = \"indeterminate\"\n                     ^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:54:5: W: [Correctable] Lint/UselessAssignment: Useless assignment to variable - graph.\n    graph = metadata.graph\n    ^^^^^\napp/tests/fc_searchable.rb:55:5: W: [Correctable] Lint/UselessAssignment: Useless assignment to variable - properties.\n    properties = FAIRChampion::Harvester.deep_dive_properties(hash)\n    ^^^^^^^^^^\napp/tests/fc_searchable.rb:63:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    title = \"\"\n            ^^\napp/tests/fc_searchable.rb:64:5: C: [Correctable] Style/For: Prefer each over for.\n    for x in 1..flatlist.length ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:66:7: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.\n      next if !term.is_a? String\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:66:7: C: [Correctable] Style/NegatedIf: Favor unless over if for negative conditions.\n      next if !term.is_a? String\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:67:7: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.\n      #warn term\n      ^^^^^^^^^^\napp/tests/fc_searchable.rb:69:28: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n        title = flatlist[x]  # the next thing should be the title\n                           ^\napp/tests/fc_searchable.rb:81:23: C: [Correctable] Style/RedundantSelf: Redundant self detected.\n      searchresults = self.callBing(title)\n                      ^^^^\napp/tests/fc_searchable.rb:83:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      if h[\"webPages\"]\n           ^^^^^^^^^^\napp/tests/fc_searchable.rb:84:113: C: [Correctable] Style/SymbolProc: Pass &:to_s as an argument to map instead of a block.\n        output.comments << \"INFO: found matches in Bing.  Checking for results that match any of #{finalURI.map { |b| b.to_s }}.\\n\"\n                                                                                                                ^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:84:121: C: [Correctable] Layout/LineLength: Line is too long. [131/120]\n        output.comments << \"INFO: found matches in Bing.  Checking for results that match any of #{finalURI.map { |b| b.to_s }}.\\n\"\n                                                                                                                        ^^^^^^^^^^^\napp/tests/fc_searchable.rb:85:9: C: Naming/VariableName: Use snake_case for variable names.\n        finalURI = finalURI.map { |b| b.downcase }  # make case insensitive search\n        ^^^^^^^^\napp/tests/fc_searchable.rb:85:20: C: Naming/VariableName: Use snake_case for variable names.\n        finalURI = finalURI.map { |b| b.downcase }  # make case insensitive search\n                   ^^^^^^^^\napp/tests/fc_searchable.rb:85:33: C: [Correctable] Style/SymbolProc: Pass &:downcase as an argument to map instead of a block.\n        finalURI = finalURI.map { |b| b.downcase }  # make case insensitive search\n                                ^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:85:51: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n        finalURI = finalURI.map { |b| b.downcase }  # make case insensitive search\n                                                  ^\napp/tests/fc_searchable.rb:86:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n        h[\"webPages\"][\"value\"].each do |p|\n          ^^^^^^^^^^\napp/tests/fc_searchable.rb:86:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n        h[\"webPages\"][\"value\"].each do |p|\n                      ^^^^^^^\napp/tests/fc_searchable.rb:87:14: C: Naming/VariableName: Use snake_case for variable names.\n          if finalURI.include?(p[\"url\"].downcase) # compare to the final URI from the Utils::fetch routine (the page of metadata)\n             ^^^^^^^^\napp/tests/fc_searchable.rb:87:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n          if finalURI.include?(p[\"url\"].downcase) # compare to the final URI from the Utils::fetch routine (the page of metadata)\n                                 ^^^^^\napp/tests/fc_searchable.rb:87:121: C: Layout/LineLength: Line is too long. [129/120]\n          if finalURI.include?(p[\"url\"].downcase) # compare to the final URI from the Utils::fetch routine (the page of metadata)\n                                                                                                                        ^^^^^^^^^\napp/tests/fc_searchable.rb:88:80: C: [Correctable] Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.\n            output.comments << \"SUCCESS: found a search record referencing #{p[\"url\"]} based on an exact-match title search against Bing.\\n  \"\n                                                                               ^^^^^\napp/tests/fc_searchable.rb:88:121: C: Layout/LineLength: Line is too long. [142/120]\n            output.comments << \"SUCCESS: found a search record referencing #{p[\"url\"]} based on an exact-match title search against Bing.\\n  \"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:89:28: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n            output.score = \"pass\"\n                           ^^^^^^\napp/tests/fc_searchable.rb:92:32: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n        unless output.score == \"pass\"\n                               ^^^^^^\napp/tests/fc_searchable.rb:93:76: C: Naming/VariableName: Use snake_case for variable names.\n          output.comments << \"INFO: No results from Bing included any of #{finalURI.map { |b| b.to_s }}.\\n\"\n                                                                           ^^^^^^^^\napp/tests/fc_searchable.rb:93:89: C: [Correctable] Style/SymbolProc: Pass &:to_s as an argument to map instead of a block.\n          output.comments << \"INFO: No results from Bing included any of #{finalURI.map { |b| b.to_s }}.\\n\"\n                                                                                        ^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:102:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    keywords = \"\"\n               ^^\napp/tests/fc_searchable.rb:103:5: C: [Correctable] Style/For: Prefer each over for.\n    for x in 1..flatlist.length ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:105:7: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.\n      #warn term\n      ^^^^^^^^^^\napp/tests/fc_searchable.rb:106:7: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.\n      next if !term.is_a? String\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:106:7: C: [Correctable] Style/NegatedIf: Favor unless over if for negative conditions.\n      next if !term.is_a? String\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:108:31: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n        keywords = flatlist[x]  # the next thing should be the keywords\n                              ^\napp/tests/fc_searchable.rb:112:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.\n    #keywords = keywords.gsub!(\"\\,\", \"\")\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:121:23: C: [Correctable] Style/RedundantSelf: Redundant self detected.\n      searchresults = self.callBing(keywords)\n                      ^^^^\napp/tests/fc_searchable.rb:123:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      if h[\"webPages\"]\n           ^^^^^^^^^^\napp/tests/fc_searchable.rb:124:100: C: Naming/VariableName: Use snake_case for variable names.\n        output.comments << \"INFO: found matches in Bing.  Checking for results that match any of #{finalURI.map { |b| b.to_s }}\\n\"\n                                                                                                   ^^^^^^^^\napp/tests/fc_searchable.rb:124:113: C: [Correctable] Style/SymbolProc: Pass &:to_s as an argument to map instead of a block.\n        output.comments << \"INFO: found matches in Bing.  Checking for results that match any of #{finalURI.map { |b| b.to_s }}\\n\"\n                                                                                                                ^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:124:121: C: [Correctable] Layout/LineLength: Line is too long. [130/120]\n        output.comments << \"INFO: found matches in Bing.  Checking for results that match any of #{finalURI.map { |b| b.to_s }}\\n\"\n                                                                                                                        ^^^^^^^^^^\napp/tests/fc_searchable.rb:125:9: C: Naming/VariableName: Use snake_case for variable names.\n        finalURI = finalURI.map { |b| b.downcase }  # make case insensitive search\n        ^^^^^^^^\napp/tests/fc_searchable.rb:125:20: C: Naming/VariableName: Use snake_case for variable names.\n        finalURI = finalURI.map { |b| b.downcase }  # make case insensitive search\n                   ^^^^^^^^\napp/tests/fc_searchable.rb:125:33: C: [Correctable] Style/SymbolProc: Pass &:downcase as an argument to map instead of a block.\n        finalURI = finalURI.map { |b| b.downcase }  # make case insensitive search\n                                ^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:125:51: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n        finalURI = finalURI.map { |b| b.downcase }  # make case insensitive search\n                                                  ^\napp/tests/fc_searchable.rb:126:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n        h[\"webPages\"][\"value\"].each do |p|\n          ^^^^^^^^^^\napp/tests/fc_searchable.rb:126:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n        h[\"webPages\"][\"value\"].each do |p|\n                      ^^^^^^^\napp/tests/fc_searchable.rb:127:14: C: Naming/VariableName: Use snake_case for variable names.\n          if finalURI.include?(p[\"url\"].downcase) # compare to the final URI from the Utils::fetch routine (the page of metadata)\n             ^^^^^^^^\napp/tests/fc_searchable.rb:127:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n          if finalURI.include?(p[\"url\"].downcase) # compare to the final URI from the Utils::fetch routine (the page of metadata)\n                                 ^^^^^\napp/tests/fc_searchable.rb:127:121: C: Layout/LineLength: Line is too long. [129/120]\n          if finalURI.include?(p[\"url\"].downcase) # compare to the final URI from the Utils::fetch routine (the page of metadata)\n                                                                                                                        ^^^^^^^^^\napp/tests/fc_searchable.rb:128:74: C: [Correctable] Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.\n            output.comments << \"SUCCESS: found a search hit matching #{p[\"url\"]} using metadata keywords in search on Bing.\\n  \"\n                                                                         ^^^^^\napp/tests/fc_searchable.rb:128:121: C: Layout/LineLength: Line is too long. [128/120]\n            output.comments << \"SUCCESS: found a search hit matching #{p[\"url\"]} using metadata keywords in search on Bing.\\n  \"\n                                                                                                                        ^^^^^^^^\napp/tests/fc_searchable.rb:129:28: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n            output.score = \"pass\"\n                           ^^^^^^\napp/tests/fc_searchable.rb:132:32: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n        unless output.score == \"pass\"\n                               ^^^^^^\napp/tests/fc_searchable.rb:133:91: C: Naming/VariableName: Use snake_case for variable names.\n          output.comments << \"INFO: No keyword search results from Bing included any of #{finalURI.map { |b| b.to_s }}.\\n\"\n                                                                                          ^^^^^^^^\napp/tests/fc_searchable.rb:133:104: C: [Correctable] Style/SymbolProc: Pass &:to_s as an argument to map instead of a block.\n          output.comments << \"INFO: No keyword search results from Bing included any of #{finalURI.map { |b| b.to_s }}.\\n\"\n                                                                                                       ^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:133:121: C: [Correctable] Layout/LineLength: Line is too long. [122/120]\n          output.comments << \"INFO: No keyword search results from Bing included any of #{finalURI.map { |b| b.to_s }}.\\n\"\n                                                                                                                        ^^\napp/tests/fc_searchable.rb:144:8: C: [Correctable] Style/NumericPredicate: Use g.size.positive? instead of g.size > 0.\n    if g.size > 0 # have we found anything\n       ^^^^^^^^^^\napp/tests/fc_searchable.rb:144:8: C: [Correctable] Style/ZeroLengthPredicate: Use !empty? instead of size > 0.\n    if g.size > 0 # have we found anything\n       ^^^^^^^^^^\napp/tests/fc_searchable.rb:145:121: C: Layout/LineLength: Line is too long. [127/120]\n      output.comments << \"INFO: Testing Linked Data-formatted metadata for any predicate that contains 'title' in any case.\\n \"\n                                                                                                                        ^^^^^^^\napp/tests/fc_searchable.rb:146:121: C: Layout/LineLength: Line is too long. [157/120]\n      query = SPARQL.parse(\"select distinct ?o where {?s ?p ?o  FILTER(CONTAINS(lcase(str(?p)), 'title'))}\") # find predicate containing \"title\", take object\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:152:11: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.\n          next if seen[res[:o].to_s]\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:157:11: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.\n          #warn \"looking for #{title}\"\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:161:27: C: [Correctable] Style/RedundantSelf: Redundant self detected.\n          searchresults = self.callBing(title)  # search bing\n                          ^^^^\napp/tests/fc_searchable.rb:161:47: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n          searchresults = self.callBing(title)  # search bing\n                                              ^\napp/tests/fc_searchable.rb:162:11: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.\n          #warn JSON::pretty_generate(JSON(searchresults))\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:163:40: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n          h = JSON.parse(searchresults)  # parse json\n                                       ^\napp/tests/fc_searchable.rb:164:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n          if h[\"webPages\"] # are there results\n               ^^^^^^^^^^\napp/tests/fc_searchable.rb:165:106: C: Naming/VariableName: Use snake_case for variable names.\n            output.comments << \"INFO: Bing found results for#{title}.  Checking for results that match #{finalURI.map { |b| b.to_s }}.\\n\"\n                                                                                                         ^^^^^^^^\napp/tests/fc_searchable.rb:165:119: C: [Correctable] Style/SymbolProc: Pass &:to_s as an argument to map instead of a block.\n            output.comments << \"INFO: Bing found results for#{title}.  Checking for results that match #{finalURI.map { |b| b.to_s }}.\\n\"\n                                                                                                                      ^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:165:121: C: [Correctable] Layout/LineLength: Line is too long. [137/120]\n            output.comments << \"INFO: Bing found results for#{title}.  Checking for results that match #{finalURI.map { |b| b.to_s }}.\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:166:13: C: Naming/VariableName: Use snake_case for variable names.\n            finalURI = finalURI.map { |b| b.downcase }  # make case insensitive search\n            ^^^^^^^^\napp/tests/fc_searchable.rb:166:24: C: Naming/VariableName: Use snake_case for variable names.\n            finalURI = finalURI.map { |b| b.downcase }  # make case insensitive search\n                       ^^^^^^^^\napp/tests/fc_searchable.rb:166:37: C: [Correctable] Style/SymbolProc: Pass &:downcase as an argument to map instead of a block.\n            finalURI = finalURI.map { |b| b.downcase }  # make case insensitive search\n                                    ^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:166:55: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n            finalURI = finalURI.map { |b| b.downcase }  # make case insensitive search\n                                                      ^\napp/tests/fc_searchable.rb:167:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n            h[\"webPages\"][\"value\"].each do |p| # for each matching pge do\n              ^^^^^^^^^^\napp/tests/fc_searchable.rb:167:27: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n            h[\"webPages\"][\"value\"].each do |p| # for each matching pge do\n                          ^^^^^^^\napp/tests/fc_searchable.rb:168:15: C: Metrics/BlockNesting: Avoid more than 3 levels of block nesting.\n              if finalURI.include?(p[\"url\"].downcase) # compare to the final URI from the Utils::fetch routine (the page of metadata) ...\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:168:18: C: Naming/VariableName: Use snake_case for variable names.\n              if finalURI.include?(p[\"url\"].downcase) # compare to the final URI from the Utils::fetch routine (the page of metadata)\n                 ^^^^^^^^\napp/tests/fc_searchable.rb:168:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n              if finalURI.include?(p[\"url\"].downcase) # compare to the final URI from the Utils::fetch routine (the page of metadata)\n                                     ^^^^^\napp/tests/fc_searchable.rb:168:121: C: Layout/LineLength: Line is too long. [133/120]\n              if finalURI.include?(p[\"url\"].downcase) # compare to the final URI from the Utils::fetch routine (the page of metadata)\n                                                                                                                        ^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:169:84: C: [Correctable] Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.\n                output.comments << \"SUCCESS: found a search record referencing #{p[\"url\"]} based on an exact-match title search against Bing.\\n  \"\n                                                                                   ^^^^^\napp/tests/fc_searchable.rb:169:121: C: Layout/LineLength: Line is too long. [146/120]\n                output.comments << \"SUCCESS: found a search record referencing #{p[\"url\"]} based on an exact-match title search against Bing.\\n  \"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:170:32: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n                output.score = \"pass\"\n                               ^^^^^^\napp/tests/fc_searchable.rb:173:13: C: Metrics/BlockNesting: Avoid more than 3 levels of block nesting.\n            unless output.score == \"pass\" ...\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:173:36: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n            unless output.score == \"pass\"\n                                   ^^^^^^\napp/tests/fc_searchable.rb:174:80: C: Naming/VariableName: Use snake_case for variable names.\n              output.comments << \"INFO: No results from Bing included any of #{finalURI.map { |b| b.to_s }}.\\n\"\n                                                                               ^^^^^^^^\napp/tests/fc_searchable.rb:174:93: C: [Correctable] Style/SymbolProc: Pass &:to_s as an argument to map instead of a block.\n              output.comments << \"INFO: No results from Bing included any of #{finalURI.map { |b| b.to_s }}.\\n\"\n                                                                                            ^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:181:121: C: Layout/LineLength: Line is too long. [155/120]\n      query = SPARQL.parse(\"select distinct ?o where {?s ?p ?o  FILTER(CONTAINS(lcase(str(?p)), 'name'))}\") # find predicate containing \"name\", take object\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:187:11: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.\n          next if seen[res[:o].to_s]\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:191:11: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.\n          #warn \"looking for #{title}\"\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:195:27: C: [Correctable] Style/RedundantSelf: Redundant self detected.\n          searchresults = self.callBing(title)  # search bing\n                          ^^^^\napp/tests/fc_searchable.rb:195:47: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n          searchresults = self.callBing(title)  # search bing\n                                              ^\napp/tests/fc_searchable.rb:196:11: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.\n          #warn JSON::pretty_generate(JSON(searchresults))\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:197:40: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n          h = JSON.parse(searchresults)  # parse json\n                                       ^\napp/tests/fc_searchable.rb:198:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n          if h[\"webPages\"] # are there results\n               ^^^^^^^^^^\napp/tests/fc_searchable.rb:199:106: C: Naming/VariableName: Use snake_case for variable names.\n            output.comments << \"INFO: Bing found results for#{title}.  Checking for results that match #{finalURI.map { |b| b.to_s }}.\\n\"\n                                                                                                         ^^^^^^^^\napp/tests/fc_searchable.rb:199:119: C: [Correctable] Style/SymbolProc: Pass &:to_s as an argument to map instead of a block.\n            output.comments << \"INFO: Bing found results for#{title}.  Checking for results that match #{finalURI.map { |b| b.to_s }}.\\n\"\n                                                                                                                      ^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:199:121: C: [Correctable] Layout/LineLength: Line is too long. [137/120]\n            output.comments << \"INFO: Bing found results for#{title}.  Checking for results that match #{finalURI.map { |b| b.to_s }}.\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:200:13: C: Naming/VariableName: Use snake_case for variable names.\n            finalURI = finalURI.map { |b| b.downcase }  # make case insensitive search\n            ^^^^^^^^\napp/tests/fc_searchable.rb:200:24: C: Naming/VariableName: Use snake_case for variable names.\n            finalURI = finalURI.map { |b| b.downcase }  # make case insensitive search\n                       ^^^^^^^^\napp/tests/fc_searchable.rb:200:37: C: [Correctable] Style/SymbolProc: Pass &:downcase as an argument to map instead of a block.\n            finalURI = finalURI.map { |b| b.downcase }  # make case insensitive search\n                                    ^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:200:55: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n            finalURI = finalURI.map { |b| b.downcase }  # make case insensitive search\n                                                      ^\napp/tests/fc_searchable.rb:201:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n            h[\"webPages\"][\"value\"].each do |p| # for each matching pge do\n              ^^^^^^^^^^\napp/tests/fc_searchable.rb:201:27: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n            h[\"webPages\"][\"value\"].each do |p| # for each matching pge do\n                          ^^^^^^^\napp/tests/fc_searchable.rb:202:15: C: Metrics/BlockNesting: Avoid more than 3 levels of block nesting.\n              if finalURI.include?(p[\"url\"].downcase) # compare to the final URI from the Utils::fetch routine (the page of metadata) ...\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:202:18: C: Naming/VariableName: Use snake_case for variable names.\n              if finalURI.include?(p[\"url\"].downcase) # compare to the final URI from the Utils::fetch routine (the page of metadata)\n                 ^^^^^^^^\napp/tests/fc_searchable.rb:202:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n              if finalURI.include?(p[\"url\"].downcase) # compare to the final URI from the Utils::fetch routine (the page of metadata)\n                                     ^^^^^\napp/tests/fc_searchable.rb:202:121: C: Layout/LineLength: Line is too long. [133/120]\n              if finalURI.include?(p[\"url\"].downcase) # compare to the final URI from the Utils::fetch routine (the page of metadata)\n                                                                                                                        ^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:203:84: C: [Correctable] Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.\n                output.comments << \"SUCCESS: found a search record referencing #{p[\"url\"]} based on an exact-match title search against Bing.\\n  \"\n                                                                                   ^^^^^\napp/tests/fc_searchable.rb:203:121: C: Layout/LineLength: Line is too long. [146/120]\n                output.comments << \"SUCCESS: found a search record referencing #{p[\"url\"]} based on an exact-match title search against Bing.\\n  \"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:204:32: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n                output.score = \"pass\"\n                               ^^^^^^\napp/tests/fc_searchable.rb:207:13: C: Metrics/BlockNesting: Avoid more than 3 levels of block nesting.\n            unless output.score == \"pass\" ...\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:207:36: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n            unless output.score == \"pass\"\n                                   ^^^^^^\napp/tests/fc_searchable.rb:208:80: C: Naming/VariableName: Use snake_case for variable names.\n              output.comments << \"INFO: No results from Bing included any of #{finalURI.map { |b| b.to_s }}.\\n\"\n                                                                               ^^^^^^^^\napp/tests/fc_searchable.rb:208:93: C: [Correctable] Style/SymbolProc: Pass &:to_s as an argument to map instead of a block.\n              output.comments << \"INFO: No results from Bing included any of #{finalURI.map { |b| b.to_s }}.\\n\"\n                                                                                            ^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:221:8: C: [Correctable] Style/NumericPredicate: Use g.size.positive? instead of g.size > 0.\n    if g.size > 0 # have we found anything\n       ^^^^^^^^^^\napp/tests/fc_searchable.rb:221:8: C: [Correctable] Style/ZeroLengthPredicate: Use !empty? instead of size > 0.\n    if g.size > 0 # have we found anything\n       ^^^^^^^^^^\napp/tests/fc_searchable.rb:222:121: C: Layout/LineLength: Line is too long. [129/120]\n      output.comments << \"INFO: Testing Linked Data-formatted metadata for any predicate that contains 'keyword' in any case.\\n \"\n                                                                                                                        ^^^^^^^^^\napp/tests/fc_searchable.rb:223:121: C: Layout/LineLength: Line is too long. [159/120]\n      query = SPARQL.parse(\"select distinct ?o where {?s ?p ?o  FILTER(CONTAINS(lcase(str(?p)), 'keyword'))}\") # find predicate containing \"title\", take object\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:226:31: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n        seen = Hash.new(false)  # appaerntly, distinct isn't working in the sparql...??\n                              ^\napp/tests/fc_searchable.rb:227:9: C: Metrics/BlockLength: Block has too many lines. [30/25]\n        results.each do |res| ...\n        ^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:228:11: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.\n          next if seen[res[:o].to_s]\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:230:34: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n          keywords = res[:o].to_s  # get the keywords\n                                 ^\napp/tests/fc_searchable.rb:236:27: C: [Correctable] Style/RedundantSelf: Redundant self detected.\n          searchresults = self.callBing(keywords)  # search bing\n                          ^^^^\napp/tests/fc_searchable.rb:236:50: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n          searchresults = self.callBing(keywords)  # search bing\n                                                 ^\napp/tests/fc_searchable.rb:237:11: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.\n          #warn \"keywords #{keywords}\"\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:238:11: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.\n          #warn \"results: #{searchresults}\"\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:239:15: C: [Correctable] Style/EmptyLiteral: Use hash literal {} instead of Hash.new.\n          h = Hash.new\n              ^^^^^^^^\napp/tests/fc_searchable.rb:241:42: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n            h = JSON.parse(searchresults)  # parse json\n                                         ^\napp/tests/fc_searchable.rb:242:11: C: [Correctable] Style/RescueStandardError: Avoid rescuing without specifying an error class.\n          rescue\n          ^^^^^^\napp/tests/fc_searchable.rb:243:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n            warn \"whatever came back from Bing was not parsable JSON\"\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:244:121: C: Layout/LineLength: Line is too long. [126/120]\n            output.comments << \"INFO: Bing returned a non-JSON response, indicating that the request failed for some reason\\n\"\n                                                                                                                        ^^^^^^\napp/tests/fc_searchable.rb:247:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n          if h[\"webPages\"] # are there results\n               ^^^^^^^^^^\napp/tests/fc_searchable.rb:248:114: C: Naming/VariableName: Use snake_case for variable names.\n            output.comments << \"INFO: Bing found matches using #{keywords}. Testing matches for a reference to #{finalURI.map { |b| b.to_s }}\\n\"\n                                                                                                                 ^^^^^^^^\napp/tests/fc_searchable.rb:248:121: C: [Correctable] Layout/LineLength: Line is too long. [144/120]\n            output.comments << \"INFO: Bing found matches using #{keywords}. Testing matches for a reference to #{finalURI.map { |b| b.to_s }}\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:248:127: C: [Correctable] Style/SymbolProc: Pass &:to_s as an argument to map instead of a block.\n            output.comments << \"INFO: Bing found matches using #{keywords}. Testing matches for a reference to #{finalURI.map { |b| b.to_s }}\\n\"\n                                                                                                                              ^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:249:13: C: Naming/VariableName: Use snake_case for variable names.\n            finalURI = finalURI.map { |b| b.downcase }  # make case insensitive search\n            ^^^^^^^^\napp/tests/fc_searchable.rb:249:24: C: Naming/VariableName: Use snake_case for variable names.\n            finalURI = finalURI.map { |b| b.downcase }  # make case insensitive search\n                       ^^^^^^^^\napp/tests/fc_searchable.rb:249:37: C: [Correctable] Style/SymbolProc: Pass &:downcase as an argument to map instead of a block.\n            finalURI = finalURI.map { |b| b.downcase }  # make case insensitive search\n                                    ^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:249:55: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n            finalURI = finalURI.map { |b| b.downcase }  # make case insensitive search\n                                                      ^\napp/tests/fc_searchable.rb:250:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n            h[\"webPages\"][\"value\"].each do |p| # for each matching pge do\n              ^^^^^^^^^^\napp/tests/fc_searchable.rb:250:27: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n            h[\"webPages\"][\"value\"].each do |p| # for each matching pge do\n                          ^^^^^^^\napp/tests/fc_searchable.rb:251:15: C: Metrics/BlockNesting: Avoid more than 3 levels of block nesting.\n              if finalURI.include?(p[\"url\"].downcase) # compare to the final URI from the Utils::fetch routine (the page of metadata) ...\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:251:18: C: Naming/VariableName: Use snake_case for variable names.\n              if finalURI.include?(p[\"url\"].downcase) # compare to the final URI from the Utils::fetch routine (the page of metadata)\n                 ^^^^^^^^\napp/tests/fc_searchable.rb:251:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n              if finalURI.include?(p[\"url\"].downcase) # compare to the final URI from the Utils::fetch routine (the page of metadata)\n                                     ^^^^^\napp/tests/fc_searchable.rb:251:121: C: Layout/LineLength: Line is too long. [133/120]\n              if finalURI.include?(p[\"url\"].downcase) # compare to the final URI from the Utils::fetch routine (the page of metadata)\n                                                                                                                        ^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:252:84: C: [Correctable] Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.\n                output.comments << \"SUCCESS: found a search record referencing #{p[\"url\"]} based on a keyword search against Bing.\\n  \"\n                                                                                   ^^^^^\napp/tests/fc_searchable.rb:252:121: C: Layout/LineLength: Line is too long. [135/120]\n                output.comments << \"SUCCESS: found a search record referencing #{p[\"url\"]} based on a keyword search against Bing.\\n  \"\n                                                                                                                        ^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:253:32: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n                output.score = \"pass\"\n                               ^^^^^^\napp/tests/fc_searchable.rb:256:13: C: Metrics/BlockNesting: Avoid more than 3 levels of block nesting.\n            unless output.score == \"pass\" ...\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:256:36: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n            unless output.score == \"pass\"\n                                   ^^^^^^\napp/tests/fc_searchable.rb:257:80: C: Naming/VariableName: Use snake_case for variable names.\n              output.comments << \"INFO: No results from Bing included any of #{finalURI.map { |b| b.to_s }}.\\n\"\n                                                                               ^^^^^^^^\napp/tests/fc_searchable.rb:257:93: C: [Correctable] Style/SymbolProc: Pass &:to_s as an argument to map instead of a block.\n              output.comments << \"INFO: No results from Bing included any of #{finalURI.map { |b| b.to_s }}.\\n\"\n                                                                                            ^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:266:28: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    unless output.score == \"pass\"\n                           ^^^^^^\napp/tests/fc_searchable.rb:270:5: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n    return output.createEvaluationResponse\n    ^^^^^^\napp/tests/fc_searchable.rb:273:3: C: Metrics/AbcSize: Assignment Branch Condition size for callBing is too high. [<13, 29, 10> 33.32/17]\n  def self.callBing(phrase) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:273:3: C: Metrics/MethodLength: Method has too many lines. [27/10]\n  def self.callBing(phrase) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:273:12: C: Naming/MethodName: Use snake_case for method names.\n  def self.callBing(phrase)\n           ^^^^^^^^\napp/tests/fc_searchable.rb:276:18: C: [Correctable] Style/RegexpLiteral: Use %r around regular expression.\n    phrase.gsub!(/https?\\:\\/\\/[^\\,]+/, \"\")  # need to eliminate URLs that appear as keywords\n                 ^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:276:25: C: [Correctable] Style/RedundantRegexpEscape: Redundant escape inside regexp literal\n    phrase.gsub!(/https?\\:\\/\\/[^\\,]+/, \"\")  # need to eliminate URLs that appear as keywords\n                        ^^\napp/tests/fc_searchable.rb:276:40: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    phrase.gsub!(/https?\\:\\/\\/[^\\,]+/, \"\")  # need to eliminate URLs that appear as keywords\n                                       ^^\napp/tests/fc_searchable.rb:276:43: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n    phrase.gsub!(/https?\\:\\/\\/[^\\,]+/, \"\")  # need to eliminate URLs that appear as keywords\n                                          ^\napp/tests/fc_searchable.rb:277:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    uri = \"https://api.cognitive.microsoft.com\"\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:278:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    path = \"/bing/v7.0/search\"\n           ^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:280:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    accesskey = ENV[\"BING_API\"] || \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n                    ^^^^^^^^^^\napp/tests/fc_searchable.rb:280:36: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    accesskey = ENV[\"BING_API\"] || \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:283:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      warn \"Invalid Bing Search API subscription key!\"\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:284:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      warn \"Please add this to your environment.\"\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:287:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    if accesskey == \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:294:41: C: [Correctable] Style/RedundantRegexpEscape: Redundant escape inside regexp literal\n      match = escapedphrase.match(/(.*)(\\%.*)/)  # trim off any partially escaped things at the end\n                                        ^^\napp/tests/fc_searchable.rb:294:48: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n      match = escapedphrase.match(/(.*)(\\%.*)/)  # trim off any partially escaped things at the end\n                                               ^\napp/tests/fc_searchable.rb:299:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.\n    #warn \"HTTP URI: #{uri}\"\n    ^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:302:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    request[\"Ocp-Apim-Subscription-Key\"] = accesskey\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:304:52: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.\n    response = Net::HTTP.start(uri.host, uri.port, :use_ssl => uri.scheme == \"https\") do |http|\n                                                   ^^^^^^^^^^^\napp/tests/fc_searchable.rb:304:78: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    response = Net::HTTP.start(uri.host, uri.port, :use_ssl => uri.scheme == \"https\") do |http|\n                                                                             ^^^^^^^\napp/tests/fc_searchable.rb:307:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.\n    #warn \"HTTP response: #{response.inspect}\"\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_searchable.rb:308:5: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n    return response.body\n    ^^^^^^\napp/tests/fc_searchable.rb:311:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_searchable.rb:312:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_searchable.rb:313:3: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 3.\n  def self.fc_searchable_api\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_structured_metadata.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nrequire_relative File.dirname(__FILE__) + \"/../lib/harvester.rb\"\n^\napp/tests/fc_structured_metadata.rb:1:18: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nrequire_relative File.dirname(__FILE__) + \"/../lib/harvester.rb\"\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_structured_metadata.rb:1:43: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nrequire_relative File.dirname(__FILE__) + \"/../lib/harvester.rb\"\n                                          ^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_structured_metadata.rb:3:1: C: Style/Documentation: Missing top-level documentation comment for class FAIRTest.\nclass FAIRTest\n^^^^^^^^^^^^^^\napp/tests/fc_structured_metadata.rb:4:3: C: Metrics/MethodLength: Method has too many lines. [24/10]\n  def self.fc_structured_metadata_meta ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_structured_metadata.rb:5:5: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n    return {\n    ^^^^^^\napp/tests/fc_structured_metadata.rb:6:14: C: [Correctable] Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n             testversion: HARVESTER_VERSION + \":\" + \"Tst-2.0.0\",\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_structured_metadata.rb:6:27: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n             testversion: HARVESTER_VERSION + \":\" + \"Tst-2.0.0\",\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_structured_metadata.rb:6:47: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n             testversion: HARVESTER_VERSION + \":\" + \"Tst-2.0.0\",\n                                              ^^^\napp/tests/fc_structured_metadata.rb:6:53: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n             testversion: HARVESTER_VERSION + \":\" + \"Tst-2.0.0\",\n                                                    ^^^^^^^^^^^\napp/tests/fc_structured_metadata.rb:9:121: C: Layout/LineLength: Line is too long. [210/120]\n             description: 'Tests whether a machine is able to find structured metadata.  This could be (for example) RDFa, embedded json, json-ld, or content-negotiated structured metadata such as RDF Turtle.',\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_structured_metadata.rb:28:12: C: [Correctable] Layout/FirstHashElementIndentation: Indent the right brace the same as the start of the line where the left brace is.\n           }\n           ^\napp/tests/fc_structured_metadata.rb:29:10: W: [Correctable] Layout/DefEndAlignment: end at 29, 9 is not aligned with def at 4, 2.\n         end\n         ^^^\napp/tests/fc_structured_metadata.rb:31:3: C: Metrics/AbcSize: Assignment Branch Condition size for fc_structured_metadata is too high. [<10, 32, 7> 34.25/17]\n  def self.fc_structured_metadata(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_structured_metadata.rb:31:3: C: Metrics/MethodLength: Method has too many lines. [29/10]\n  def self.fc_structured_metadata(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_structured_metadata.rb:39:47: C: [Correctable] Style/RedundantSelf: Redundant self detected.\n    output.comments << \"INFO: TEST VERSION '#{self.fc_structured_metadata_meta[:testversion]}'\\n\"\n                                              ^^^^\napp/tests/fc_structured_metadata.rb:48:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      output.score = \"indeterminate\"\n                     ^^^^^^^^^^^^^^^\napp/tests/fc_structured_metadata.rb:55:5: W: [Correctable] Lint/UselessAssignment: Useless assignment to variable - properties.\n    properties = FAIRChampion::Harvester.deep_dive_properties(hash)\n    ^^^^^^^^^^\napp/tests/fc_structured_metadata.rb:59:1: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 0 instead of 4).\n#############################################################################################################\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_structured_metadata.rb:61:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_structured_metadata.rb:63:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      output.score = \"pass\"\n                     ^^^^^^\napp/tests/fc_structured_metadata.rb:65:11: C: [Correctable] Style/NumericPredicate: Use graph.size.positive? instead of graph.size > 0.\n    elsif graph.size > 0  # have we found anything yet?\n          ^^^^^^^^^^^^^^\napp/tests/fc_structured_metadata.rb:65:11: C: [Correctable] Style/ZeroLengthPredicate: Use !empty? instead of size > 0.\n    elsif graph.size > 0  # have we found anything yet?\n          ^^^^^^^^^^^^^^\napp/tests/fc_structured_metadata.rb:65:25: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n    elsif graph.size > 0  # have we found anything yet?\n                        ^\napp/tests/fc_structured_metadata.rb:66:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      output.score = \"pass\"\n                     ^^^^^^\napp/tests/fc_structured_metadata.rb:69:19: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.\n      output.score=\"fail\"\n                  ^\napp/tests/fc_structured_metadata.rb:69:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      output.score=\"fail\"\n                   ^^^^^^\napp/tests/fc_structured_metadata.rb:73:5: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n    return output.createEvaluationResponse\n    ^^^^^^\napp/tests/fc_structured_metadata.rb:76:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_structured_metadata.rb:77:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_structured_metadata.rb:78:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_structured_metadata.rb:79:3: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 4.\n  def self.fc_structured_metadata_api\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_unique_identifier.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nrequire_relative File.dirname(__FILE__) + '/../lib/harvester.rb'\n^\napp/tests/fc_unique_identifier.rb:1:18: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nrequire_relative File.dirname(__FILE__) + '/../lib/harvester.rb'\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_unique_identifier.rb:3:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_unique_identifier.rb:4:1: C: Style/Documentation: Missing top-level documentation comment for class FAIRTest.\nclass FAIRTest\n^^^^^^^^^^^^^^\napp/tests/fc_unique_identifier.rb:5:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.\napp/tests/fc_unique_identifier.rb:6:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/fc_unique_identifier.rb:7:3: C: Metrics/MethodLength: Method has too many lines. [24/10]\n  def self.fc_unique_identifier_meta ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_unique_identifier.rb:8:5: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n    return {\n    ^^^^^^\napp/tests/fc_unique_identifier.rb:9:5: C: [Correctable] Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n    testversion: HARVESTER_VERSION + ':' + 'Tst-2.0.0',\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_unique_identifier.rb:9:18: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n    testversion: HARVESTER_VERSION + ':' + 'Tst-2.0.0',\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_unique_identifier.rb:10:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    testname: \"FAIR Champion: Unique Identifier\",\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_unique_identifier.rb:11:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    testid: \"fc_unique_identifier\",\n            ^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_unique_identifier.rb:12:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    description: \"Metric to test if the metadata resource has a unique identifier.  This is done by comparing the GUID to the patterns (by regexp) of known GUID schemas such as URLs and DOIs.  Known schema are registered in FAIRSharing (https://fairsharing.org/standards/?q=&selected_facets=type_exact:identifier%20schema)\",\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_unique_identifier.rb:12:121: C: Layout/LineLength: Line is too long. [324/120]\n    description: \"Metric to test if the metadata resource has a unique identifier.  This is done by comparing the GUID to the patterns (by regexp) of known GUID schemas such as URLs and DOIs.  Known schema are registered in FAIRSharing (https://fairsharing.org/standards/?q=&selected_facets=type_exact:identifier%20schema)\",\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_unique_identifier.rb:31:3: C: [Correctable] Layout/FirstHashElementIndentation: Indent the right brace the same as the start of the line where the left brace is.\nWarning: the running version of Bundler (2.1.4) is older than the version that created the lockfile (2.5.5). We suggest you to upgrade to the version that created the lockfile by running `gem install bundler:2.5.5`.\n  }\n  ^\napp/tests/fc_unique_identifier.rb:32:1: W: [Correctable] Layout/DefEndAlignment: end at 32, 0 is not aligned with def at 7, 2.\nend\n^^^\napp/tests/fc_unique_identifier.rb:34:3: C: Metrics/MethodLength: Method has too many lines. [15/10]\n  def self.fc_unique_identifier(guid:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_unique_identifier.rb:42:47: C: [Correctable] Style/RedundantSelf: Redundant self detected.\n    output.comments << \"INFO: TEST VERSION '#{self.fc_unique_identifier_meta[:testversion]}'\\n\"\n                                              ^^^^\napp/tests/fc_unique_identifier.rb:47:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      output.score = \"indeterminate\"\n                     ^^^^^^^^^^^^^^^\napp/tests/fc_unique_identifier.rb:48:121: C: Layout/LineLength: Line is too long. [125/120]\n      output.comments << \"INDETERMINATE: The identifier #{guid} did not match any known globally unique identitier system.\\n\"\n                                                                                                                        ^^^^^\napp/tests/fc_unique_identifier.rb:54:5: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 4 instead of 0).\n    # properties = FAIRChampion::Harvester.deep_dive_properties(hash)\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_unique_identifier.rb:58:1: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 0 instead of 4).\n#############################################################################################################\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/fc_unique_identifier.rb:60:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    output.score = \"pass\"\n                   ^^^^^^\napp/tests/fc_unique_identifier.rb:61:5: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n    return output.createEvaluationResponse\n    ^^^^^^\napp/tests/fc_unique_identifier.rb:64:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\napp/tests/fc_unique_identifier.rb:66:3: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 3.\n  def self.fc_unique_identifier_api\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nfair-core-tests.gemspec:5:1: W: [Correctable] Gemspec/RequireMFA: metadata['rubygems_mfa_required'] must be set to 'true'.\nGem::Specification.new do |spec| ...\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nfair-core-tests.gemspec:21:36: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n  spec.metadata['changelog_uri'] = spec.homepage + '/blob/master/CHANGELOG.md'\n                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n42 files inspected, 1499 offenses detected, 1001 offenses autocorrectable\n\nTip: Based on detected gems, the following RuboCop extension libraries might be helpful:\n  * rubocop-rake (https://rubygems.org/gems/rubocop-rake)\n  * rubocop-rspec (https://rubygems.org/gems/rubocop-rspec)\n\nYou can opt out of this message by adding the following to your config (see https://docs.rubocop.org/rubocop/extensions.html#extension-suggestions for more options):\n  AllCops:\n    SuggestExtensions: false",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/FAIR-Core-Tests.git.assess.sqaaas/job/main/1/execution/node/97/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/FAIR-Core-Tests.git.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {}
                        }
                    ],
                    "valid": false,
                    "required_for_next_level_badge": false
                }
            },
            "coverage": {
                "percentage": 0,
                "total_subcriteria": 1,
                "success_subcriteria": 0
            }
        },
        "QC.Ver": {
            "valid": true,
            "subcriteria": {
                "QC.Ver01.0": {
                    "description": "Are tags being used for releasing software",
                    "requirement_level": "MUST",
                    "hint": "Git tags are a convenient way to release software. This subcriterion checks if any git tag is present in the code history. More info on it-scm.com/book/en/v2/Git-Basics-Tagging\" target=\"_blank\">git tagging</a>",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "The code repository uses tags for releasing new software versions",
                            "plugin": {
                                "name": "report2sqaaas-plugin-is_semver",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "get_git_tags.py",
                                "lang": "Semantic Versioning",
                                "version": "latest",
                                "docker": {
                                    "dockerfile": "QC.Ver/Dockerfile",
                                    "reviewed": "2022-05-10"
                                },
                                "ci": {
                                    "name": "QC.Ver github.com/OSTrails/FAIR-Core-Tests get_git_tags.py",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "get_git_tags.py"
                                    ],
                                    "stdout_text": "['1.0.0']",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/FAIR-Core-Tests.git.assess.sqaaas/job/main/1/execution/node/106/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/FAIR-Core-Tests.git.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": [
                                "1.0.0"
                            ]
                        }
                    ],
                    "valid": true
                },
                "QC.Ver01": {
                    "description": "Is the latest release compliant with Semantic Versioning (SemVer) specification?",
                    "requirement_level": "SHOULD",
                    "hint": "Latest tag must be compliant with <a href=\"https://semver.org\" target=\"_blank\">SemVer specification</a>",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "Latest release tag 1.0.0 is SemVer compliant",
                            "plugin": {
                                "name": "report2sqaaas-plugin-is_semver",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "get_git_tags.py",
                                "lang": "Semantic Versioning",
                                "version": "latest",
                                "docker": {
                                    "dockerfile": "QC.Ver/Dockerfile",
                                    "reviewed": "2022-05-10"
                                },
                                "ci": {
                                    "name": "QC.Ver github.com/OSTrails/FAIR-Core-Tests get_git_tags.py",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "get_git_tags.py"
                                    ],
                                    "stdout_text": "['1.0.0']",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/FAIR-Core-Tests.git.assess.sqaaas/job/main/1/execution/node/106/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/FAIR-Core-Tests.git.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": [
                                "1.0.0"
                            ]
                        }
                    ],
                    "valid": true
                },
                "QC.Ver02": {
                    "description": "Are all release tags with Semantic Versioning (SemVer) specification?",
                    "requirement_level": "SHOULD",
                    "hint": "Existent release tags shall be <a href=\"https://semver.org\" target=\"_blank\">SemVer</a> compliant for this subcriterion to be successful",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "All release tags are SemVer compliant",
                            "plugin": {
                                "name": "report2sqaaas-plugin-is_semver",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "get_git_tags.py",
                                "lang": "Semantic Versioning",
                                "version": "latest",
                                "docker": {
                                    "dockerfile": "QC.Ver/Dockerfile",
                                    "reviewed": "2022-05-10"
                                },
                                "ci": {
                                    "name": "QC.Ver github.com/OSTrails/FAIR-Core-Tests get_git_tags.py",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "get_git_tags.py"
                                    ],
                                    "stdout_text": "['1.0.0']",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/FAIR-Core-Tests.git.assess.sqaaas/job/main/1/execution/node/106/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/FAIR-Core-Tests.git.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": [
                                "1.0.0"
                            ]
                        }
                    ],
                    "valid": true
                }
            },
            "coverage": {
                "percentage": 100,
                "total_subcriteria": 3,
                "success_subcriteria": 3
            }
        },
        "QC.Met": {
            "valid": false,
            "subcriteria": {
                "QC.Met01": {
                    "description": "Is the software citable?",
                    "valid": false,
                    "hint": "The two formats for software citation supported by SQAaaS are: 1) <a href=\"https://codemeta.github.io/\" target=\"_blank\">CodeMeta</a> and 2) <a href=\"https://citation-file-format.github.io/\" target=\"_blank\">Citation File Format (CFF)</a>. While CodeMeta provides you with a more comprehensive description, CFF is a more lightweight, good-enough approach to software (with built-in support by GitHub) citation. Both provide tools (<a href=\"https://codemeta.github.io/codemeta-generator/\" target=\"_blank\">CodeMeta generator</a>, <a href=\"https://citation-file-format.github.io/cff-initializer-javascript/#/\" target=\"_blank\">CFFINIT</a>)to easily generate a working citation file. Once having the file, be sure to add it to the root path of your code repo.",
                    "evidence": [
                        {
                            "valid": false,
                            "message": "No matching files found for language <CodeMeta> in repository searching by extensions or filenames\nNo matching files found for language <Citation File Format> in repository searching by extensions or filenames"
                        }
                    ],
                    "required_for_next_level_badge": false
                }
            },
            "coverage": {
                "percentage": 0,
                "total_subcriteria": 1,
                "success_subcriteria": 0
            }
        },
        "QC.Sec": {
            "valid": false,
            "subcriteria": {
                "QC.Sec02": {
                    "description": "Is the source code passing Static Analysis Security Testing (SAST)?",
                    "valid": false,
                    "hint": "Please check & solve the security weaknesses found by the SAST tool",
                    "evidence": [
                        {
                            "valid": false,
                            "message": "No matching files found for language <Python> in repository searching by extensions or filenames\nNo matching files found for language <Go> in repository searching by extensions or filenames"
                        }
                    ],
                    "required_for_next_level_badge": false
                }
            },
            "coverage": {
                "percentage": 0,
                "total_subcriteria": 1,
                "success_subcriteria": 0
            }
        },
        "QC.Uni": {
            "valid": false,
            "subcriteria": {
                "QC.Uni01": {
                    "description": "Are the tests passing through an automated means?",
                    "valid": false,
                    "hint": "Please check & solve the failing test cases found by the {tool_name} tool",
                    "evidence": [
                        {
                            "valid": false,
                            "message": "No matching files found for language <Python> in repository searching by extensions or filenames"
                        }
                    ],
                    "required_for_next_level_badge": false
                }
            },
            "coverage": {
                "percentage": 0,
                "total_subcriteria": 1,
                "success_subcriteria": 0
            }
        }
    },
    "badge": {
        "software": {
            "criteria": {
                "bronze": {
                    "to_fulfill": [
                        "QC.Acc",
                        "QC.Lic",
                        "QC.Doc"
                    ],
                    "missing": [
                        "QC.Doc"
                    ],
                    "fulfilled": [
                        "QC.Acc",
                        "QC.Lic"
                    ]
                },
                "silver": {
                    "to_fulfill": [
                        "QC.Lic",
                        "QC.Doc",
                        "QC.Acc",
                        "QC.Ver",
                        "QC.Met"
                    ],
                    "missing": [
                        "QC.Doc",
                        "QC.Met"
                    ],
                    "fulfilled": [
                        "QC.Acc",
                        "QC.Lic",
                        "QC.Ver"
                    ]
                },
                "gold": {
                    "to_fulfill": [
                        "QC.Lic",
                        "QC.Uni",
                        "QC.Doc",
                        "QC.Acc",
                        "QC.Ver",
                        "QC.Met",
                        "QC.Sec",
                        "QC.Sty"
                    ],
                    "missing": [
                        "QC.Uni",
                        "QC.Doc",
                        "QC.Met",
                        "QC.Sec",
                        "QC.Sty"
                    ],
                    "fulfilled": [
                        "QC.Acc",
                        "QC.Lic",
                        "QC.Ver"
                    ]
                }
            },
            "data": {}
        }
    }
}